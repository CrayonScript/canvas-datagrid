{"version":3,"file":"canvas-datagrid.module.js","sources":["../lib/defaults.js","../lib/component.js","../lib/draw.js","../node_modules/is-printable-key-event/dist/index.js","../lib/events.js","../lib/touch.js","../lib/intf.js","../lib/contextMenu.js","../lib/dom.js","../lib/publicMethods.js","../lib/main.js"],"sourcesContent":["/*jslint browser: true, unparam: true, todo: true*/\n/*globals define: true, MutationObserver: false, requestAnimationFrame: false, performance: false, btoa: false*/\n\n'use strict';\nexport default function (self) {\n  self.defaults = {\n    attributes: [\n      ['allowColumnReordering', true],\n      ['allowColumnResize', true],\n      ['allowColumnResizeFromCell', false],\n      ['allowFreezingRows', false],\n      ['allowFreezingColumns', false],\n      ['allowMovingSelection', true],\n      ['allowRowHeaderResize', true],\n      ['allowRowReordering', false],\n      ['allowRowResize', true],\n      ['allowRowResizeFromCell', false],\n      ['allowSorting', true],\n      ['autoGenerateSchema', false],\n      ['autoResizeColumns', false],\n      ['autoResizeRows', false],\n      ['blanksText', '(Blanks)'],\n      ['borderDragBehavior', 'none'],\n      ['borderResizeZone', 10],\n      ['clearSettingsOptionText', 'Clear saved settings'],\n      ['columnHeaderClickBehavior', 'sort'],\n      ['columnSelectorHiddenText', '&nbsp;&nbsp;&nbsp;'],\n      ['columnSelectorText', 'Add/Remove columns'],\n      ['columnSelectorVisibleText', '\\u2713'],\n      ['contextHoverScrollAmount', 2],\n      ['contextHoverScrollRateMs', 5],\n      ['copyHeadersOnSelectAll', true],\n      ['copyText', 'Copy'],\n      ['debug', false],\n      ['editable', true],\n      ['ellipsisText', '...'],\n      ['filterOptionText', 'Filter %s'],\n      ['filterTextPrefix', '(filtered) '],\n      ['globalRowResize', false],\n      ['hideColumnText', 'Hide %s'],\n      ['maxAutoCompleteItems', 200],\n      ['multiLine', false],\n      ['name', ''],\n      ['pageUpDownOverlap', 1],\n      ['pasteText', 'Paste'],\n      ['persistantSelectionMode', false],\n      ['removeFilterOptionText', 'Remove filter on %s'],\n      ['reorderDeadZone', 3],\n      ['resizeScrollZone', 20],\n      ['rowGrabZoneSize', 5],\n      ['saveAppearance', true],\n      ['scrollAnimationPPSThreshold', 0.75],\n      ['scrollPointerLock', false],\n      ['scrollRepeatRate', 75],\n      ['selectionFollowsActiveCell', false],\n      ['selectionHandleBehavior', 'none'],\n      ['selectionMode', 'cell'],\n      ['selectionScrollIncrement', 20],\n      ['selectionScrollZone', 20],\n      ['showClearSettingsOption', true],\n      ['showColumnHeaders', true],\n      ['showColumnSelector', true],\n      ['showCopy', false],\n      ['showFilter', true],\n      ['showNewRow', false],\n      ['showOrderByOption', true],\n      ['showOrderByOptionTextAsc', 'Order by %s ascending'],\n      ['showOrderByOptionTextDesc', 'Order by %s descending'],\n      ['showPaste', false],\n      ['showPerformance', false],\n      ['showRowHeaders', true],\n      ['showRowNumbers', true],\n      ['singleSelectionMode', false],\n      ['snapToRow', false],\n      ['touchContextMenuTimeMs', 800],\n      ['touchDeadZone', 3],\n      ['touchEasingMethod', 'easeOutQuad'],\n      ['touchReleaseAcceleration', 1000],\n      ['touchReleaseAnimationDurationMs', 2000],\n      ['touchScrollZone', 20],\n      ['touchSelectHandleZone', 20],\n      ['touchZoomSensitivity', 0.005],\n      ['touchZoomMin', 0.5],\n      ['touchZoomMax', 1.75],\n      ['maxPixelRatio', 2],\n      ['tree', false],\n      ['treeHorizontalScroll', false],\n    ],\n    styles: [\n      ['activeCellBackgroundColor', 'rgba(255, 255, 255, 1)'],\n      ['activeCellBorderColor', 'rgba(110, 168, 255, 1)'],\n      ['activeCellBorderWidth', 1],\n      ['activeCellColor', 'rgba(0, 0, 0, 1)'],\n      ['activeCellFont', '16px sans-serif'],\n      ['activeCellHoverBackgroundColor', 'rgba(255, 255, 255, 1)'],\n      ['activeCellHorizontalAlignment', 'left'],\n      ['activeCellHoverColor', 'rgba(0, 0, 0, 1)'],\n      ['activeCellOverlayBorderColor', 'rgba(66, 133, 244, 1)'],\n      ['activeCellOverlayBorderWidth', 1],\n      ['activeCellPaddingBottom', 5],\n      ['activeCellPaddingLeft', 5],\n      ['activeCellPaddingRight', 5],\n      ['activeCellPaddingTop', 5],\n      ['activeCellSelectedBackgroundColor', 'rgba(236, 243, 255, 1)'],\n      ['activeCellSelectedColor', 'rgba(0, 0, 0, 1)'],\n      ['activeCellVerticalAlignment', 'center'],\n      ['activeColumnHeaderCellBackgroundColor', 'rgba(225, 225, 225, 1)'],\n      ['activeColumnHeaderCellColor', 'rgba(0, 0, 0, 1)'],\n      ['activeRowHeaderCellBackgroundColor', 'rgba(225, 225, 225, 1)'],\n      ['activeRowHeaderCellColor', 'rgba(0, 0, 0, 1)'],\n      ['autocompleteBottomMargin', 60],\n      ['autosizeHeaderCellPadding', 8],\n      ['autosizePadding', 5],\n      ['cellAutoResizePadding', 13],\n      ['cellBackgroundColor', 'rgba(255, 255, 255, 1)'],\n      ['cellBorderColor', 'rgba(195, 199, 202, 1)'],\n      ['cellBorderWidth', 1],\n      ['cellColor', 'rgba(0, 0, 0, 1)'],\n      ['cellFont', '16px sans-serif'],\n      ['cellGridHeight', 250],\n      ['cellHeight', 24],\n      ['cellHeightWithChildGrid', 150],\n      ['cellHorizontalAlignment', 'left'],\n      ['cellHoverBackgroundColor', 'rgba(255, 255, 255, 1)'],\n      ['cellHoverColor', 'rgba(0, 0, 0, 1)'],\n      ['cellPaddingBottom', 5],\n      ['cellPaddingLeft', 5],\n      ['cellPaddingRight', 5],\n      ['cellPaddingTop', 5],\n      ['cellSelectedBackgroundColor', 'rgba(236, 243, 255, 1)'],\n      ['cellSelectedColor', 'rgba(0, 0, 0, 1)'],\n      ['cellVerticalAlignment', 'center'],\n      ['cellWidth', 250],\n      ['cellWidthWithChildGrid', 250],\n      ['cellWhiteSpace', 'nowrap'],\n      ['cellLineHeight', 1],\n      ['cellLineSpacing', 3],\n      ['childContextMenuArrowColor', 'rgba(43, 48, 43, 1)'],\n      ['childContextMenuArrowHTML', '&#x25BA;'],\n      ['childContextMenuMarginLeft', -11],\n      ['childContextMenuMarginTop', -6],\n      ['columnHeaderCellBackgroundColor', 'rgba(240, 240, 240, 1)'],\n      ['columnHeaderCellBorderColor', 'rgba(172, 172, 172, 1)'],\n      ['columnHeaderCellBorderWidth', 1],\n      ['columnHeaderCellCapBackgroundColor', 'rgba(240, 240, 240, 1)'],\n      ['columnHeaderCellCapBorderColor', 'rgba(172, 172, 172, 1)'],\n      ['columnHeaderCellCapBorderWidth', 1],\n      ['columnHeaderCellColor', 'rgba(50, 50, 50, 1)'],\n      ['columnHeaderCellFont', '16px sans-serif'],\n      ['columnHeaderCellHeight', 25],\n      ['columnHeaderCellHorizontalAlignment', 'left'],\n      ['columnHeaderCellHoverBackgroundColor', 'rgba(235, 235, 235, 1)'],\n      ['columnHeaderCellHoverColor', 'rgba(0, 0, 0, 1)'],\n      ['columnHeaderCellPaddingBottom', 5],\n      ['columnHeaderCellPaddingLeft', 5],\n      ['columnHeaderCellPaddingRight', 5],\n      ['columnHeaderCellPaddingTop', 5],\n      ['columnHeaderCellVerticalAlignment', 'center'],\n      ['columnHeaderOrderByArrowBorderColor', 'rgba(195, 199, 202, 1)'],\n      ['columnHeaderOrderByArrowBorderWidth', 1],\n      ['columnHeaderOrderByArrowColor', 'rgba(155, 155, 155, 1)'],\n      ['columnHeaderOrderByArrowHeight', 8],\n      ['columnHeaderOrderByArrowMarginLeft', 0],\n      ['columnHeaderOrderByArrowMarginRight', 5],\n      ['columnHeaderOrderByArrowMarginTop', 6],\n      ['columnHeaderOrderByArrowWidth', 13],\n      ['contextFilterButtonBorder', 'solid 1px rgba(158, 163, 169, 1)'],\n      ['contextFilterButtonBorderRadius', '3px'],\n      ['contextFilterButtonHTML', '&#x25BC;'],\n      ['contextFilterInputBackground', 'rgba(255,255,255,1)'],\n      ['contextFilterInputBorder', 'solid 1px rgba(158, 163, 169, 1)'],\n      ['contextFilterInputBorderRadius', '0'],\n      ['contextFilterInputColor', 'rgba(0,0,0,1)'],\n      ['contextFilterInputFontFamily', 'sans-serif'],\n      ['contextFilterInputFontSize', '14px'],\n      ['contextFilterInvalidRegExpBackground', 'rgba(180, 6, 1, 1)'],\n      ['contextFilterInvalidRegExpColor', 'rgba(255, 255, 255, 1)'],\n      ['contextMenuArrowColor', 'rgba(43, 48, 43, 1)'],\n      ['contextMenuArrowDownHTML', '&#x25BC;'],\n      ['contextMenuArrowUpHTML', '&#x25B2;'],\n      ['contextMenuBackground', 'rgba(240, 240, 240, 1)'],\n      ['contextMenuBorder', 'solid 1px rgba(158, 163, 169, 1)'],\n      ['contextMenuBorderRadius', '3px'],\n      ['contextMenuChildArrowFontSize', '12px'],\n      ['contextMenuColor', 'rgba(43, 48, 43, 1)'],\n      ['contextMenuCursor', 'default'],\n      ['contextMenuFilterButtonFontFamily', 'sans-serif'],\n      ['contextMenuFilterButtonFontSize', '10px'],\n      ['contextMenuFilterInvalidExpresion', 'rgba(237, 155, 156, 1)'],\n      ['contextMenuFontFamily', 'sans-serif'],\n      ['contextMenuFontSize', '16px'],\n      ['contextMenuHoverBackground', 'rgba(182, 205, 250, 1)'],\n      ['contextMenuHoverColor', 'rgba(43, 48, 153, 1)'],\n      ['contextMenuItemBorderRadius', '3px'],\n      ['contextMenuItemMargin', '2px'],\n      ['contextMenuLabelDisplay', 'inline-block'],\n      ['contextMenuLabelMargin', '0 3px 0 0'],\n      ['contextMenuLabelMaxWidth', '700px'],\n      ['contextMenuLabelMinWidth', '75px'],\n      ['contextMenuMarginLeft', 3],\n      ['contextMenuMarginTop', -3],\n      ['contextMenuOpacity', '0.98'],\n      ['contextMenuPadding', '2px'],\n      ['contextMenuWindowMargin', 30],\n      ['contextMenuZIndex', 10000],\n      ['cornerCellBackgroundColor', 'rgba(240, 240, 240, 1)'],\n      ['cornerCellBorderColor', 'rgba(202, 202, 202, 1)'],\n      ['debugBackgroundColor', 'rgba(0, 0, 0, .0)'],\n      ['debugColor', 'rgba(255, 15, 24, 1)'],\n      ['debugEntitiesColor', 'rgba(76, 231, 239, 1.00)'],\n      ['debugFont', '11px sans-serif'],\n      ['debugPerfChartBackground', 'rgba(29, 25, 26, 1.00)'],\n      ['debugPerfChartTextColor', 'rgba(255, 255, 255, 0.8)'],\n      ['debugPerformanceColor', 'rgba(252, 255, 37, 1.00)'],\n      ['debugScrollHeightColor', 'rgba(248, 33, 103, 1.00)'],\n      ['debugScrollWidthColor', 'rgba(66, 255, 27, 1.00)'],\n      ['debugTouchPPSXColor', 'rgba(246, 102, 24, 1.00)'],\n      ['debugTouchPPSYColor', 'rgba(186, 0, 255, 1.00)'],\n      ['display', 'inline-block'],\n      ['editCellBackgroundColor', 'white'],\n      ['editCellBorder', 'solid 1px rgba(110, 168, 255, 1)'],\n      ['editCellBoxShadow', '0 2px 5px rgba(0,0,0,0.4)'],\n      ['editCellColor', 'black'],\n      ['editCellFontFamily', 'sans-serif'],\n      ['editCellFontSize', '16px'],\n      ['editCellPaddingLeft', 4],\n      ['editCellZIndex', 10000],\n      ['frozenMarkerHoverColor', 'rgba(236, 243, 255, 1)'],\n      ['frozenMarkerHoverBorderColor', 'rgba(110, 168, 255, 1)'],\n      ['frozenMarkerActiveColor', 'rgba(236, 243, 255, 1)'],\n      ['frozenMarkerActiveBorderColor', 'rgba(110, 168, 255, 1)'],\n      ['frozenMarkerColor', 'rgba(222, 222, 222, 1)'],\n      ['frozenMarkerBorderColor', 'rgba(168, 168, 168, 1)'],\n      ['frozenMarkerBorderWidth', 1],\n      ['frozenMarkerWidth', 2],\n      ['gridBackgroundColor', 'rgba(240, 240, 240, 1)'],\n      ['gridBorderCollapse', 'collapse'],\n      ['gridBorderColor', 'rgba(202, 202, 202, 1)'],\n      ['gridBorderWidth', 1],\n      ['height', 'auto'],\n      ['maxHeight', 'inherit'],\n      ['maxWidth', 'inherit'],\n      ['minColumnWidth', 45],\n      ['minHeight', 'inherit'],\n      ['minRowHeight', 24],\n      ['minWidth', 'inherit'],\n      ['mobileContextMenuMargin', 10],\n      ['mobileEditInputHeight', 30],\n      ['mobileEditFontFamily', 'sans-serif'],\n      ['mobileEditFontSize', '16px'],\n      ['moveOverlayBorderWidth', 1],\n      ['moveOverlayBorderColor', 'rgba(66, 133, 244, 1)'],\n      ['moveOverlayBorderSegments', '12, 7'],\n      ['name', 'default'],\n      ['overflowY', 'auto'],\n      ['overflowX', 'auto'],\n      ['reorderMarkerBackgroundColor', 'rgba(0, 0, 0, 0.1)'],\n      ['reorderMarkerBorderColor', 'rgba(0, 0, 0, 0.2)'],\n      ['reorderMarkerBorderWidth', 1.25],\n      ['reorderMarkerIndexBorderColor', 'rgba(66, 133, 244, 1)'],\n      ['reorderMarkerIndexBorderWidth', 2.75],\n      ['rowHeaderCellBackgroundColor', 'rgba(240, 240, 240, 1)'],\n      ['rowHeaderCellBorderColor', 'rgba(200, 200, 200, 1)'],\n      ['rowHeaderCellBorderWidth', 1],\n      ['rowHeaderCellColor', 'rgba(50, 50, 50, 1)'],\n      ['rowHeaderCellFont', '16px sans-serif'],\n      ['rowHeaderCellHeight', 25],\n      ['rowHeaderCellHorizontalAlignment', 'left'],\n      ['rowHeaderCellHoverBackgroundColor', 'rgba(235, 235, 235, 1)'],\n      ['rowHeaderCellHoverColor', 'rgba(0, 0, 0, 1)'],\n      ['rowHeaderCellPaddingBottom', 5],\n      ['rowHeaderCellPaddingLeft', 5],\n      ['rowHeaderCellPaddingRight', 5],\n      ['rowHeaderCellPaddingTop', 5],\n      ['rowHeaderCellSelectedBackgroundColor', 'rgba(217, 217, 217, 1)'],\n      ['rowHeaderCellSelectedColor', 'rgba(50, 50, 50, 1)'],\n      ['rowHeaderCellVerticalAlignment', 'center'],\n      ['rowHeaderCellWidth', 57],\n      ['scrollBarActiveColor', 'rgba(125, 125, 125, 1)'],\n      ['scrollBarBackgroundColor', 'rgba(240, 240, 240, 1)'],\n      ['scrollBarBorderColor', 'rgba(202, 202, 202, 1)'],\n      ['scrollBarBorderWidth', 0.5],\n      ['scrollBarBoxBorderRadius', 4.125],\n      ['scrollBarBoxColor', 'rgba(192, 192, 192, 1)'],\n      ['scrollBarBoxMargin', 2],\n      ['scrollBarBoxMinSize', 15],\n      ['scrollBarBoxWidth', 8],\n      ['scrollBarCornerBackgroundColor', 'rgba(240, 240, 240, 1)'],\n      ['scrollBarCornerBorderColor', 'rgba(202, 202, 202, 1)'],\n      ['scrollBarWidth', 11],\n      ['selectionHandleBorderColor', 'rgba(255, 255, 255, 1)'],\n      ['selectionHandleBorderWidth', 1.5],\n      ['selectionHandleColor', 'rgba(66, 133, 244, 1)'],\n      ['selectionHandleSize', 8],\n      ['selectionHandleType', 'square'],\n      ['selectionOverlayBorderColor', 'rgba(66, 133, 244, 1)'],\n      ['selectionOverlayBorderWidth', 1],\n      ['treeArrowBorderColor', 'rgba(195, 199, 202, 1)'],\n      ['treeArrowBorderWidth', 1],\n      ['treeArrowClickRadius', 5],\n      ['treeArrowColor', 'rgba(155, 155, 155, 1)'],\n      ['treeArrowHeight', 8],\n      ['treeArrowMarginLeft', 0],\n      ['treeArrowMarginRight', 5],\n      ['treeArrowMarginTop', 6],\n      ['treeArrowWidth', 13],\n      ['treeGridHeight', 250],\n      ['width', 'auto'],\n    ],\n  };\n}\n","/*jslint browser: true, unparam: true, todo: true*/\n/*globals define: true, MutationObserver: false, requestAnimationFrame: false, performance: false, btoa: false*/\n'use strict';\n\nimport defaults from './defaults';\n\nexport default function () {\n  var typeMap,\n    component = {};\n  component.dehyphenateProperty = function hyphenateProperty(prop) {\n    prop = prop.replace('--cdg-', '');\n    var p = '',\n      nextLetterCap;\n    Array.prototype.forEach.call(prop, function (char) {\n      if (nextLetterCap) {\n        nextLetterCap = false;\n        p += char.toUpperCase();\n        return;\n      }\n      if (char === '-') {\n        nextLetterCap = true;\n        return;\n      }\n      p += char;\n    });\n    return p;\n  };\n  component.hyphenateProperty = function hyphenateProperty(prop, cust) {\n    var p = '';\n    Array.prototype.forEach.call(prop, function (char) {\n      if (char === char.toUpperCase()) {\n        p += '-' + char.toLowerCase();\n        return;\n      }\n      p += char;\n    });\n    return (cust ? '--cdg-' : '') + p;\n  };\n  function getDefaultItem(base, item) {\n    var i = {},\n      r;\n    defaults(i);\n    r = i.defaults[base].filter(function (i) {\n      return (\n        i[0].toLowerCase() === item.toLowerCase() ||\n        component.hyphenateProperty(i[0]) === item.toLowerCase() ||\n        component.hyphenateProperty(i[0], true) === item.toLowerCase()\n      );\n    })[0];\n    return r;\n  }\n  component.applyComponentStyle = function (supressChangeAndDrawEvents, intf) {\n    if (!intf.isComponent) {\n      return;\n    }\n    var cStyle = window.getComputedStyle(\n        intf.tagName === 'CANVAS-DATAGRID' ? intf : intf.canvas,\n        null,\n      ),\n      defs = {};\n    intf.computedStyle = cStyle;\n    defaults(defs);\n    defs = defs.defaults.styles;\n    defs.forEach(function (def) {\n      var val;\n      val = cStyle.getPropertyValue(component.hyphenateProperty(def[0], true));\n      if (val === '') {\n        val = cStyle.getPropertyValue(\n          component.hyphenateProperty(def[0], false),\n        );\n      }\n      if (val !== '' && typeof val === 'string') {\n        intf.setStyleProperty(\n          def[0],\n          typeMap[typeof def[1]](\n            val.replace(/^\\s+/, '').replace(/\\s+$/, ''),\n            def[1],\n          ),\n          true,\n        );\n      }\n    });\n    if (!supressChangeAndDrawEvents && intf.dispatchEvent) {\n      requestAnimationFrame(function () {\n        intf.resize(true);\n      });\n      intf.dispatchEvent('stylechanged', intf.style);\n    }\n  };\n  typeMap = {\n    data: function (strData) {\n      try {\n        return JSON.parse(strData);\n      } catch (e) {\n        throw new Error('Cannot read JSON data in canvas-datagrid data.');\n      }\n    },\n    schema: function (strSchema) {\n      try {\n        return JSON.parse(strSchema);\n      } catch (e) {\n        throw new Error(\n          'Cannot read JSON data in canvas-datagrid schema attribute.',\n        );\n      }\n    },\n    number: function (strNum, def) {\n      var n = parseInt(strNum, 10);\n      return isNaN(n) ? def : n;\n    },\n    boolean: function (strBool) {\n      return /true/i.test(strBool);\n    },\n    string: function (str) {\n      return str;\n    },\n  };\n  component.getObservableAttributes = function () {\n    var i = {},\n      attrs = ['data', 'schema', 'style', 'className', 'name'];\n    defaults(i);\n    i.defaults.attributes.forEach(function (attr) {\n      attrs.push(attr[0].toLowerCase());\n    });\n    return attrs;\n  };\n  component.disconnectedCallback = function () {\n    this.connected = false;\n  };\n  component.connectedCallback = function () {\n    var intf = this;\n    intf.parentDOMNode.innerHTML = '';\n    intf.parentDOMNode.appendChild(intf.canvas);\n    intf.connected = true;\n    component.observe(intf);\n    component.applyComponentStyle(true, intf);\n    intf.resize(true);\n  };\n  component.adoptedCallback = function () {\n    this.resize();\n  };\n  component.attributeChangedCallback = function (attrName, oldVal, newVal) {\n    var tfn,\n      intf = this,\n      def;\n    if (attrName === 'style') {\n      component.applyComponentStyle(false, intf);\n      return;\n    }\n    if (attrName === 'data') {\n      if (intf.dataType === 'application/x-canvas-datagrid') {\n        intf.dataType = 'application/json+x-canvas-datagrid';\n      }\n      intf.data = newVal;\n      return;\n    }\n    if (attrName === 'schema') {\n      intf.schema = typeMap.schema(newVal);\n      return;\n    }\n    if (attrName === 'name') {\n      intf.name = newVal;\n      return;\n    }\n    if (attrName === 'class' || attrName === 'className') {\n      return;\n    }\n    def = getDefaultItem('attributes', attrName);\n    if (def) {\n      tfn = typeMap[typeof def[1]];\n      intf.attributes[def[0]] = tfn(newVal);\n      return;\n    }\n    if (/^on/.test(attrName)) {\n      intf.addEventListener('on' + attrName, Function('e', newVal));\n    }\n    return;\n  };\n  component.observe = function (intf) {\n    var observer;\n    if (!window.MutationObserver) {\n      return;\n    }\n    intf.applyComponentStyle = function () {\n      component.applyComponentStyle(false, intf);\n      intf.resize();\n    };\n    /**\n     * Applies the computed css styles to the grid.  In some browsers, changing directives in attached style sheets does not automatically update the styles in this component.  It is necessary to call this method to update in these cases.\n     * @memberof canvasDatagrid\n     * @name applyComponentStyle\n     * @method\n     */\n    observer = new window.MutationObserver(function (mutations) {\n      var checkInnerHTML, checkStyle;\n      Array.prototype.forEach.call(mutations, function (mutation) {\n        if (\n          mutation.attributeName === 'class' ||\n          mutation.attributeName === 'style'\n        ) {\n          checkStyle = true;\n          return;\n        }\n        if (mutation.target.nodeName === 'STYLE') {\n          checkStyle = true;\n          return;\n        }\n        if (\n          mutation.target.parentNode &&\n          mutation.target.parentNode.nodeName === 'STYLE'\n        ) {\n          checkStyle = true;\n          return;\n        }\n        if (\n          mutation.target === intf &&\n          (mutation.addedNodes.length > 0 || mutation.type === 'characterData')\n        ) {\n          checkInnerHTML = true;\n        }\n      });\n      if (checkStyle) {\n        intf.applyComponentStyle(false, intf);\n      }\n      if (checkInnerHTML) {\n        if (intf.dataType === 'application/x-canvas-datagrid') {\n          intf.dataType = 'application/json+x-canvas-datagrid';\n        }\n        intf.data = intf.innerHTML;\n      }\n    });\n    observer.observe(intf, {\n      characterData: true,\n      childList: true,\n      attributes: true,\n      subtree: true,\n    });\n    Array.prototype.forEach.call(document.querySelectorAll('style'), function (\n      el,\n    ) {\n      observer.observe(el, {\n        characterData: true,\n        childList: true,\n        attributes: true,\n        subtree: true,\n      });\n    });\n  };\n  return component;\n}\n","/*jslint browser: true, unparam: true, todo: true*/\n/*globals XMLSerializer: false, define: true, Blob: false, MutationObserver: false, requestAnimationFrame: false, performance: false, btoa: false*/\n'use strict';\n\nexport default function (self) {\n  var perfCounters = [],\n    cachedImagesDrawn = false,\n    drawCount = 0,\n    perfWindowSize = 300,\n    entityCount = [],\n    hiddenFrozenColumnCount = 0,\n    scrollDebugCounters = [],\n    touchPPSCounters = [];\n  self.htmlImageCache = {};\n  // more heavyweight version than fillArray defined in intf.js\n  function fillArray(low, high, step, def) {\n    step = step || 1;\n    var i = [],\n      x;\n    for (x = low; x <= high; x += step) {\n      i[x] = def === undefined ? x : typeof def === 'function' ? def(x) : def;\n    }\n    return i;\n  }\n  function drawPerfLine(w, h, x, y, perfArr, arrIndex, max, color, useAbs) {\n    var i = w / perfArr.length,\n      r = h / max;\n    x += self.canvasOffsetLeft;\n    y += self.canvasOffsetTop;\n    self.ctx.beginPath();\n    self.ctx.moveTo(x, y + h);\n    perfArr.forEach(function (n) {\n      var val = arrIndex === undefined ? n : n[arrIndex],\n        cx,\n        cy;\n      if (useAbs) {\n        val = Math.abs(val);\n      }\n      cx = x + i;\n      cy = y + h - val * r;\n      self.ctx.lineTo(cx, cy);\n      x += i;\n    });\n    self.ctx.moveTo(x + w, y + h);\n    self.ctx.strokeStyle = color;\n    self.ctx.stroke();\n  }\n  function drawOnAllImagesLoaded() {\n    var loaded = true;\n    Object.keys(self.htmlImageCache).forEach(function (html) {\n      if (!self.htmlImageCache[html].img.complete) {\n        loaded = false;\n      }\n    });\n    if (loaded && !cachedImagesDrawn) {\n      cachedImagesDrawn = true;\n      self.draw();\n    }\n  }\n  function drawHtml(cell) {\n    var img,\n      v = cell.innerHTML || cell.formattedValue,\n      cacheKey =\n        v.toString() + cell.rowIndex.toString() + cell.columnIndex.toString(),\n      x = Math.round(cell.x + self.canvasOffsetLeft),\n      y = Math.round(cell.y + self.canvasOffsetTop);\n    if (self.htmlImageCache[cacheKey]) {\n      img = self.htmlImageCache[cacheKey].img;\n      if (\n        self.htmlImageCache[cacheKey].height !== cell.height ||\n        self.htmlImageCache[cacheKey].width !== cell.width\n      ) {\n        // height and width of the cell has changed, invalidate cache\n        self.htmlImageCache[cacheKey] = undefined;\n      } else {\n        if (!img.complete) {\n          return;\n        }\n        return self.ctx.drawImage(img, x, y);\n      }\n    } else {\n      cachedImagesDrawn = false;\n    }\n    img = new Image(cell.width, cell.height);\n    self.htmlImageCache[cacheKey] = {\n      img,\n      width: cell.width,\n      height: cell.height,\n    };\n    img.onload = function () {\n      self.ctx.drawImage(img, x, y);\n      drawOnAllImagesLoaded();\n    };\n    img.src =\n      'data:image/svg+xml;base64,' +\n      btoa(\n        '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"' +\n          cell.width +\n          '\" height=\"' +\n          cell.height +\n          '\">\\n' +\n          '<foreignObject class=\"node\" x=\"0\" y=\"0\" width=\"100%\" height=\"100%\">\\n' +\n          '<body xmlns=\"http://www.w3.org/1999/xhtml\" style=\"margin:0;padding:0;\">\\n' +\n          v +\n          '\\n' +\n          '</body>' +\n          '</foreignObject>\\n' +\n          '</svg>\\n',\n      );\n  }\n  function drawOrderByArrow(x, y) {\n    var mt = self.style.columnHeaderOrderByArrowMarginTop * self.scale,\n      ml = self.style.columnHeaderOrderByArrowMarginLeft * self.scale,\n      mr = self.style.columnHeaderOrderByArrowMarginRight * self.scale,\n      aw = self.style.columnHeaderOrderByArrowWidth * self.scale,\n      ah = self.style.columnHeaderOrderByArrowHeight * self.scale;\n    x += self.canvasOffsetLeft;\n    y += self.canvasOffsetTop;\n    self.ctx.fillStyle = self.style.columnHeaderOrderByArrowColor;\n    self.ctx.strokeStyle = self.style.columnHeaderOrderByArrowBorderColor;\n    self.ctx.beginPath();\n    x = x + ml;\n    y = y + mt;\n    if (self.orderDirection === 'asc') {\n      self.ctx.moveTo(x, y);\n      self.ctx.lineTo(x + aw, y);\n      self.ctx.lineTo(x + aw * 0.5, y + ah);\n      self.ctx.moveTo(x, y);\n    } else {\n      self.ctx.lineTo(x, y + ah);\n      self.ctx.lineTo(x + aw, y + ah);\n      self.ctx.lineTo(x + aw * 0.5, y);\n      self.ctx.lineTo(x, y + ah);\n    }\n    self.ctx.stroke();\n    self.ctx.fill();\n    return ml + aw + mr;\n  }\n  function drawTreeArrow(cell, x, y) {\n    var mt = self.style.treeArrowMarginTop * self.scale,\n      mr = self.style.treeArrowMarginRight * self.scale,\n      ml = self.style.treeArrowMarginLeft * self.scale,\n      aw = self.style.treeArrowWidth * self.scale,\n      ah = self.style.treeArrowHeight * self.scale;\n    x += self.canvasOffsetLeft;\n    y += self.canvasOffsetTop;\n    self.ctx.fillStyle = self.style.treeArrowColor;\n    self.ctx.strokeStyle = self.style.treeArrowBorderColor;\n    self.ctx.beginPath();\n    x = x + ml;\n    y = y + mt;\n    if (self.openChildren[cell.rowIndex]) {\n      self.ctx.moveTo(x, y);\n      self.ctx.lineTo(x + aw, y);\n      self.ctx.lineTo(x + aw * 0.5, y + ah);\n      self.ctx.moveTo(x, y);\n    } else {\n      self.ctx.lineTo(x, y);\n      self.ctx.lineTo(x + ah, y + aw * 0.5);\n      self.ctx.lineTo(x, y + aw);\n      self.ctx.lineTo(x, y);\n    }\n    self.ctx.stroke();\n    self.ctx.fill();\n    return ml + aw + mr;\n  }\n  function radiusRect(x, y, w, h, radius) {\n    x += self.canvasOffsetLeft;\n    y += self.canvasOffsetTop;\n    var r = x + w,\n      b = y + h;\n    self.ctx.beginPath();\n    self.ctx.moveTo(x + radius, y);\n    self.ctx.lineTo(r - radius, y);\n    self.ctx.quadraticCurveTo(r, y, r, y + radius);\n    self.ctx.lineTo(r, y + h - radius);\n    self.ctx.quadraticCurveTo(r, b, r - radius, b);\n    self.ctx.lineTo(x + radius, b);\n    self.ctx.quadraticCurveTo(x, b, x, b - radius);\n    self.ctx.lineTo(x, y + radius);\n    self.ctx.quadraticCurveTo(x, y, x + radius, y);\n  }\n  function fillRect(x, y, w, h) {\n    x += self.canvasOffsetLeft;\n    y += self.canvasOffsetTop;\n    self.ctx.fillRect(x, y, w, h);\n  }\n  function strokeRect(x, y, w, h) {\n    x += self.canvasOffsetLeft;\n    y += self.canvasOffsetTop;\n    self.ctx.strokeRect(x, y, w, h);\n  }\n  function fillText(text, x, y) {\n    x += self.canvasOffsetLeft;\n    y += self.canvasOffsetTop;\n    self.ctx.fillText(text, x, y);\n  }\n  function fillCircle(x, y, r) {\n    x += self.canvasOffsetLeft;\n    y += self.canvasOffsetTop;\n    self.ctx.beginPath();\n    self.ctx.arc(x, y, r, 0, 2 * Math.PI);\n    self.ctx.fill();\n  }\n  function strokeCircle(x, y, r) {\n    x += self.canvasOffsetLeft;\n    y += self.canvasOffsetTop;\n    self.ctx.beginPath();\n    self.ctx.arc(x, y, r, 0, 2 * Math.PI);\n    self.ctx.stroke();\n  }\n  function clipFrozenArea(mode) {\n    // 0 both, 1 rows, 2 cols\n    // self.lastFrozenColumnPixel;\n    // self.lastFrozenRowPixel;\n    self.ctx.beginPath();\n    if (mode === 0) {\n      self.ctx.moveTo(self.lastFrozenColumnPixel, self.lastFrozenRowPixel);\n      self.ctx.lineTo(self.lastFrozenColumnPixel, self.height);\n      self.ctx.lineTo(self.width, self.height);\n      self.ctx.lineTo(self.width, self.lastFrozenRowPixel);\n    }\n    if (mode === 1) {\n      self.ctx.moveTo(0, self.lastFrozenRowPixel);\n      self.ctx.lineTo(0, self.height);\n      self.ctx.lineTo(self.width, self.height);\n      self.ctx.lineTo(self.width, self.lastFrozenRowPixel);\n    }\n    if (mode === 2) {\n      self.ctx.moveTo(self.lastFrozenColumnPixel, 0);\n      self.ctx.lineTo(self.width, 0);\n      self.ctx.lineTo(self.width, self.height);\n      self.ctx.lineTo(self.lastFrozenColumnPixel, self.height);\n    }\n    self.ctx.clip();\n  }\n  function fillHandle(x, y, r) {\n    if (self.style.selectionHandleType === 'circle') {\n      return fillCircle(x, y, r * 0.5);\n    }\n    fillRect(x - r * 0.5, y - r * 0.5, r, r);\n  }\n  function strokeHandle(x, y, r) {\n    if (self.style.selectionHandleType === 'circle') {\n      return strokeCircle(x, y, r * 0.5);\n    }\n    strokeRect(x - r * 0.5, y - r * 0.5, r, r);\n  }\n  function addselectionHandle(c, pos) {\n    var hw = self.style.selectionHandleSize,\n      p = {\n        tr: function () {\n          fillHandle(c.x + c.width, c.y, hw);\n          strokeHandle(c.x + c.width, c.y, hw);\n        },\n        br: function () {\n          fillHandle(c.x + c.width, c.y + c.height, hw);\n          strokeHandle(c.x + c.width, c.y + c.height, hw);\n        },\n        tl: function () {\n          fillHandle(c.x, c.y, hw);\n          strokeHandle(c.x, c.y, hw);\n        },\n        bl: function () {\n          fillHandle(c.x, c.y + c.height, hw);\n          strokeHandle(c.x, c.y + c.height, hw);\n        },\n      };\n    p[pos]();\n  }\n  function addBorderLine(c, pos) {\n    self.ctx.beginPath();\n    var p = {\n      t: function () {\n        self.ctx.moveTo(\n          c.x + self.canvasOffsetLeft,\n          c.y + self.canvasOffsetTop,\n        );\n        self.ctx.lineTo(\n          c.x + self.canvasOffsetLeft + c.width,\n          c.y + self.canvasOffsetTop,\n        );\n      },\n      r: function () {\n        self.ctx.moveTo(\n          c.x + self.canvasOffsetLeft + c.width,\n          c.y + self.canvasOffsetTop,\n        );\n        self.ctx.lineTo(\n          c.x + self.canvasOffsetLeft + c.width,\n          c.y + self.canvasOffsetTop + c.height,\n        );\n      },\n      b: function () {\n        self.ctx.moveTo(\n          c.x + self.canvasOffsetLeft,\n          c.y + self.canvasOffsetTop + c.height,\n        );\n        self.ctx.lineTo(\n          c.x + self.canvasOffsetLeft + c.width,\n          c.y + self.canvasOffsetTop + c.height,\n        );\n      },\n      l: function () {\n        self.ctx.moveTo(\n          c.x + self.canvasOffsetLeft,\n          c.y + self.canvasOffsetTop,\n        );\n        self.ctx.lineTo(\n          c.x + self.canvasOffsetLeft,\n          c.y + self.canvasOffsetTop + c.height,\n        );\n      },\n    };\n    p[pos]();\n    self.ctx.stroke();\n  }\n  function addEllipsis(text, width) {\n    var c,\n      w = 0;\n    if (self.ellipsisCache[text] && self.ellipsisCache[text][width]) {\n      return self.ellipsisCache[text][width];\n    }\n    //TODO Add ellipsis back when there is a fast way to do it\n    w = self.ctx.measureText(text).width;\n    self.ellipsisCache[text] = self.ellipsisCache[text] || {};\n    c = { value: text, width: w };\n    self.ellipsisCache[text][width] = c;\n    return c;\n  }\n  function wrapText(cell, splitChar) {\n    if (!cell.formattedValue) {\n      return {\n        lines: [{ width: 0, value: '' }],\n        width: 0,\n        height: cell.calculatedLineHeight,\n      };\n    }\n    var max = 0,\n      n = '\\n',\n      x,\n      word,\n      words = cell.formattedValue.split(splitChar),\n      textHeight = cell.calculatedLineHeight,\n      lines = [],\n      out = [],\n      wrap = self.style.cellWhiteSpace !== 'nowrap',\n      autoResize = self.attributes.autoResizeRows && wrap,\n      elWidth,\n      et = self.attributes.ellipsisText,\n      elClipLength,\n      plWidth,\n      clippedVal,\n      ogWordWidth,\n      previousLine,\n      line = {\n        width: 0,\n        value: '',\n      },\n      cHeight = wrap ? cell.paddedHeight : cell.calculatedLineHeight;\n    lines.push(line);\n    elWidth = self.ctx.measureText(' ' + et).width;\n    for (x = 0; x < words.length; x += 1) {\n      word = words[x];\n      var measure = self.ctx.measureText(word + splitChar);\n      if (line.width + measure.width + elWidth < cell.paddedWidth) {\n        line.value += word + splitChar;\n        line.width += measure.width;\n        continue;\n      }\n      // if there is a hyphenated word that is too long\n      // split it and add the split set to the array\n      // then back up and re-read new split set\n      // this behavior seems right, it might not be\n      if (/\\w-\\w/.test(word) && cell.paddedWidth < measure.width) {\n        words.splice(x, 1, word.split('-')[0] + '-', word.split('-')[1]);\n        x -= 1;\n        continue;\n      }\n      line = {\n        width: measure.width,\n        value: word + splitChar,\n      };\n      if (x === 0) {\n        lines = [];\n        lines.push(line);\n      }\n      textHeight += cell.calculatedLineHeight;\n      if (textHeight > cHeight && !autoResize) {\n        if (lines.length === 0) {\n          break;\n        }\n        elClipLength = 1;\n        previousLine = lines[lines.length - 1];\n        if (previousLine.width < cell.paddedWidth && words.length === 1) {\n          break;\n        }\n        clippedVal = previousLine.value + word;\n        plWidth = self.ctx.measureText(clippedVal + et).width;\n        var originText = clippedVal;\n        if (plWidth > cell.paddedWidth) {\n          var stepLength = parseInt(clippedVal.length / 2);\n          var direction = -1;\n          while (stepLength > 0) {\n            clippedVal = originText.substr(\n              0,\n              stepLength * direction + clippedVal.length,\n            );\n            plWidth = self.ctx.measureText(clippedVal + et).width;\n            direction = plWidth > cell.paddedWidth ? -1 : 1;\n            stepLength = parseInt(stepLength / 2);\n          }\n        }\n        clippedVal =\n          clippedVal + (originText.length != clippedVal.length ? et : '');\n        previousLine.value = clippedVal;\n        previousLine.width = plWidth;\n        break;\n      }\n      if (x > 0) {\n        lines.push(line);\n      }\n    }\n    return {\n      lines: lines,\n      width: max,\n      height: cell.calculatedLineHeight * lines.length,\n    };\n  }\n  function drawText(cell) {\n    var ll = cell.text.lines.length,\n      h = cell.fontHeight * cell.lineHeight,\n      x,\n      line,\n      wrap = self.style.cellWhiteSpace !== 'nowrap',\n      textHeight = 0;\n    for (x = 0; x < cell.text.lines.length; x += 1) {\n      line = cell.text.lines[x];\n      var vPos =\n          Math.max(\n            (cell.height -\n              (wrap ? cell.text.height : cell.calculatedLineHeight)) *\n              0.5,\n            0,\n          ) + h,\n        hPos = cell.paddingLeft + cell.treeArrowWidth + cell.orderByArrowWidth;\n      if (cell.horizontalAlignment === 'right') {\n        hPos = cell.paddingLeft + cell.paddedWidth - line.width;\n      } else if (cell.horizontalAlignment === 'center') {\n        hPos =\n          cell.paddingLeft +\n          (cell.paddedWidth + cell.paddingRight) / 2 -\n          line.width / 2;\n      }\n      if (cell.verticalAlignment === 'top') {\n        vPos = cell.calculatedLineHeight;\n      } else if (cell.verticalAlignment === 'bottom') {\n        vPos = cell.height - cell.paddingBottom - cell.text.height;\n      }\n      line.height = h + cell.lineSpacing;\n      line.offsetLeft = hPos;\n      line.offsetTop = vPos;\n      line.x = cell.x + hPos;\n      line.y = cell.y + textHeight + vPos;\n      textHeight += line.height;\n      fillText(line.value, line.x, line.y);\n    }\n    if (self.attributes.debug && cell.active) {\n      requestAnimationFrame(function () {\n        self.ctx.font = self.style.debugFont;\n        self.ctx.fillStyle = self.style.debugColor;\n        fillText(\n          JSON.stringify(\n            {\n              x: cell.x,\n              y: cell.y,\n              h: cell.height,\n              w: cell.width,\n              pw: cell.paddedWidth,\n              idx: cell.columnIndex,\n              idx_ord: cell.sortColumnIndex,\n            },\n            null,\n            '\\t',\n          ),\n          cell.x + 14,\n          cell.y + 14,\n        );\n        fillText(\n          JSON.stringify(\n            cell.text.lines.map(function (l) {\n              return { w: l.width, v: l.value.length };\n            }),\n            null,\n            '\\t',\n          ),\n          cell.x + 14,\n          cell.y + 30,\n        );\n      });\n    }\n  }\n  function getFrozenColumnsWidth() {\n    var w = 0,\n      s = self.getSchema(),\n      x = 0,\n      n = Math.min(self.frozenColumn, s.length),\n      column;\n    hiddenFrozenColumnCount = 0;\n    while (x < n) {\n      column = s[x];\n      if (column.hidden) {\n        hiddenFrozenColumnCount += 1;\n      } else {\n        w += self.getColummnWidth(x);\n      }\n      x += 1;\n    }\n    return w;\n  }\n  /**\n   * Redraws the grid. No matter what the change, this is the only method required to refresh everything.\n   * @memberof canvasDatagrid\n   * @name draw\n   * @method\n   */\n  // r = literal row index\n  // rd = row data array\n  // i = user order index\n  // o = literal data index\n  // y = y drawing cursor\n  // x = x drawing cursor\n  // s = visible schema array\n  // cx = current x drawing cursor sub calculation var\n  // cy = current y drawing cursor sub calculation var\n  // a = static cell (like corner cell)\n  // p = perf counter\n  // l = data length\n  // u = current cell\n  // h = current height\n  // w = current width\n  self.draw = function (internal) {\n    if (self.dispatchEvent('beforedraw', {})) {\n      return;\n    }\n    if (!self.isChildGrid && (!self.height || !self.width)) {\n      return;\n    }\n    if (self.isChildGrid && internal) {\n      requestAnimationFrame(self.parentGrid.draw);\n      return;\n    }\n    if (self.intf.visible === false) {\n      return;\n    }\n    // initial values\n    var checkScrollHeight,\n      rowHeaderCell,\n      p,\n      cx,\n      cy,\n      treeGrid,\n      rowOpen,\n      rowHeight,\n      cornerCell,\n      y,\n      x,\n      c,\n      h,\n      w,\n      s,\n      r,\n      rd,\n      aCell,\n      data = self.data || [],\n      bc = self.style.gridBorderCollapse === 'collapse',\n      selectionBorders = [],\n      moveBorders = [],\n      selectionHandles = [],\n      rowHeaders = [],\n      l = data.length,\n      u = self.currentCell || {},\n      columnHeaderCellHeight = self.getColumnHeaderCellHeight(),\n      rowHeaderCellWidth = self.getRowHeaderCellWidth(),\n      cellHeight = self.style.cellHeight;\n    drawCount += 1;\n    p = performance.now();\n    self.visibleRowHeights = [];\n    // if data length has changed, there is no way to know\n    if (data.length > self.orders.rows.length) {\n      self.createRowOrders();\n    }\n    function drawScrollBars() {\n      var drawCorner,\n        en = self.scrollBox.entities,\n        m = self.style.scrollBarBoxMargin * 2;\n      self.ctx.strokeStyle = self.style.scrollBarBorderColor;\n      self.ctx.lineWidth = self.style.scrollBarBorderWidth;\n      en.horizontalBox.x =\n        rowHeaderCellWidth +\n        self.style.scrollBarBoxMargin +\n        (en.horizontalBar.width - self.scrollBox.scrollBoxWidth) *\n          (self.scrollBox.scrollLeft / self.scrollBox.scrollWidth);\n      en.verticalBox.y =\n        columnHeaderCellHeight +\n        self.style.scrollBarBoxMargin +\n        (en.verticalBar.height - self.scrollBox.scrollBoxHeight) *\n          (self.scrollBox.scrollTop / self.scrollBox.scrollHeight);\n      if (self.scrollBox.horizontalBarVisible) {\n        self.ctx.fillStyle = self.style.scrollBarBackgroundColor;\n        fillRect(\n          en.horizontalBar.x,\n          en.horizontalBar.y,\n          en.horizontalBar.width + m,\n          en.horizontalBar.height,\n        );\n        strokeRect(\n          en.horizontalBar.x,\n          en.horizontalBar.y,\n          en.horizontalBar.width + m,\n          en.horizontalBar.height,\n        );\n        self.ctx.fillStyle = self.style.scrollBarBoxColor;\n        if (self.scrollBox.horizontalBoxVisible) {\n          if (/horizontal/.test(u.context)) {\n            self.ctx.fillStyle = self.style.scrollBarActiveColor;\n          }\n          radiusRect(\n            en.horizontalBox.x,\n            en.horizontalBox.y,\n            en.horizontalBox.width,\n            en.horizontalBox.height,\n            self.style.scrollBarBoxBorderRadius,\n          );\n          self.ctx.stroke();\n          self.ctx.fill();\n        }\n        drawCorner = true;\n        self.visibleCells.unshift(en.horizontalBar);\n        self.visibleCells.unshift(en.horizontalBox);\n      }\n      if (self.scrollBox.verticalBarVisible) {\n        self.ctx.fillStyle = self.style.scrollBarBackgroundColor;\n        fillRect(\n          en.verticalBar.x,\n          en.verticalBar.y,\n          en.verticalBar.width,\n          en.verticalBar.height + m,\n        );\n        strokeRect(\n          en.verticalBar.x,\n          en.verticalBar.y,\n          en.verticalBar.width,\n          en.verticalBar.height + m,\n        );\n        if (self.scrollBox.verticalBoxVisible) {\n          self.ctx.fillStyle = self.style.scrollBarBoxColor;\n          if (/vertical/.test(u.context)) {\n            self.ctx.fillStyle = self.style.scrollBarActiveColor;\n          }\n          radiusRect(\n            en.verticalBox.x,\n            en.verticalBox.y,\n            en.verticalBox.width,\n            en.verticalBox.height,\n            self.style.scrollBarBoxBorderRadius,\n          );\n          self.ctx.stroke();\n          self.ctx.fill();\n        }\n        drawCorner = true;\n        self.visibleCells.unshift(en.verticalBar);\n        self.visibleCells.unshift(en.verticalBox);\n      }\n      if (drawCorner) {\n        //corner\n        self.ctx.strokeStyle = self.style.scrollBarCornerBorderColor;\n        self.ctx.fillStyle = self.style.scrollBarCornerBackgroundColor;\n        radiusRect(\n          en.corner.x,\n          en.corner.y,\n          en.corner.width,\n          en.corner.height,\n          0,\n        );\n        self.ctx.stroke();\n        self.ctx.fill();\n        self.visibleCells.unshift(en.corner);\n      }\n    }\n    function createHandlesOverlayArray(cell) {\n      if (self.attributes.allowMovingSelection || self.mobile) {\n        if (\n          cell.selectionBorderTop &&\n          cell.selectionBorderRight &&\n          self.mobile\n        ) {\n          selectionHandles.push([cell, 'tr']);\n          cell.selectionHandle = 'tr';\n        }\n        if (\n          cell.selectionBorderTop &&\n          cell.selectionBorderLeft &&\n          self.mobile\n        ) {\n          selectionHandles.push([cell, 'tl']);\n          cell.selectionHandle = 'tl';\n        }\n        if (\n          cell.selectionBorderBottom &&\n          cell.selectionBorderLeft &&\n          self.mobile\n        ) {\n          selectionHandles.push([cell, 'bl']);\n          cell.selectionHandle = 'bl';\n        }\n        if (\n          cell.selectionBorderBottom &&\n          cell.selectionBorderRight &&\n          (self.attributes.selectionHandleBehavior !== 'none' || self.mobile)\n        ) {\n          selectionHandles.push([cell, 'br']);\n          cell.selectionHandle = 'br';\n        }\n      }\n    }\n    function createBorderOverlayArray(\n      cell,\n      drawArray,\n      propPrefix,\n      offsetPoint,\n    ) {\n      offsetPoint = offsetPoint || { x: 0, y: 0 };\n      cell.selectionBorder = '';\n      if (\n        !cell.isRowHeader &&\n        self.selections[cell.rowIndex + -offsetPoint.y] &&\n        self.selections[cell.rowIndex + -offsetPoint.y].indexOf(\n          cell.columnIndex + -offsetPoint.x,\n        ) !== -1\n      ) {\n        if (\n          (!self.selections[cell.rowIndex - 1 + -offsetPoint.y] ||\n            self.selections[cell.rowIndex - 1 + -offsetPoint.y].indexOf(\n              cell.columnIndex + -offsetPoint.x,\n            ) === -1 ||\n            cell.rowIndex === 0) &&\n          !cell.isHeader\n        ) {\n          drawArray.push([cell, 't']);\n          cell[propPrefix + 'BorderTop'] = true;\n          cell[propPrefix + 'Border'] += 't';\n        }\n        if (\n          !self.selections[cell.rowIndex + 1 + -offsetPoint.y] ||\n          self.selections[cell.rowIndex + 1 + -offsetPoint.y].indexOf(\n            cell.columnIndex + -offsetPoint.x,\n          ) === -1\n        ) {\n          drawArray.push([cell, 'b']);\n          cell[propPrefix + 'BorderBottom'] = true;\n          cell[propPrefix + 'Border'] += 'b';\n        }\n        if (\n          !self.selections[cell.rowIndex + -offsetPoint.y] ||\n          cell.columnIndex === 0 ||\n          self.selections[cell.rowIndex + -offsetPoint.y].indexOf(\n            cell.columnIndex - 1 + -offsetPoint.x,\n          ) === -1\n        ) {\n          drawArray.push([cell, 'l']);\n          cell[propPrefix + 'BorderLeft'] = true;\n          cell[propPrefix + 'Border'] += 'l';\n        }\n        if (\n          !self.selections[cell.rowIndex + -offsetPoint.y] ||\n          cell.columnIndex === s.length ||\n          self.selections[cell.rowIndex + -offsetPoint.y].indexOf(\n            cell.columnIndex + 1 + -offsetPoint.x,\n          ) === -1\n        ) {\n          drawArray.push([cell, 'r']);\n          cell[propPrefix + 'BorderRight'] = true;\n          cell[propPrefix + 'Border'] += 'r';\n        }\n      }\n    }\n    function drawCell(d, rowOrderIndex, rowIndex) {\n      return function drawEach(header, headerIndex, columnOrderIndex) {\n        if (header.hidden) {\n          return 0;\n        }\n        var cellStyle = header.style || 'cell',\n          cellGridAttributes,\n          cell,\n          isHeader = /HeaderCell/.test(cellStyle),\n          isCorner = /cornerCell/.test(cellStyle),\n          isRowHeader = 'rowHeaderCell' === cellStyle,\n          isColumnHeader = 'columnHeaderCell' === cellStyle,\n          wrap = self.style.cellWhiteSpace !== 'nowrap',\n          selected =\n            self.selections[rowOrderIndex] &&\n            self.selections[rowOrderIndex].indexOf(columnOrderIndex) !== -1,\n          hovered =\n            self.hovers.rowIndex === rowOrderIndex &&\n            self.hovers.columnIndex === columnOrderIndex,\n          active =\n            self.activeCell.rowIndex === rowOrderIndex &&\n            self.activeCell.columnIndex === columnOrderIndex,\n          isColumnHeaderCellCap = cellStyle === 'columnHeaderCellCap',\n          rawValue = d ? d[header.name] : undefined,\n          isGrid = header.type === 'canvas-datagrid',\n          activeHeader =\n            (self.orders.rows[self.activeCell.rowIndex] === rowOrderIndex ||\n              self.orders.columns[self.activeCell.columnIndex] ===\n                headerIndex) &&\n            (columnOrderIndex === -1 || rowOrderIndex === -1)\n              ? isRowHeader\n                ? 'activeRowHeaderCell'\n                : 'activeColumnHeaderCell'\n              : false,\n          val,\n          f = self.formatters[header.type || 'string'],\n          orderByArrowSize = 0,\n          treeArrowSize = 0,\n          cellWidth = self.sizes.columns[headerIndex] || header.width,\n          ev = {\n            value: rawValue,\n            row: d,\n            header: header,\n          };\n        if (isColumnHeaderCellCap) {\n          cellWidth = w - x;\n        }\n        // if no data or schema are defined, a width is provided to the stub column\n        if (cellWidth === undefined) {\n          cellWidth = self.style.cellWidth;\n        }\n        cellWidth = cellWidth * self.scale;\n        if (x + cellWidth + self.style.cellBorderWidth < 0) {\n          x += cellWidth + self.style.cellBorderWidth;\n        }\n        if (active && cellStyle !== 'cornerCell') {\n          cellStyle = 'activeCell';\n        }\n        if (self.visibleRows.indexOf(rowIndex) === -1 && !isHeader) {\n          self.visibleRows.push(rowIndex);\n        }\n        val = self.dispatchEvent('formatcellvalue', ev);\n        cx = x;\n        cy = y;\n        if (cellStyle === 'cornerCell') {\n          cx = 0;\n          cy = 0;\n        } else if (isRowHeader) {\n          cx = 0;\n        } else if (isHeader) {\n          cy = 0;\n        }\n        cell = {\n          type: isGrid ? 'canvas-datagrid-cell' : header.type,\n          style: cellStyle,\n          nodeType: 'canvas-datagrid-cell',\n          x: cx,\n          y: cy,\n          fontHeight: (self.style[cellStyle + 'FontHeight'] || 0) * self.scale,\n          horizontalAlignment: self.style[cellStyle + 'HorizontalAlignment'],\n          verticalAlignment: self.style[cellStyle + 'VerticalAlignment'],\n          paddingLeft:\n            (self.style[cellStyle + 'PaddingLeft'] || 0) * self.scale,\n          paddingTop: (self.style[cellStyle + 'PaddingTop'] || 0) * self.scale,\n          paddingRight:\n            (self.style[cellStyle + 'PaddingRight'] || 0) * self.scale,\n          paddingBottom:\n            (self.style[cellStyle + 'PaddingBottom'] || 0) * self.scale,\n          whiteSpace: self.style.cellWhiteSpace,\n          lineHeight: self.style.cellLineHeight,\n          lineSpacing: self.style.cellLineSpacing,\n          offsetTop: self.canvasOffsetTop + cy,\n          offsetLeft: self.canvasOffsetLeft + cx,\n          scrollTop: self.scrollBox.scrollTop,\n          scrollLeft: self.scrollBox.scrollLeft,\n          active: active || activeHeader,\n          hovered: hovered,\n          selected: selected,\n          width: cellWidth,\n          height: cellHeight,\n          offsetWidth: cellWidth,\n          offsetHeight: cellHeight,\n          parentNode: self.intf.parentNode,\n          offsetParent: self.intf.parentNode,\n          data: d,\n          isCorner: isCorner,\n          isHeader: isHeader,\n          isColumnHeader: isColumnHeader,\n          isColumnHeaderCellCap: isColumnHeaderCellCap,\n          isRowHeader: isRowHeader,\n          rowOpen: rowOpen,\n          header: header,\n          columnIndex: columnOrderIndex,\n          rowIndex: rowOrderIndex,\n          sortColumnIndex: headerIndex,\n          sortRowIndex: rowIndex,\n          isGrid: isGrid,\n          isNormal: !isGrid && !isCorner && !isHeader,\n          gridId: (self.attributes.name || '') + rowIndex + ':' + headerIndex,\n          parentGrid: self.intf,\n          innerHTML: '',\n          activeHeader: activeHeader,\n          value:\n            isHeader && !isRowHeader ? header.title || header.name : rawValue,\n        };\n        cell.calculatedLineHeight =\n          cell.fontHeight * cell.lineHeight + cell.lineSpacing;\n        cell.paddedWidth = cell.width - cell.paddingRight - cell.paddingLeft;\n        cell.paddedHeight = cell.height - cell.paddingTop - cell.paddingBottom;\n        ev.cell = cell;\n        cell.userHeight = cell.isHeader ? self.sizes.rows[-1] : rowHeight;\n        cell.userWidth = cell.isHeader\n          ? self.sizes.columns.cornerCell\n          : self.sizes.columns[headerIndex];\n        self.visibleCells.unshift(cell);\n        if (self.dispatchEvent('beforerendercell', ev)) {\n          return;\n        }\n        self.ctx.fillStyle = self.style[cellStyle + 'BackgroundColor'];\n        self.ctx.strokeStyle = self.style[cellStyle + 'BorderColor'];\n        self.ctx.lineWidth = self.style[cellStyle + 'BorderWidth'];\n        if (hovered) {\n          self.ctx.fillStyle = self.style[cellStyle + 'HoverBackgroundColor'];\n          self.ctx.strokeStyle = self.style[cellStyle + 'HoverBorderColor'];\n        }\n        if (selected) {\n          self.ctx.fillStyle =\n            self.style[cellStyle + 'SelectedBackgroundColor'];\n          self.ctx.strokeStyle = self.style[cellStyle + 'SelectedBorderColor'];\n        }\n        if (activeHeader) {\n          self.ctx.fillStyle = self.style[activeHeader + 'BackgroundColor'];\n        }\n        self.dispatchEvent('rendercell', ev);\n        if (cell.isGrid) {\n          if (cell.height !== rowHeight) {\n            cell.height = rowHeight || self.style.cellHeightWithChildGrid;\n            checkScrollHeight = true;\n          }\n          cell.width =\n            self.sizes.columns[headerIndex] ||\n            self.style.cellWidthWithChildGrid;\n        }\n        if (rowOpen && !cell.isRowHeader) {\n          cell.height = self.sizes.rows[rowIndex] || self.style.cellHeight;\n        }\n        if (!cell.isGrid) {\n          fillRect(cx, cy, cell.width, cell.height);\n          strokeRect(cx, cy, cell.width, cell.height);\n        }\n        self.ctx.save();\n        radiusRect(cell.x, cell.y, cell.width, cell.height, 0);\n        self.ctx.clip();\n        self.dispatchEvent('afterrendercell', ev);\n        if (cell.height !== cellHeight && !(rowOpen && !cell.isRowHeader)) {\n          self.sizes.rows[isHeader ? -1 : rowIndex] = cell.height;\n          checkScrollHeight = true;\n        }\n        if (cell.width !== cellWidth) {\n          self.sizes.columns[headerIndex] = cell.width;\n          checkScrollHeight = true;\n        }\n        if (isRowHeader && self.attributes.tree) {\n          if (!self.dispatchEvent('rendertreearrow', ev)) {\n            treeArrowSize = drawTreeArrow(\n              cell,\n              self.style[cellStyle + 'PaddingLeft'],\n              cy,\n              0,\n            );\n          }\n        }\n        if ((self.attributes.showRowNumbers && isRowHeader) || !isRowHeader) {\n          if (cell.isGrid && !self.dispatchEvent('beforerendercellgrid', ev)) {\n            if (!self.childGrids[cell.gridId]) {\n              // HACK: this only allows setting of the child grids styles if data is set _after_\n              // this is less than desirable.  An interface needs to be made to effect the\n              // style of all cell grids.  One for individual grids already exists.\n              cellGridAttributes = self.cellGridAttributes;\n              cellGridAttributes.name = self.attributes.saveAppearance\n                ? cell.gridId\n                : undefined;\n              cellGridAttributes.component = false;\n              cellGridAttributes.parentNode = cell;\n              cellGridAttributes.data = rawValue;\n              ev.cellGridAttributes = cellGridAttributes;\n              if (self.dispatchEvent('beforecreatecellgrid', ev)) {\n                return;\n              }\n              self.childGrids[cell.gridId] = self.createGrid(\n                cellGridAttributes,\n              );\n              self.sizes.rows[rowIndex] =\n                self.sizes.rows[rowIndex] || self.style.cellGridHeight;\n              checkScrollHeight = true;\n            }\n            cell.grid = self.childGrids[cell.gridId];\n            cell.grid.parentNode = cell;\n            cell.grid.visible = true;\n            cell.grid.draw();\n            self.dispatchEvent('rendercellgrid', ev);\n          } else if (!cell.isGrid) {\n            if (self.childGrids[cell.gridId]) {\n              self.childGrids[cell.gridId].parentNode.offsetHeight = 0;\n            }\n            if (isHeader && self.orderBy === header.name) {\n              if (!self.dispatchEvent('renderorderbyarrow', ev)) {\n                orderByArrowSize = drawOrderByArrow(\n                  cx + self.style[cellStyle + 'PaddingLeft'],\n                  0,\n                );\n              }\n            }\n            self.ctx.fillStyle = self.style[cellStyle + 'Color'];\n            if (hovered) {\n              self.ctx.fillStyle = self.style[cellStyle + 'HoverColor'];\n            }\n            if (selected) {\n              self.ctx.fillStyle = self.style[cellStyle + 'SelectedColor'];\n            }\n            if (activeHeader) {\n              self.ctx.fillStyle = self.style[activeHeader + 'Color'];\n            }\n            cell.treeArrowWidth = treeArrowSize;\n            cell.orderByArrowWidth = orderByArrowSize;\n            // create text ref to see if height needs to expand\n            val = val !== undefined ? val : f ? f(ev) : '';\n            if (val === undefined && !f) {\n              val = '';\n              console.warn(\n                'canvas-datagrid: Unknown format ' +\n                  header.type +\n                  ' add a cellFormater',\n              );\n            }\n            cell.formattedValue = (val !== undefined && val !== null\n              ? val\n              : ''\n            ).toString();\n            if (\n              self.columnFilters &&\n              self.columnFilters[val] !== undefined &&\n              isHeader\n            ) {\n              cell.formattedValue = self.attributes.filterTextPrefix + val;\n            }\n            self.ctx.font =\n              self.style[cellStyle + 'FontHeight'] * self.scale +\n              'px ' +\n              self.style[cellStyle + 'FontName'];\n            if (!self.dispatchEvent('formattext', ev)) {\n              cell.text = wrapText(cell, ' ');\n            }\n            if (!self.dispatchEvent('rendertext', ev)) {\n              if (cell.innerHTML || header.type === 'html') {\n                drawHtml(cell);\n              } else {\n                drawText(cell);\n              }\n\n              if (wrap && cell.text && cell.text.height > rowHeight) {\n                self.sizes.rows[isHeader ? -1 : rowIndex] = cell.text.height;\n                checkScrollHeight = true;\n              }\n            }\n          }\n        }\n        if (active) {\n          aCell = cell;\n        }\n        createBorderOverlayArray(cell, selectionBorders, 'selection');\n        // createBorderOverlayArray calculates data for createHandlesOverlayArray so it must go 2nd\n        createHandlesOverlayArray(cell);\n        if (self.movingSelection) {\n          createBorderOverlayArray(cell, moveBorders, 'move', self.moveOffset);\n        }\n        self.ctx.restore();\n        x += cell.width + (bc ? 0 : self.style.cellBorderWidth);\n        return cell.width;\n      };\n    }\n    function drawRowHeader(rowData, index, rowOrderIndex) {\n      var a, i;\n      if (self.attributes.showRowHeaders) {\n        x = 0;\n        i = index + 1;\n        rowHeaderCell = { rowHeaderCell: i };\n        a = {\n          name: 'rowHeaderCell',\n          width: self.sizes.columns[-1] || self.style.rowHeaderCellWidth,\n          style: 'rowHeaderCell',\n          type: 'string',\n          data: i,\n          index: -1,\n        };\n        rowOpen = self.openChildren[index];\n        drawCell(rowHeaderCell, index, rowOrderIndex)(a, -1, -1);\n      }\n    }\n    function drawHeaders() {\n      var d,\n        g = s.length,\n        i,\n        o,\n        columnHeaderCell,\n        header,\n        nonFrozenHeaderWidth;\n      function drawHeaderColumnRange(start, end) {\n        end = Math.min(end, g);\n        for (o = start; o < end; o += 1) {\n          i = self.orders.columns[o];\n          header = s[i];\n          if (!header.hidden) {\n            d = {\n              title: header.title,\n              name: header.name,\n              width: header.width || self.style.cellWidth,\n              style: 'columnHeaderCell',\n              type: 'string',\n              index: o,\n              order: i,\n            };\n            columnHeaderCell = {\n              columnHeaderCell: header.title || header.name,\n            };\n            x += drawCell(columnHeaderCell, -1, -1)(d, i, o);\n            if (x > self.width + self.scrollBox.scrollLeft) {\n              break;\n            }\n          }\n        }\n      }\n      rowHeaders.forEach(function (rArgs, rhIndex) {\n        y = rArgs[3];\n        cellHeight = rArgs[4];\n        if (rhIndex === self.frozenRow) {\n          self.ctx.save();\n          radiusRect(\n            0,\n            self.lastFrozenRowPixel,\n            self.width,\n            self.height - self.lastFrozenRowPixel,\n            0,\n          );\n          self.ctx.clip();\n        }\n        drawRowHeader(rArgs[0], rArgs[1], rArgs[2]);\n      });\n      self.ctx.restore();\n      if (self.attributes.showColumnHeaders) {\n        x =\n          -self.scrollBox.scrollLeft +\n          self.scrollPixelLeft +\n          self.style.columnHeaderCellBorderWidth;\n        if (self.attributes.showRowHeaders) {\n          x += rowHeaderCellWidth;\n        }\n        y = 0;\n        // cell height might have changed during drawing\n        cellHeight = self.getColumnHeaderCellHeight();\n        drawHeaderColumnRange(self.scrollIndexLeft, g);\n        nonFrozenHeaderWidth = x;\n        x = self.style.columnHeaderCellBorderWidth;\n        if (self.attributes.showRowHeaders) {\n          x += rowHeaderCellWidth;\n        }\n        drawHeaderColumnRange(0, self.frozenColumn);\n        // fill in the space right of the headers\n        x = nonFrozenHeaderWidth;\n        if (x < w) {\n          c = {\n            name: '',\n            width: self.style.scrollBarWidth,\n            style: 'columnHeaderCellCap',\n            isColumnHeaderCell: true,\n            isColumnHeaderCellCap: true,\n            type: 'string',\n            index: s.length,\n          };\n          drawCell({ endCap: '' }, -1, -1)(c, -1, -1);\n        }\n        // fill in the space right of the headers\n        if (self.attributes.showRowHeaders) {\n          cornerCell = { cornerCell: '' };\n          x = 0;\n          c = {\n            name: 'cornerCell',\n            width: self.style.rowHeaderCellWidth,\n            style: 'cornerCell',\n            type: 'string',\n            index: -1,\n          };\n          drawCell(cornerCell, -1, -1)(c, -1, -1);\n        }\n      }\n    }\n    function drawRow(r, d) {\n      var i,\n        treeHeight,\n        rowSansTreeHeight,\n        o,\n        g = s.length;\n      if (y - cellHeight * 2 > h) {\n        return false;\n      }\n      rd = data[r];\n      rowOpen = self.openChildren[r];\n      rowSansTreeHeight =\n        (self.sizes.rows[r] || self.style.cellHeight) * self.scale;\n      treeHeight = (rowOpen ? self.sizes.trees[r] : 0) * self.scale;\n      rowHeight = rowSansTreeHeight + treeHeight;\n      if (y < -rowHeight) {\n        return false;\n      }\n      if (self.attributes.showRowHeaders) {\n        x += rowHeaderCellWidth;\n      }\n      cellHeight = rowHeight;\n      //draw normal columns\n      for (o = self.scrollIndexLeft; o < g; o += 1) {\n        i = self.orders.columns[o];\n        x += drawCell(rd, r, d)(s[i], i, o);\n        if (x > self.width) {\n          self.scrollIndexRight = o;\n          self.scrollPixelRight = x;\n          break;\n        }\n      }\n      //draw frozen columns\n      x = 0;\n      if (self.attributes.showRowHeaders) {\n        x += rowHeaderCellWidth;\n      }\n      for (o = 0; o < self.frozenColumn; o += 1) {\n        i = self.orders.columns[o];\n        x += drawCell(rd, r, d)(s[i], i, o);\n        if (x > self.width) {\n          break;\n        }\n      }\n      self.lastFrozenColumnPixel = x;\n      // cell height might have changed during drawing\n      cellHeight = rowHeight;\n      x =\n        -self.scrollBox.scrollLeft +\n        self.scrollPixelLeft +\n        self.style.cellBorderWidth;\n      // don't draw a tree for the new row\n      treeGrid = self.childGrids[r];\n      if (r !== data.length && rowOpen) {\n        treeGrid.visible = true;\n        treeGrid.parentNode = {\n          offsetTop: y + rowSansTreeHeight + self.canvasOffsetTop,\n          offsetLeft: rowHeaderCellWidth - 1 + self.canvasOffsetLeft,\n          offsetHeight: treeHeight,\n          offsetWidth:\n            self.width - rowHeaderCellWidth - self.style.scrollBarWidth - 1,\n          offsetParent: self.intf.parentNode,\n          parentNode: self.intf.parentNode,\n          style: self.style,\n          nodeType: 'canvas-datagrid-tree',\n          scrollTop: self.scrollBox.scrollTop,\n          scrollLeft: self.scrollBox.scrollLeft,\n          rowIndex: r,\n        };\n        self.visibleCells.unshift({\n          rowIndex: r,\n          columnIndex: 0,\n          y: treeGrid.parentNode.offsetTop,\n          x: treeGrid.parentNode.offsetLeft,\n          height: treeGrid.height,\n          width: treeGrid.width,\n          style: 'tree-grid',\n          type: treeGrid.parentNode.nodeType,\n        });\n        treeGrid.draw();\n      } else if (treeGrid) {\n        treeGrid.parentNode.offsetHeight = 0;\n        delete self.sizes.trees[r];\n      }\n      rowHeaders.push([rd, r, d, y, rowHeight]);\n      self.visibleRowHeights[r] = rowHeight;\n      y += cellHeight + (bc ? 0 : self.style.cellBorderWidth);\n      return true;\n    }\n    function initDraw() {\n      self.visibleRows = [];\n      s = self.getSchema();\n      self.visibleCells = [];\n      self.canvasOffsetTop = self.isChildGrid ? self.parentNode.offsetTop : 0.5;\n      self.canvasOffsetLeft = self.isChildGrid\n        ? self.parentNode.offsetLeft\n        : -0.5;\n      h = self.height;\n      w = self.width;\n    }\n    function drawBackground() {\n      radiusRect(0, 0, w, h, 0);\n      self.ctx.clip();\n      self.ctx.fillStyle = self.style.gridBackgroundColor;\n      fillRect(0, 0, w, h);\n    }\n    function drawFrozenRows() {\n      var n,\n        ln = Math.min(data.length, self.frozenRow);\n      x =\n        -self.scrollBox.scrollLeft +\n        self.scrollPixelLeft +\n        self.style.cellBorderWidth;\n      y = columnHeaderCellHeight;\n      for (r = 0; r < ln; r += 1) {\n        n = self.orders.rows[r];\n        if (!drawRow(n, r)) {\n          break;\n        }\n      }\n      if (self.attributes.allowFreezingRows) {\n        // HACK great, another stupid magic number.\n        // Background will appear as a 0.5px artifact behind the row freeze bar without this hack\n        y +=\n          self.style.frozenMarkerBorderWidth +\n          self.style.frozenMarkerWidth -\n          0.4999999999;\n      }\n      self.lastFrozenRowPixel = y;\n    }\n    function drawRows() {\n      self.ctx.save();\n      if (self.frozenRow > 0) {\n        radiusRect(\n          0,\n          self.lastFrozenRowPixel,\n          self.width,\n          self.height - self.lastFrozenRowPixel,\n          0,\n        );\n        self.ctx.clip();\n      }\n      var o,\n        n,\n        i,\n        g = s.length;\n      x =\n        -self.scrollBox.scrollLeft +\n        self.scrollPixelLeft +\n        self.style.cellBorderWidth;\n      if (!self.attributes.snapToRow) {\n        y +=\n          -self.scrollBox.scrollTop +\n          self.scrollPixelTop +\n          self.style.cellBorderWidth;\n      }\n      for (r = self.frozenRow + self.scrollIndexTop; r < l; r += 1) {\n        n = self.orders.rows[r];\n        self.scrollIndexBottom = r;\n        self.scrollPixelBottom = y;\n        if (!drawRow(n, r)) {\n          break;\n        }\n      }\n      if (self.attributes.showNewRow) {\n        if (self.attributes.showRowHeaders) {\n          x += rowHeaderCellWidth;\n        }\n        rowHeight = cellHeight = self.style.cellHeight;\n        rowOpen = false;\n        for (o = self.scrollIndexLeft; o < g; o += 1) {\n          i = self.orders.columns[o];\n          x += drawCell(self.newRow, data.length, data.length)(s[i], i, o);\n          if (x > self.width + self.scrollBox.scrollLeft) {\n            break;\n          }\n        }\n        rowHeaders.push([self.newRow, data.length, data.length, y, rowHeight]);\n      }\n      self.ctx.restore();\n    }\n    function drawMoveMarkers() {\n      if (!self.movingSelection) {\n        return;\n      }\n      self.ctx.lineWidth = self.style.moveOverlayBorderWidth;\n      self.ctx.strokeStyle = self.style.moveOverlayBorderColor;\n      self.ctx.setLineDash(self.style.moveOverlayBorderSegments);\n      moveBorders.forEach(function (c) {\n        addBorderLine(c[0], c[1]);\n      });\n      self.ctx.setLineDash([]);\n    }\n    function drawReorderMarkers() {\n      if (!self.reorderObject) {\n        return;\n      }\n      var b = {\n          height: self.reorderObject.height,\n          width: self.reorderObject.width,\n          x: self.reorderObject.x + self.reorderObject.dragOffset.x,\n          y: self.reorderObject.y + self.reorderObject.dragOffset.y,\n        },\n        m = {\n          width: w,\n          height: h,\n          x: 0,\n          y: 0,\n        };\n      self.ctx.fillStyle = self.style.reorderMarkerBackgroundColor;\n      self.ctx.lineWidth = self.style.reorderMarkerBorderWidth;\n      self.ctx.strokeStyle = self.style.reorderMarkerBorderColor;\n      if (self.dragMode === 'row-reorder') {\n        b.width = w;\n        b.x = 0;\n        m.width = w;\n        m.height = self.currentCell.height;\n        m.y = self.currentCell.y;\n        fillRect(b.x, b.y, b.width, b.height);\n        strokeRect(b.x, b.y, b.width, b.height);\n        self.ctx.lineWidth = self.style.reorderMarkerIndexBorderWidth;\n        self.ctx.strokeStyle = self.style.reorderMarkerIndexBorderColor;\n        if (\n          self.currentCell.rowIndex !== self.reorderObject.rowIndex &&\n          self.currentCell.rowIndex > -1 &&\n          self.currentCell.rowIndex < l\n        ) {\n          addBorderLine(\n            m,\n            self.reorderTarget.sortRowIndex > self.reorderObject.sortRowIndex\n              ? 'b'\n              : 't',\n          );\n        }\n      } else if (self.dragMode === 'column-reorder' && self.reorderObject) {\n        b.height = h;\n        b.y = 0;\n        m.height = h;\n        m.width = self.currentCell.width;\n        m.y = 0;\n        m.x = self.currentCell.x;\n        fillRect(b.x, b.y, b.width, b.height);\n        strokeRect(b.x, b.y, b.width, b.height);\n        self.ctx.lineWidth = self.style.reorderMarkerIndexBorderWidth;\n        self.ctx.strokeStyle = self.style.reorderMarkerIndexBorderColor;\n        if (\n          self.currentCell.sortColumnIndex !==\n            self.reorderObject.sortColumnIndex &&\n          self.currentCell.sortColumnIndex > -1 &&\n          self.currentCell.sortColumnIndex < s.length\n        ) {\n          addBorderLine(\n            m,\n            self.reorderTarget.columnIndex > self.reorderObject.columnIndex\n              ? 'r'\n              : 'l',\n          );\n        }\n      }\n    }\n    function drawBorder() {\n      self.ctx.lineWidth = self.style.gridBorderWidth;\n      self.ctx.strokeStyle = self.style.gridBorderColor;\n      strokeRect(0, 0, self.width, self.height);\n    }\n    function drawSelectionBorders() {\n      self.ctx.lineWidth = self.style.selectionOverlayBorderWidth;\n      self.ctx.strokeStyle = self.style.selectionOverlayBorderColor;\n      function dsb(c) {\n        addBorderLine(c[0], c[1]);\n      }\n      selectionBorders\n        .filter(function (c) {\n          return (\n            c[0].rowIndex < self.frozenRow &&\n            c[0].columnIndex < self.frozenColumn\n          );\n        })\n        .forEach(dsb);\n      self.ctx.save();\n      clipFrozenArea(0);\n      selectionBorders\n        .filter(function (c) {\n          return (\n            c[0].rowIndex >= self.frozenRow &&\n            c[0].columnIndex >= self.frozenColumn\n          );\n        })\n        .forEach(dsb);\n      self.ctx.restore();\n      self.ctx.save();\n      clipFrozenArea(1);\n      selectionBorders\n        .filter(function (c) {\n          return (\n            c[0].rowIndex >= self.frozenRow &&\n            c[0].columnIndex < self.frozenColumn\n          );\n        })\n        .forEach(dsb);\n      self.ctx.restore();\n      self.ctx.save();\n      clipFrozenArea(2);\n      selectionBorders\n        .filter(function (c) {\n          return (\n            c[0].rowIndex < self.frozenRow &&\n            c[0].columnIndex >= self.frozenColumn\n          );\n        })\n        .forEach(dsb);\n      self.ctx.restore();\n    }\n    function drawSelectionHandles() {\n      if (self.mobile || self.attributes.allowMovingSelection) {\n        self.ctx.lineWidth = self.style.selectionHandleBorderWidth;\n        self.ctx.strokeStyle = self.style.selectionHandleBorderColor;\n        self.ctx.fillStyle = self.style.selectionHandleColor;\n        selectionHandles.forEach(function (c) {\n          addselectionHandle(c[0], c[1]);\n          var az = self.attributes.touchSelectHandleZone / 2,\n            ax =\n              c[0].x + (c[1] === 'tl' || c[1] === 'bl' ? 0 : c[0].width) - az,\n            ay =\n              c[0].y + (c[1] === 'bl' || c[1] === 'br' ? c[0].height : 0) - az;\n          self.visibleCells.unshift({\n            x: ax,\n            y: ay,\n            height: self.style.selectionHandleSize + az,\n            width: self.style.selectionHandleSize + az,\n            style: 'selection-handle-' + c[1],\n          });\n        });\n      }\n    }\n    function drawActiveCell() {\n      if (!aCell) {\n        return;\n      }\n      self.ctx.save();\n      var cl =\n          self.activeCell.columnIndex + 1 > self.frozenColumn ||\n          self.activeCell.rowIndex + 1 > self.frozenRow,\n        acx = cl ? self.lastFrozenColumnPixel : 0,\n        acy = cl ? self.lastFrozenRowPixel : 0,\n        acw = cl ? self.width - self.lastFrozenColumnPixel : self.width,\n        ach = cl ? self.height - self.lastFrozenRowPixel : self.height;\n      radiusRect(acx, acy, acw, ach, 0);\n      self.ctx.clip();\n      if (self.attributes.selectionMode === 'row') {\n        if (self.activeCell && self.activeCell.rowIndex === aCell.rowIndex) {\n          self.ctx.lineWidth = self.style.activeCellOverlayBorderWidth;\n          self.ctx.strokeStyle = self.style.activeCellOverlayBorderColor;\n          strokeRect(\n            1,\n            aCell.y,\n            self.getHeaderWidth() + rowHeaderCellWidth,\n            self.visibleRowHeights[aCell.rowIndex],\n          );\n        }\n      } else {\n        self.ctx.lineWidth = self.style.activeCellOverlayBorderWidth;\n        self.ctx.strokeStyle = self.style.activeCellOverlayBorderColor;\n        strokeRect(aCell.x, aCell.y, aCell.width, aCell.height);\n      }\n      self.ctx.restore();\n    }\n    function drawFrozenMarkers() {\n      var my = self.lastFrozenRowPixel - self.style.frozenMarkerWidth,\n        mx = self.lastFrozenColumnPixel - self.style.frozenMarkerBorderWidth,\n        xHover =\n          self.currentCell && self.currentCell.style === 'frozen-row-marker',\n        yHover =\n          self.currentCell && self.currentCell.style === 'frozen-column-marker';\n      self.ctx.lineWidth = self.style.frozenMarkerBorderWidth;\n      if (self.attributes.allowFreezingColumns) {\n        self.ctx.fillStyle = yHover\n          ? self.style.frozenMarkerHoverColor\n          : self.style.frozenMarkerColor;\n        self.ctx.strokeStyle = yHover\n          ? self.style.frozenMarkerHoverBorderColor\n          : self.style.frozenMarkerBorderColor;\n        fillRect(mx, 0, self.style.frozenMarkerWidth, self.height);\n        strokeRect(mx, 0, self.style.frozenMarkerWidth, self.height);\n        self.visibleCells.unshift({\n          x: mx,\n          y: 0,\n          height: self.height,\n          width:\n            self.style.frozenMarkerWidth + self.style.frozenMarkerBorderWidth,\n          style: 'frozen-column-marker',\n        });\n      }\n      if (self.attributes.allowFreezingRows) {\n        self.ctx.fillStyle = xHover\n          ? self.style.frozenMarkerHoverColor\n          : self.style.frozenMarkerColor;\n        self.ctx.strokeStyle = xHover\n          ? self.style.frozenMarkerHoverBorderColor\n          : self.style.frozenMarkerBorderColor;\n        fillRect(0, my, self.width, self.style.frozenMarkerWidth);\n        strokeRect(0, my, self.width, self.style.frozenMarkerWidth);\n        self.visibleCells.unshift({\n          x: 0,\n          y: my,\n          height:\n            self.style.frozenMarkerWidth + self.style.frozenMarkerBorderWidth,\n          width: self.width,\n          style: 'frozen-row-marker',\n        });\n      }\n      if (self.freezeMarkerPosition) {\n        self.ctx.fillStyle = self.style.frozenMarkerActiveColor;\n        self.ctx.strokeStyle = self.style.frozenMarkerActiveBorderColor;\n        if (self.dragMode === 'frozen-column-marker') {\n          fillRect(\n            self.freezeMarkerPosition.x,\n            0,\n            self.style.frozenMarkerWidth,\n            self.height,\n          );\n          strokeRect(\n            self.freezeMarkerPosition.x,\n            0,\n            self.style.frozenMarkerWidth,\n            self.height,\n          );\n        } else {\n          fillRect(\n            0,\n            self.freezeMarkerPosition.y,\n            self.width,\n            self.style.frozenMarkerWidth,\n          );\n          strokeRect(\n            0,\n            self.freezeMarkerPosition.y,\n            self.width,\n            self.style.frozenMarkerWidth,\n          );\n        }\n      }\n    }\n    function drawPerfLines() {\n      if (!self.attributes.showPerformance) {\n        return;\n      }\n      var pw = 250,\n        px =\n          self.width -\n          pw -\n          self.style.scrollBarWidth -\n          self.style.scrollBarBorderWidth * 2,\n        py = columnHeaderCellHeight,\n        ph = 100;\n      if (scrollDebugCounters.length === 0) {\n        scrollDebugCounters = fillArray(0, perfWindowSize, 1, function () {\n          return [0, 0];\n        });\n      }\n      if (touchPPSCounters.length === 0) {\n        touchPPSCounters = fillArray(0, perfWindowSize, 1, function () {\n          return [0, 0];\n        });\n      }\n      if (entityCount.length === 0) {\n        entityCount = fillArray(0, perfWindowSize, 1, 0);\n      }\n      self.ctx.lineWidth = 0.5;\n      function dpl(name, perfArr, arrIndex, max, color, useAbs, rowIndex) {\n        var v;\n        drawPerfLine(pw, ph, px, py, perfArr, arrIndex, max, color, useAbs);\n        self.ctx.fillStyle = color;\n        fillRect(3 + px, py + 9 + rowIndex * 11, 8, 8);\n        self.ctx.fillStyle = self.style.debugPerfChartTextColor;\n        v = arrIndex !== undefined ? perfArr[0][arrIndex] : perfArr[0];\n        fillText(\n          name + ' ' + (isNaN(v) ? 0 : v).toFixed(3),\n          14 + px,\n          py + 16 + rowIndex * 11,\n        );\n      }\n      self.ctx.textAlign = 'left';\n      self.ctx.font = self.style.debugFont;\n      self.ctx.fillStyle = self.style.debugPerfChartBackground;\n      fillRect(px, py, pw, ph);\n      [\n        [\n          'Scroll Height',\n          scrollDebugCounters,\n          0,\n          self.scrollBox.scrollHeight,\n          self.style.debugScrollHeightColor,\n          false,\n        ],\n        [\n          'Scroll Width',\n          scrollDebugCounters,\n          1,\n          self.scrollBox.scrollWidth,\n          self.style.debugScrollWidthColor,\n          false,\n        ],\n        [\n          'Performance',\n          perfCounters,\n          undefined,\n          200,\n          self.style.debugPerformanceColor,\n          false,\n        ],\n        [\n          'Entities',\n          entityCount,\n          undefined,\n          1500,\n          self.style.debugEntitiesColor,\n          false,\n        ],\n        [\n          'TouchPPSX',\n          touchPPSCounters,\n          0,\n          1000,\n          self.style.debugTouchPPSXColor,\n          true,\n        ],\n        [\n          'TouchPPSY',\n          touchPPSCounters,\n          1,\n          1000,\n          self.style.debugTouchPPSYColor,\n          true,\n        ],\n      ].forEach(function (i, index) {\n        i.push(index);\n        dpl.apply(null, i);\n      });\n      self.ctx.fillStyle = self.style.debugPerfChartBackground;\n      entityCount.pop();\n      entityCount.unshift(self.visibleCells.length);\n      scrollDebugCounters.pop();\n      scrollDebugCounters.unshift([\n        self.scrollBox.scrollTop,\n        self.scrollBox.scrollLeft,\n      ]);\n      touchPPSCounters.pop();\n      touchPPSCounters.unshift([self.yPPS, self.xPPS]);\n    }\n    function drawDebug() {\n      self.ctx.save();\n      var d;\n      if (self.attributes.showPerformance || self.attributes.debug) {\n        if (perfCounters.length === 0) {\n          perfCounters = fillArray(0, perfWindowSize, 1, 0);\n        }\n        perfCounters.pop();\n        perfCounters.unshift(performance.now() - p);\n      }\n      if (!self.attributes.debug) {\n        self.ctx.restore();\n        return;\n      }\n      self.ctx.font = self.style.debugFont;\n      d = {};\n      d.perf = (\n        perfCounters.reduce(function (a, b) {\n          return a + b;\n        }, 0) / Math.min(drawCount, perfCounters.length)\n      ).toFixed(1);\n      d.perfDelta = perfCounters[0].toFixed(1);\n      d.frozenColumnsWidth = getFrozenColumnsWidth();\n      d.htmlImages = Object.keys(self.htmlImageCache).length;\n      d.reorderObject =\n        'x: ' +\n        (self.reorderObject || { columnIndex: 0 }).columnIndex +\n        ', y: ' +\n        (self.reorderObject || { rowIndex: 0 }).rowIndex;\n      d.reorderTarget =\n        'x: ' +\n        (self.reorderTarget || { columnIndex: 0 }).columnIndex +\n        ', y: ' +\n        (self.reorderTarget || { rowIndex: 0 }).rowIndex;\n      d.scale = self.scale;\n      d.startScale = self.startScale;\n      d.scaleDelta = self.scaleDelta;\n      d.zoomDeltaStart = self.zoomDeltaStart;\n      d.touchLength = self.touchLength;\n      d.touches =\n        'y0: ' +\n        (self.touchPosition || { y: 0 }).y +\n        ' y1: ' +\n        (self.touchPosition1 || { y: 0 }).y;\n      d.scrollBox = self.scrollBox.toString();\n      d.scrollIndex =\n        'x: ' + self.scrollIndexLeft + ', y: ' + self.scrollIndexTop;\n      d.scrollPixel =\n        'x: ' + self.scrollPixelLeft + ', y: ' + self.scrollPixelTop;\n      d.canvasOffset =\n        'x: ' + self.canvasOffsetLeft + ', y: ' + self.canvasOffsetTop;\n      d.touchDelta = 'x: ' + self.touchDelta.x + ', y: ' + self.touchDelta.y;\n      d.touchAnimateTo =\n        'x: ' + self.touchAnimateTo.x + ', y: ' + self.touchAnimateTo.y;\n      d.scrollAnimation =\n        'x: ' + self.scrollAnimation.x + ', y: ' + self.scrollAnimation.y;\n      d.touchPPS = 'x: ' + self.xPPS + ', y: ' + self.yPPS;\n      d.touchPPST = 'x: ' + self.xPPST + ', y: ' + self.yPPST;\n      d.touchDuration = self.touchDuration;\n      d.pointerLockPosition = self.pointerLockPosition\n        ? self.pointerLockPosition.x + ', ' + self.pointerLockPosition.y\n        : '';\n      d.size = 'w: ' + self.width + ', h: ' + self.height;\n      d.mouse = 'x: ' + self.mouse.x + ', y: ' + self.mouse.y;\n      d.touch = !self.touchStart\n        ? ''\n        : 'x: ' + self.touchStart.x + ', y: ' + self.touchStart.y;\n      d.entities = self.visibleCells.length;\n      d.hasFocus = self.hasFocus;\n      d.dragMode = self.dragMode;\n      if (self.currentCell) {\n        d.columnIndex = self.currentCell.columnIndex;\n        d.rowIndex = self.currentCell.rowIndex;\n        d.sortColumnIndex = self.currentCell.sortColumnIndex;\n        d.sortRowIndex = self.currentCell.sortRowIndex;\n        d.context = self.currentCell.context;\n        d.dragContext = self.currentCell.dragContext;\n        d.style = self.currentCell.style;\n        d.type = self.currentCell.type;\n      }\n      self.ctx.textAlign = 'right';\n      self.ctx.fillStyle = self.style.debugBackgroundColor;\n      fillRect(0, 0, self.width, self.height);\n      Object.keys(d).forEach(function (key, index) {\n        var m = key + ': ' + d[key],\n          lh = 14;\n        self.ctx.fillStyle = self.style.debugColor;\n        fillText(\n          m,\n          w - 20,\n          (self.attributes.showPerformance ? 140 : 24) + index * lh,\n        );\n      });\n      self.ctx.restore();\n    }\n    self.ctx.save();\n    initDraw();\n    drawBackground();\n    drawFrozenRows();\n    drawRows();\n    drawActiveCell();\n    drawHeaders();\n    drawFrozenMarkers();\n    drawSelectionHandles();\n    drawReorderMarkers();\n    drawMoveMarkers();\n    drawBorder();\n    drawSelectionBorders();\n    drawScrollBars();\n    if (checkScrollHeight) {\n      self.resize(true);\n    }\n    drawDebug();\n    drawPerfLines();\n    if (self.dispatchEvent('afterdraw', {})) {\n      return;\n    }\n    self.ctx.restore();\n  };\n}\n","module.exports=function(e){var o={};function a(t){if(o[t])return o[t].exports;var r=o[t]={i:t,l:!1,exports:{}};return e[t].call(r.exports,r,r.exports,a),r.l=!0,r.exports}return a.m=e,a.c=o,a.d=function(e,o,t){a.o(e,o)||Object.defineProperty(e,o,{enumerable:!0,get:t})},a.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},a.t=function(e,o){if(1&o&&(e=a(e)),8&o)return e;if(4&o&&\"object\"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(a.r(t),Object.defineProperty(t,\"default\",{enumerable:!0,value:e}),2&o&&\"string\"!=typeof e)for(var r in e)a.d(t,r,function(o){return e[o]}.bind(null,r));return t},a.n=function(e){var o=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(o,\"a\",o),o},a.o=function(e,o){return Object.prototype.hasOwnProperty.call(e,o)},a.p=\"\",a(a.s=0)}([function(e,o,a){\"use strict\";Object.defineProperty(o,\"__esModule\",{value:!0});var t=a(1),r=Object.keys(t.default).reduce((function(e,o){return e.concat(t.default[o])}),[]);o.default=function(e){return-1===r.indexOf(e.key)}},function(e,o,a){\"use strict\";Object.defineProperty(o,\"__esModule\",{value:!0});o.default={modifier:[\"Alt\",\"AltGraph\",\"CapsLock\",\"Control\",\"Fn\",\"FnLock\",\"Meta\",\"NumLock\",\"ScrollLock\",\"Shift\",\"Symbol\",\"SymbolLock\"],legacyModifier:[\"Hyper\",\"Super\"],whiteSpace:[\"Enter\",\"Tab\"],navigation:[\"ArrowDown\",\"ArrowLeft\",\"ArrowRight\",\"ArrowUp\",\"End\",\"Home\",\"PageDown\",\"PageUp\"],editing:[\"Backspace\",\"Clear\",\"Copy\",\"CrSel\",\"Cut\",\"Delete\",\"EraseEof\",\"ExSel\",\"Insert\",\"Paste\",\"Redo\",\"Undo\"],ui:[\"Accept\",\"Again\",\"Attn\",\"Cancel\",\"ContextMenu\",\"Escape\",\"Execute\",\"Find\",\"Help\",\"Pause\",\"Play\",\"Props\",\"Select\",\"ZoomIn\",\"ZoomOut\"],device:[\"BrightnessDown\",\"BrightnessUp\",\"Eject\",\"LogOff\",\"Power\",\"PowerOff\",\"PrintScreen\",\"Hibernate\",\"Standby\",\"WakeUp\"],imeCompositionKeys:[\"AllCandidates\",\"Alphanumeric\",\"CodeInput\",\"Compose\",\"Convert\",\"Dead\",\"FinalMode\",\"GroupFirst\",\"GroupLast\",\"GroupNext\",\"GroupPrevious\",\"ModeChange\",\"NextCandidate\",\"NonConvert\",\"PreviousCandidate\",\"Process\",\"SingleCandidate\"],koreanSpecific:[\"HangulMode\",\"HanjaMode\",\"JunjaMode\"],japaneseSpecific:[\"Eisu\",\"Hankaku\",\"Hiragana\",\"HiraganaKatakana\",\"KanaMode\",\"KanjiMode\",\"Katakana\",\"Romaji\",\"Zenkaku\",\"ZenkakuHankaku\"],commonFunction:[\"F1\",\"F2\",\"F3\",\"F4\",\"F5\",\"F6\",\"F7\",\"F8\",\"F9\",\"F10\",\"F11\",\"F12\",\"Soft1\",\"Soft2\",\"Soft3\",\"Soft4\"],multimedia:[\"ChannelDown\",\"ChannelUp\",\"Close\",\"MailForward\",\"MailReply\",\"MailSend\",\"MediaClose\",\"MediaFastForward\",\"MediaPause\",\"MediaPlay\",\"MediaPlayPause\",\"MediaRecord\",\"MediaRewind\",\"MediaStop\",\"MediaTrackNext\",\"MediaTrackPrevious\",\"New\",\"Open\",\"Print\",\"Save\",\"SpellCheck\"],multimediaNumpad:[\"Key11\",\"Key12\"],audio:[\"AudioBalanceLeft\",\"AudioBalanceRight\",\"AudioBassBoostDown\",\"AudioBassBoostToggle\",\"AudioBassBoostUp\",\"AudioFaderFront\",\"AudioFaderRear\",\"AudioSurroundModeNext\",\"AudioTrebleDown\",\"AudioTrebleUp\",\"AudioVolumeDown\",\"AudioVolumeUp\",\"AudioVolumeMute\",\"MicrophoneToggle\",\"MicrophoneVolumeDown\",\"MicrophoneVolumeUp\",\"MicrophoneVolumeMute\"],speech:[\"SpeechCorrectionList\",\"SpeechInputToggle\"],application:[\"LaunchApplication1\",\"LaunchApplication2\",\"LaunchCalendar\",\"LaunchContacts\",\"LaunchMail\",\"LaunchMediaPlayer\",\"LaunchMusicPlayer\",\"LaunchPhone\",\"LaunchScreenSaver\",\"LaunchSpreadsheet\",\"LaunchWebBrowser\",\"LaunchWebCam\",\"LaunchWordProcessor\"],browser:[\"BrowserBack\",\"BrowserFavorites\",\"BrowserForward\",\"BrowserHome\",\"BrowserRefresh\",\"BrowserSearch\",\"BrowserStop\"],mobilePhone:[\"AppSwitch\",\"Call\",\"Camera\",\"CameraFocus\",\"EndCall\",\"GoBack\",\"GoHome\",\"HeadsetHook\",\"LastNumberRedial\",\"Notification\",\"MannerMode\",\"VoiceDial\"],tv:[\"TV\",\"TV3DMode\",\"TVAntennaCable\",\"TVAudioDescription\",\"TVAudioDescriptionMixDown\",\"TVAudioDescriptionMixUp\",\"TVContentsMenu\",\"TVDataService\",\"TVInput\",\"TVInputComponent1\",\"TVInputComponent2\",\"TVInputComposite1\",\"TVInputComposite2\",\"TVInputHDMI1\",\"TVInputHDMI2\",\"TVInputHDMI3\",\"TVInputHDMI4\",\"TVInputVGA1\",\"TVMediaContext\",\"TVNetwork\",\"TVNumberEntry\",\"TVPower\",\"TVRadioService\",\"TVSatellite\",\"TVSatelliteBS\",\"TVSatelliteCS\",\"TVSatelliteToggle\",\"TVTerrestrialAnalog\",\"TVTerrestrialDigital\",\"TVTimer\"],mediaControls:[\"AVRInput\",\"AVRPower\",\"ColorF0Red\",\"ColorF1Green\",\"ColorF2Yellow\",\"ColorF3Blue\",\"ColorF4Grey\",\"ColorF5Brown\",\"ClosedCaptionToggle\",\"Dimmer\",\"DisplaySwap\",\"DVR\",\"Exit\",\"FavoriteClear0\",\"FavoriteClear1\",\"FavoriteClear2\",\"FavoriteClear3\",\"FavoriteRecall0\",\"FavoriteRecall1\",\"FavoriteRecall2\",\"FavoriteRecall3\",\"FavoriteStore0\",\"FavoriteStore1\",\"FavoriteStore2\",\"FavoriteStore3\",\"Guide\",\"GuideNextDay\",\"GuidePreviousDay\",\"Info\",\"InstantReplay\",\"Link\",\"ListProgram\",\"LiveContent\",\"Lock\",\"MediaApps\",\"MediaAudioTrack\",\"MediaLast\",\"MediaSkipBackward\",\"MediaSkipForward\",\"MediaStepBackward\",\"MediaStepForward\",\"MediaTopMenu\",\"NavigateIn\",\"NavigateNext\",\"NavigateOut\",\"NavigatePrevious\",\"NextFavoriteChannel\",\"NextUserProfile\",\"OnDemand\",\"Pairing\",\"PinPDown\",\"PinPMove\",\"PinPToggle\",\"PinPUp\",\"PlaySpeedDown\",\"PlaySpeedReset\",\"PlaySpeedUp\",\"RandomToggle\",\"RcLowBattery\",\"RecordSpeedNext\",\"RfBypass\",\"ScanChannelsToggle\",\"ScreenModeNext\",\"Settings\",\"SplitScreenToggle\",\"STBInput\",\"STBPower\",\"Subtitle\",\"Teletext\",\"VideoModeNext\",\"Wink\",\"ZoomToggle\"]}}]).default;","/*jslint browser: true, unparam: true, todo: true, plusplus: true*/\n/*globals define: true, MutationObserver: false, requestAnimationFrame: false, performance: false, btoa: false*/\n'use strict';\n\nimport isPrintableKeyEvent from 'is-printable-key-event';\n\nexport default function (self) {\n  var wheeling;\n  self.stopPropagation = function (e) {\n    e.stopPropagation();\n  };\n  /**\n   * Adds an event listener to the given event.\n   * @memberof canvasDatagrid\n   * @name addEventListener\n   * @method\n   * @param {string} ev The name of the event to subscribe to.\n   * @param {function} fn The event procedure to execute when the event is raised.\n   */\n  self.addEventListener = function (ev, fn) {\n    self.events[ev] = self.events[ev] || [];\n    self.events[ev].unshift(fn);\n  };\n  /**\n   * Removes the given listener function from the given event.  Must be an actual reference to the function that was bound.\n   * @memberof canvasDatagrid\n   * @name removeEventListener\n   * @method\n   * @param {string} ev The name of the event to unsubscribe from.\n   * @param {function} fn The event procedure to execute when the event is raised.\n   */\n  self.removeEventListener = function (ev, fn) {\n    (self.events[ev] || []).forEach(function removeEachListener(sfn, idx) {\n      if (fn === sfn) {\n        self.events[ev].splice(idx, 1);\n      }\n    });\n  };\n  /**\n   * Fires the given event, passing an event object to the event subscribers.\n   * @memberof canvasDatagrid\n   * @name dispatchEvent\n   * @method\n   * @param {number} ev The name of the event to dispatch.\n   * @param {number} e The event object.\n   */\n  self.dispatchEvent = function (ev, e) {\n    e = ev.type ? ev : e || {};\n    ev = ev.type || ev;\n    var defaultPrevented;\n    function preventDefault() {\n      defaultPrevented = true;\n    }\n    if (!self.events[ev]) {\n      return;\n    }\n    self.events[ev].forEach(function dispatchEachEvent(fn) {\n      e.ctx = self.ctx;\n      e.preventDefault = preventDefault;\n      fn.apply(self.intf, [e]);\n    });\n    return defaultPrevented;\n  };\n  self.getRatio = function () {\n    return Math.min(\n      self.attributes.maxPixelRatio,\n      (window.devicePixelRatio || 1) /\n        (self.ctx.webkitBackingStorePixelRatio ||\n          self.ctx.mozBackingStorePixelRatio ||\n          self.ctx.msBackingStorePixelRatio ||\n          self.ctx.oBackingStorePixelRatio ||\n          self.ctx.backingStorePixelRatio ||\n          1),\n    );\n  };\n  self.resize = function (drawAfterResize) {\n    if (!self.canvas) {\n      return;\n    }\n    var x,\n      v = {\n        x: 0,\n        y: 0,\n        height: 0,\n        width: 0,\n        style: 'vertical-scroll-bar',\n      },\n      n = {\n        x: 0,\n        y: 0,\n        height: 0,\n        width: 0,\n        style: 'horizontal-scroll-bar',\n      },\n      vb = {\n        x: 0,\n        y: 0,\n        height: 0,\n        width: 0,\n        style: 'vertical-scroll-box',\n      },\n      nb = {\n        x: 0,\n        y: 0,\n        height: 0,\n        width: 0,\n        style: 'horizontal-scroll-box',\n      },\n      co = {\n        x: 0,\n        y: 0,\n        height: 0,\n        width: 0,\n        isCorner: true,\n        isScrollBoxCorner: true,\n        style: 'scroll-box-corner',\n      },\n      m = self.style.scrollBarBoxMargin * 2,\n      b = self.style.scrollBarBorderWidth * 2,\n      d = self.style.scrollBarBoxMargin * 0.5,\n      sbw = self.style.scrollBarWidth + self.style.scrollBarBorderWidth * 2,\n      ratio = self.getRatio(),\n      bm = self.style.gridBorderCollapse === 'collapse' ? 1 : 2,\n      cellBorder = self.style.cellBorderWidth * bm,\n      columnHeaderCellBorder = self.style.columnHeaderCellBorderWidth * bm,\n      dataHeight = 0,\n      dataWidth = 0,\n      dims,\n      l = (self.data || []).length,\n      columnHeaderCellHeight = self.getColumnHeaderCellHeight(),\n      rowHeaderCellWidth = self.getRowHeaderCellWidth(),\n      ch = self.style.cellHeight,\n      s = self.getSchema();\n    // sets actual DOM canvas element\n    function checkScrollBoxVisibility() {\n      self.scrollBox.horizontalBarVisible =\n        (self.style.width !== 'auto' &&\n          dataWidth > self.scrollBox.width &&\n          self.style.overflowX !== 'hidden') ||\n        self.style.overflowX === 'scroll';\n      self.scrollBox.horizontalBoxVisible = dataWidth > self.scrollBox.width;\n      self.scrollBox.verticalBarVisible =\n        (self.style.height !== 'auto' &&\n          dataHeight > self.scrollBox.height &&\n          self.style.overflowY !== 'hidden') ||\n        self.style.overflowY === 'scroll';\n      self.scrollBox.verticalBoxVisible = dataHeight > self.scrollBox.height;\n    }\n    function setScrollBoxSize() {\n      self.scrollBox.width = self.width - rowHeaderCellWidth;\n      self.scrollBox.height = self.height - columnHeaderCellHeight;\n    }\n    function setCanvasSize() {\n      if (self.isChildGrid) {\n        return;\n      }\n      dims = {\n        // HACK +1 ? maybe it's a magic cell border?  Required to line up properly in auto height mode.\n        height: columnHeaderCellHeight + dataHeight + cellBorder + 1,\n        width: dataWidth + rowHeaderCellWidth + cellBorder,\n      };\n      ['width', 'height'].forEach(function (dim) {\n        //TODO: support inherit\n        if (\n          ['auto', undefined].indexOf(self.style[dim]) !== -1 &&\n          ['auto', undefined].indexOf(self.appliedInlineStyles[dim]) !== -1\n        ) {\n          self.parentNodeStyle[dim] = dims[dim] + 'px';\n        } else if (\n          ['auto', undefined].indexOf(self.style[dim]) == -1 &&\n          ['auto', undefined].indexOf(self.appliedInlineStyles[dim]) == -1\n        ) {\n          self.parentNodeStyle[dim] = self.style[dim];\n          if (self.isComponet) {\n            self.canvas.style[dim] = self.style[dim];\n          }\n        }\n      });\n    }\n    self.scrollCache.x = [];\n    self.scrollCache.y = [];\n    for (x = 0; x < l; x += 1) {\n      self.scrollCache.y[x] = dataHeight;\n      dataHeight +=\n        ((self.sizes.rows[x] || ch) + (self.sizes.trees[x] || 0)) * self.scale +\n        // HACK? if an expanded tree row is frozen it is necessary to add the tree row's height a second time.\n        (self.frozenRow > x ? self.sizes.trees[x] || 0 : 0);\n    }\n    if (l > 1) {\n      self.scrollCache.y[x] = dataHeight;\n    }\n    dataWidth =\n      s.reduce(function reduceSchema(accumulator, column, columnIndex) {\n        // intentional redefintion of column.  This causes scrollCache to be in the correct order\n        column = s[self.orders.columns[columnIndex]];\n        if (column.hidden) {\n          self.scrollCache.x[columnIndex] = accumulator;\n          return accumulator;\n        }\n        var va =\n          accumulator + self.getColummnWidth(self.orders.columns[columnIndex]);\n        self.scrollCache.x[columnIndex] = va;\n        return va;\n      }, 0) || 0;\n    if (self.attributes.showNewRow) {\n      dataHeight += ch;\n    }\n    if (self.attributes.snapToRow) {\n      dataHeight += self.style.cellHeight;\n    }\n    setCanvasSize();\n    if (self.isChildGrid) {\n      self.width = self.parentNode.offsetWidth;\n      self.height = self.parentNode.offsetHeight;\n    } else if (\n      self.height !== self.canvas.offsetHeight ||\n      self.width !== self.canvas.offsetWidth\n    ) {\n      self.height = self.canvas.offsetHeight;\n      self.width = self.canvas.offsetWidth;\n      self.canvasOffsetLeft = self.args.canvasOffsetLeft || 0;\n      self.canvasOffsetTop = self.args.canvasOffsetTop || 0;\n    }\n    /// calculate scroll bar dimensions\n    // non-controversial\n    self.scrollBox.top = columnHeaderCellHeight + columnHeaderCellBorder;\n    self.scrollBox.left = rowHeaderCellWidth;\n    // width and height of scroll box\n    setScrollBoxSize();\n    // is the data larger than the scroll box\n    checkScrollBoxVisibility();\n    // if the scroll box is visible, make room for it by expanding the size of the element\n    // if the other dimension is set to auto\n    if (self.scrollBox.horizontalBarVisible) {\n      if (self.style.height === 'auto' && !self.isChildGrid) {\n        self.height += sbw;\n      }\n      dataHeight += sbw;\n      setCanvasSize();\n      setScrollBoxSize();\n      checkScrollBoxVisibility();\n    }\n    if (self.scrollBox.verticalBarVisible) {\n      if (self.style.width === 'auto' && !self.isChildGrid) {\n        self.width += sbw;\n      }\n      dataWidth += sbw;\n      setCanvasSize();\n      setScrollBoxSize();\n      checkScrollBoxVisibility();\n    }\n    // set again after bar visibility checks\n    setScrollBoxSize();\n    self.scrollBox.scrollWidth = dataWidth - self.scrollBox.width;\n    self.scrollBox.scrollHeight = dataHeight - self.scrollBox.height;\n    self.scrollBox.widthBoxRatio = self.scrollBox.width / dataWidth;\n    self.scrollBox.scrollBoxWidth =\n      self.scrollBox.width * self.scrollBox.widthBoxRatio -\n      self.style.scrollBarWidth -\n      b -\n      d;\n    // TODO: This heightBoxRatio number is terribly wrong.\n    // They should be a result of the size of the grid/canvas?\n    // it being off causes the scroll bar to \"slide\" under\n    // the dragged mouse.\n    // https://github.com/TonyGermaneri/canvas-datagrid/issues/97\n    self.scrollBox.heightBoxRatio =\n      (self.scrollBox.height - columnHeaderCellHeight) / dataHeight;\n    self.scrollBox.scrollBoxHeight =\n      self.scrollBox.height * self.scrollBox.heightBoxRatio -\n      self.style.scrollBarWidth -\n      b -\n      d;\n    self.scrollBox.scrollBoxWidth = Math.max(\n      self.scrollBox.scrollBoxWidth,\n      self.style.scrollBarBoxMinSize,\n    );\n    self.scrollBox.scrollBoxHeight = Math.max(\n      self.scrollBox.scrollBoxHeight,\n      self.style.scrollBarBoxMinSize,\n    );\n    // horizontal\n    n.x += rowHeaderCellWidth;\n    n.y += self.height - self.style.scrollBarWidth - d;\n    n.width =\n      self.width - self.style.scrollBarWidth - rowHeaderCellWidth - d - m;\n    n.height = self.style.scrollBarWidth + self.style.scrollBarBorderWidth + d;\n    // horizontal box\n    nb.y = n.y + self.style.scrollBarBoxMargin;\n    nb.width = self.scrollBox.scrollBoxWidth;\n    nb.height = self.style.scrollBarBoxWidth;\n    // vertical\n    v.x +=\n      self.width -\n      self.style.scrollBarWidth -\n      self.style.scrollBarBorderWidth -\n      d;\n    v.y += columnHeaderCellHeight;\n    v.width = self.style.scrollBarWidth + self.style.scrollBarBorderWidth + d;\n    v.height =\n      self.height - columnHeaderCellHeight - self.style.scrollBarWidth - d - m;\n    // vertical box\n    vb.x = v.x + self.style.scrollBarBoxMargin;\n    vb.width = self.style.scrollBarBoxWidth;\n    vb.height = self.scrollBox.scrollBoxHeight;\n    // corner\n    co.x = n.x + n.width + m;\n    co.y = v.y + v.height + m;\n    co.width = self.style.scrollBarWidth + self.style.scrollBarBorderWidth;\n    co.height = self.style.scrollBarWidth + self.style.scrollBarBorderWidth;\n    self.scrollBox.entities = {\n      horizontalBar: n,\n      horizontalBox: nb,\n      verticalBar: v,\n      verticalBox: vb,\n      corner: co,\n    };\n    self.scrollBox.bar = {\n      v: v,\n      h: n,\n    };\n    self.scrollBox.box = {\n      v: vb,\n      h: nb,\n    };\n    /// calculate page and dom elements\n    self.page = Math.max(\n      1,\n      self.visibleRows.length - 3 - self.attributes.pageUpDownOverlap,\n    );\n    // set canvas drawing related items\n    if (!self.isChildGrid) {\n      self.canvas.width = self.width * ratio;\n      self.canvas.height = self.height * ratio;\n      self.ctx.scale(ratio, ratio);\n    }\n    // resize any open dom elements (input/textarea)\n    self.resizeEditInput();\n    self.scroll(true);\n    if (drawAfterResize) {\n      self.draw(true);\n    }\n    self.dispatchEvent('resize', {});\n    return true;\n  };\n  self.scroll = function (dontDraw) {\n    var s = self.getSchema(),\n      l = (self.data || []).length,\n      ch = self.style.cellHeight;\n    // go too far in leaps, then get focused\n    self.scrollIndexTop = Math.floor(\n      l * (self.scrollBox.scrollTop / self.scrollBox.scrollHeight) - 100,\n    );\n    self.scrollIndexTop = Math.max(self.scrollIndexTop, 0);\n    self.scrollPixelTop = self.scrollCache.y[self.scrollIndexTop];\n    // sometimes the grid is rendered but the height is zero\n    if (self.scrollBox.scrollHeight === 0) {\n      self.scrollIndexTop = 0;\n    }\n    self.scrollPixelTop = 0;\n    self.scrollIndexLeft = self.frozenColumn;\n    self.scrollPixelLeft = 0;\n    while (\n      self.scrollPixelTop < self.scrollBox.scrollTop &&\n      self.scrollIndexTop < self.data.length\n    ) {\n      // start on index +1 since index 0 was used in \"go too far\" section above\n      self.scrollIndexTop += 1;\n      self.scrollPixelTop = self.scrollCache.y[self.scrollIndexTop];\n    }\n    while (\n      self.scrollPixelLeft < self.scrollBox.scrollLeft + 1 &&\n      self.scrollIndexLeft < s.length\n    ) {\n      self.scrollPixelLeft = self.scrollCache.x[self.scrollIndexLeft];\n      self.scrollIndexLeft += 1;\n    }\n    if (s.length > 0) {\n      self.scrollIndexLeft = Math.max(self.scrollIndexLeft - 1, 0);\n      self.scrollPixelLeft -= self.getColummnWidth(\n        self.orders.columns[self.scrollIndexLeft],\n      );\n    }\n    if ((self.data || []).length > 0) {\n      self.scrollIndexTop = Math.max(self.scrollIndexTop - 1, 0);\n      self.scrollPixelTop = Math.max(\n        self.scrollPixelTop -\n          (self.data[self.scrollIndexTop]\n            ? (self.sizes.rows[self.scrollIndexTop] || ch) +\n              (self.sizes.trees[self.scrollIndexTop] || 0)\n            : ch) *\n            self.scale,\n        0,\n      );\n    }\n    self.ellipsisCache = {};\n    if (!dontDraw) {\n      self.draw(true);\n    }\n    //TODO: figure out why this has to be delayed for child grids\n    //BUG: wheeling event on 3rd level hierarchy fails to move input box\n    requestAnimationFrame(self.resizeEditInput);\n    self.dispatchEvent('scroll', {\n      top: self.scrollBox.scrollTop,\n      left: self.scrollBox.scrollLeft,\n    });\n  };\n  self.mousemove = function (e, overridePos) {\n    if (self.contextMenu || self.input) {\n      return;\n    }\n    self.mouse = overridePos || self.getLayerPos(e);\n    var ctrl =\n        (e.ctrlKey || e.metaKey || self.attributes.persistantSelectionMode) &&\n        !self.attributes.singleSelectionMode,\n      i,\n      s = self.getSchema(),\n      dragBounds,\n      sBounds,\n      x = self.mouse.x,\n      y = self.mouse.y,\n      o = self.getCellAt(x, y),\n      delta,\n      ev = { NativeEvent: e, cell: o, x: x, y: y },\n      previousCell = self.currentCell;\n    clearTimeout(self.scrollTimer);\n    if (!self.isInGrid({ x: x, y: y })) {\n      self.hasFocus = false;\n    }\n    if (self.dispatchEvent('mousemove', ev)) {\n      return;\n    }\n    if (o && self.currentCell) {\n      self.rowBoundaryCrossed = self.currentCell.rowIndex !== o.rowIndex;\n      self.columnBoundaryCrossed =\n        self.currentCell.columnIndex !== o.columnIndex;\n      self.cellBoundaryCrossed =\n        self.rowBoundaryCrossed || self.columnBoundaryCrossed;\n      ['row', 'column', 'cell'].forEach(function (prefix) {\n        if (self[prefix + 'BoundaryCrossed']) {\n          ev.cell = previousCell;\n          self.dispatchEvent(prefix + 'mouseout', ev);\n          ev.cell = o;\n          self.dispatchEvent(prefix + 'mouseover', ev);\n        }\n      });\n    }\n    self.currentCell = o;\n    if (!self.hasFocus) {\n      return;\n    }\n    self.hovers = {};\n    if (!self.draggingItem && o && self.scrollModes.indexOf(o.context) === -1) {\n      self.dragItem = o;\n      self.dragMode = o.dragContext;\n      self.cursor = o.context;\n      if (o.context === 'cell') {\n        self.cursor = 'default';\n        self.hovers = { rowIndex: o.rowIndex, columnIndex: o.columnIndex };\n      }\n      if ((self.selecting || self.reorderObject) && o.context === 'cell') {\n        delta = {\n          x: Math.abs(self.dragStart.x - x),\n          y: Math.abs(self.dragStart.y - y),\n        };\n        if (self.dragStartObject.columnIndex !== -1 && e.shiftKey) {\n          self.dragStartObject = {\n            rowIndex: self.activeCell.rowIndex,\n            columnIndex: self.activeCell.columnIndex,\n          };\n        }\n        dragBounds = {\n          top: Math.min(self.dragStartObject.rowIndex, o.rowIndex),\n          left: Math.min(self.dragStartObject.columnIndex, o.columnIndex),\n          bottom: Math.max(self.dragStartObject.rowIndex, o.rowIndex),\n          right: Math.max(self.dragStartObject.columnIndex, o.columnIndex),\n        };\n        if (self.dragStartObject.columnIndex === -1) {\n          sBounds = self.getSelectionBounds();\n          dragBounds.left = -1;\n          dragBounds.right = s.length - 1;\n          dragBounds.top = Math.min(sBounds.top, o.rowIndex);\n          dragBounds.bottom = Math.max(sBounds.bottom, o.rowIndex);\n        }\n        if (\n          self.dragStartObject.rowIndex !== o.rowIndex ||\n          self.dragStartObject.columnIndex !== o.columnIndex\n        ) {\n          self.ignoreNextClick = true;\n        }\n        if (\n          self.cellBoundaryCrossed ||\n          (delta.x === 0 && delta.y === 0) ||\n          self.attributes.selectionMode === 'row'\n        ) {\n          if (\n            (self.attributes.selectionMode === 'row' ||\n              self.dragStartObject.columnIndex === -1) &&\n            self.rowBoundaryCrossed\n          ) {\n            self.selectRow(o.rowIndex, ctrl, null, true);\n          } else if (self.attributes.selectionMode !== 'row') {\n            if (!self.dragAddToSelection && o.rowIndex !== undefined) {\n              if (\n                self.selections[o.rowIndex] &&\n                self.selections[o.rowIndex].indexOf(o.columnIndex) !== -1\n              ) {\n                self.selections[o.rowIndex].splice(\n                  self.selections[o.rowIndex].indexOf(o.columnIndex),\n                  1,\n                );\n              }\n            } else {\n              self.selections[o.rowIndex] = self.selections[o.rowIndex] || [];\n              if (self.selections[o.rowIndex].indexOf(o.columnIndex) === -1) {\n                self.selections[o.rowIndex].push(o.columnIndex);\n              }\n            }\n          }\n        }\n        if (\n          (!self.selectionBounds ||\n            dragBounds.top !== self.selectionBounds.top ||\n            dragBounds.left !== self.selectionBounds.left ||\n            dragBounds.bottom !== self.selectionBounds.bottom ||\n            dragBounds.right !== self.selectionBounds.right) &&\n          !ctrl\n        ) {\n          self.selections = [];\n          sBounds = dragBounds;\n          if (self.attributes.selectionMode === 'row') {\n            for (i = sBounds.top; i <= sBounds.bottom; i += 1) {\n              self.selectRow(i, true, null, true);\n            }\n          } else if (dragBounds.top !== -1) {\n            self.selectArea(sBounds, true);\n          }\n        }\n        self.autoScrollZone(e, x, y, ctrl);\n      }\n    }\n    self.cellBoundaryCrossed = false;\n    self.rowBoundaryCrossed = false;\n    self.columnBoundaryCrossed = false;\n    self.draw(true);\n  };\n  self.click = function (e, overridePos) {\n    var i,\n      startingBounds = JSON.stringify(self.getSelectionBounds()),\n      ctrl =\n        (e.ctrlKey || e.metaKey || self.attributes.persistantSelectionMode) &&\n        !self.attributes.singleSelectionMode,\n      pos = overridePos || self.getLayerPos(e);\n    self.currentCell = self.getCellAt(pos.x, pos.y);\n    if (self.currentCell.grid !== undefined) {\n      return;\n    }\n    function checkSelectionChange() {\n      var ev,\n        sb = self.getSelectionBounds();\n      if (startingBounds === JSON.stringify(sb)) {\n        return;\n      }\n      ev = {\n        selections: self.selections,\n        selectionBounds: self.getSelectionBounds(),\n      };\n      Object.defineProperty(ev, 'selectedData', {\n        get: function () {\n          return self.getSelectedData();\n        },\n      });\n      self.dispatchEvent('selectionchanged', ev);\n    }\n    if (self.input) {\n      self.endEdit();\n    }\n    if (self.ignoreNextClick) {\n      self.ignoreNextClick = false;\n      return;\n    }\n    i = self.currentCell;\n    if (\n      self.dispatchEvent('click', { NativeEvent: e, cell: self.currentCell })\n    ) {\n      return;\n    }\n    if (!self.hasFocus) {\n      return;\n    }\n    if (\n      ['rowHeaderCell', 'columnHeaderCell'].indexOf(self.currentCell.style) ===\n        -1 &&\n      !ctrl\n    ) {\n      self.setActiveCell(i.columnIndex, i.rowIndex);\n    }\n    if (self.currentCell.context === 'cell') {\n      if (self.currentCell.style === 'cornerCell') {\n        self.selectAll();\n        self.draw();\n        checkSelectionChange();\n        return;\n      }\n      if (self.currentCell.style === 'columnHeaderCell') {\n        if (self.attributes.columnHeaderClickBehavior === 'sort') {\n          if (self.orderBy === i.header.name) {\n            self.orderDirection =\n              self.orderDirection === 'asc' ? 'desc' : 'asc';\n          } else {\n            self.orderDirection = 'asc';\n          }\n          self.order(i.header.name, self.orderDirection);\n          checkSelectionChange();\n          return;\n        }\n        if (self.attributes.columnHeaderClickBehavior === 'select') {\n          self.selectColumn(i.header.index, ctrl, e.shiftKey);\n          self.draw();\n          return;\n        }\n      }\n      self.selections[i.rowIndex] = self.selections[i.rowIndex] || [];\n      if (\n        self.attributes.selectionMode === 'row' ||\n        self.currentCell.style === 'rowHeaderCell'\n      ) {\n        if (\n          self.currentCell.style === 'rowHeaderCell' &&\n          self.attributes.tree &&\n          pos.x > 0 &&\n          pos.x - self.currentCell.x <\n            self.style.treeArrowWidth +\n              self.style.treeArrowMarginLeft +\n              self.style.treeArrowMarginRight +\n              self.style.treeArrowClickRadius &&\n          pos.y - self.currentCell.y <\n            self.style.treeArrowHeight +\n              self.style.treeArrowMarginTop +\n              self.style.treeArrowClickRadius &&\n          pos.y > 0\n        ) {\n          self.toggleTree(i.rowIndex);\n          return;\n        }\n      }\n      if (e.shiftKey && !ctrl) {\n        self.selectionBounds = self.getSelectionBounds();\n        self.selectArea(undefined, false);\n      }\n    }\n    checkSelectionChange();\n    self.draw(true);\n  };\n  self.dragResizeColumn = function (e) {\n    var pos, x, y;\n    pos = self.getLayerPos(e);\n    x = self.resizingStartingWidth + pos.x - self.dragStart.x;\n    y = self.resizingStartingHeight + pos.y - self.dragStart.y;\n    if (x < self.style.minColumnWidth) {\n      x = self.style.minColumnWidth;\n    }\n    if (y < self.style.minRowHeight) {\n      y = self.style.minRowHeight;\n    }\n    if (\n      self.dispatchEvent('resizecolumn', {\n        x: x,\n        y: y,\n        draggingItem: self.draggingItem,\n      })\n    ) {\n      return false;\n    }\n    if (\n      self.scrollBox.scrollLeft >\n        self.scrollBox.scrollWidth - self.attributes.resizeScrollZone &&\n      self.dragMode === 'ew-resize'\n    ) {\n      self.resize(true);\n      self.scrollBox.scrollLeft += x;\n    }\n    if (self.dragMode === 'ew-resize') {\n      self.sizes.columns[\n        self.draggingItem.header.style === 'rowHeaderCell'\n          ? 'cornerCell'\n          : self.draggingItem.sortColumnIndex\n      ] = x;\n      if (\n        ['rowHeaderCell', 'cornerCell'].indexOf(\n          self.draggingItem.header.style,\n        ) !== -1\n      ) {\n        self.resize(true);\n      }\n      self.resizeChildGrids();\n      return;\n    }\n    if (self.dragMode === 'ns-resize') {\n      if (self.draggingItem.rowOpen) {\n        self.sizes.trees[self.draggingItem.rowIndex] = y;\n      } else if (self.attributes.globalRowResize) {\n        self.style.cellHeight = y;\n      } else {\n        self.sizes.rows[self.draggingItem.rowIndex] = y;\n      }\n      self.dispatchEvent('resizerow', { row: y });\n      self.resizeChildGrids();\n      return;\n    }\n    self.ellipsisCache = {};\n  };\n  self.stopDragResize = function () {\n    self.resize();\n    document.body.removeEventListener(\n      'mousemove',\n      self.dragResizeColumn,\n      false,\n    );\n    document.body.removeEventListener('mouseup', self.stopDragResize, false);\n    self.setStorageData();\n    self.draw(true);\n    self.ignoreNextClick = true;\n  };\n  self.scrollGrid = function (e) {\n    var pos = self.getLayerPos(e);\n    if (\n      self.attributes.scrollPointerLock &&\n      self.pointerLockPosition &&\n      ['horizontal-scroll-box', 'vertical-scroll-box'].indexOf(\n        self.scrollStartMode,\n      ) !== -1\n    ) {\n      self.pointerLockPosition.x += e.movementX;\n      self.pointerLockPosition.y += e.movementY;\n      self.pointerLockPosition.x = Math.min(\n        self.width - self.style.scrollBarWidth,\n        Math.max(0, self.pointerLockPosition.x),\n      );\n      self.pointerLockPosition.y = Math.min(\n        self.height - self.style.scrollBarWidth,\n        Math.max(0, self.pointerLockPosition.y),\n      );\n      pos = self.pointerLockPosition;\n    }\n    self.scrollMode = self.getCellAt(pos.x, pos.y).context;\n    if (\n      self.scrollMode === 'horizontal-scroll-box' &&\n      self.scrollStartMode !== 'horizontal-scroll-box'\n    ) {\n      self.scrollStartMode = 'horizontal-scroll-box';\n      self.dragStart = pos;\n      self.scrollStart.left = self.scrollBox.scrollLeft;\n      clearTimeout(self.scrollTimer);\n      return;\n    }\n    if (\n      self.scrollMode === 'vertical-scroll-box' &&\n      self.scrollStartMode !== 'vertical-scroll-box'\n    ) {\n      self.scrollStartMode = 'vertical-scroll-box';\n      self.dragStart = pos;\n      self.scrollStart.top = self.scrollBox.scrollTop;\n      clearTimeout(self.scrollTimer);\n      return;\n    }\n    if (\n      self.scrollStartMode === 'vertical-scroll-box' &&\n      self.scrollMode !== 'vertical-scroll-box'\n    ) {\n      self.scrollMode = 'vertical-scroll-box';\n    }\n    if (\n      self.scrollStartMode === 'horizontal-scroll-box' &&\n      self.scrollMode !== 'horizontal-scroll-box'\n    ) {\n      self.scrollMode = 'horizontal-scroll-box';\n    }\n    clearTimeout(self.scrollTimer);\n    if (self.scrollModes.indexOf(self.scrollMode) === -1) {\n      return;\n    }\n    if (self.scrollMode === 'vertical-scroll-box') {\n      self.scrollBox.scrollTop =\n        self.scrollStart.top +\n        (pos.y - self.dragStart.y) / self.scrollBox.heightBoxRatio;\n    } else if (self.scrollMode === 'vertical-scroll-top') {\n      self.scrollBox.scrollTop -= self.page * self.style.cellHeight;\n      self.scrollTimer = setTimeout(\n        self.scrollGrid,\n        self.attributes.scrollRepeatRate,\n        e,\n      );\n    } else if (self.scrollMode === 'vertical-scroll-bottom') {\n      self.scrollBox.scrollTop += self.page * self.style.cellHeight;\n      self.scrollTimer = setTimeout(\n        self.scrollGrid,\n        self.attributes.scrollRepeatRate,\n        e,\n      );\n    }\n    if (self.scrollMode === 'horizontal-scroll-box') {\n      self.scrollBox.scrollLeft =\n        self.scrollStart.left +\n        (pos.x - self.dragStart.x) / self.scrollBox.widthBoxRatio;\n    } else if (self.scrollMode === 'horizontal-scroll-right') {\n      self.scrollBox.scrollLeft += self.attributes.selectionScrollIncrement;\n      self.scrollTimer = setTimeout(\n        self.scrollGrid,\n        self.attributes.scrollRepeatRate,\n        e,\n      );\n    } else if (self.scrollMode === 'horizontal-scroll-left') {\n      self.scrollBox.scrollLeft -= self.attributes.selectionScrollIncrement;\n      self.scrollTimer = setTimeout(\n        self.scrollGrid,\n        self.attributes.scrollRepeatRate,\n        e,\n      );\n    }\n  };\n  self.stopScrollGrid = function () {\n    clearTimeout(self.scrollTimer);\n    if (document.exitPointerLock) {\n      document.exitPointerLock();\n    }\n    document.removeEventListener('mousemove', self.scrollGrid, false);\n  };\n  self.dragReorder = function (e) {\n    var pos,\n      x,\n      y,\n      columReorder = self.dragMode === 'column-reorder',\n      rowReorder = self.dragMode === 'row-reorder';\n    pos = self.getLayerPos(e);\n    x = pos.x - self.dragStart.x;\n    y = pos.y - self.dragStart.y;\n    if (!self.attributes.allowColumnReordering && columReorder) {\n      return;\n    }\n    if (!self.attributes.allowRowReordering && rowReorder) {\n      return;\n    }\n    if (\n      self.dispatchEvent('reordering', {\n        NativeEvent: e,\n        source: self.dragStartObject,\n        target: self.currentCell,\n        dragMode: self.dragMode,\n      })\n    ) {\n      return;\n    }\n    if (\n      Math.abs(x) > self.attributes.reorderDeadZone ||\n      Math.abs(y) > self.attributes.reorderDeadZone\n    ) {\n      self.reorderObject = self.draggingItem;\n      self.reorderTarget = self.currentCell;\n      self.reorderObject.dragOffset = {\n        x: x,\n        y: y,\n      };\n      self.autoScrollZone(\n        e,\n        columReorder ? pos.x : -1,\n        rowReorder ? pos.y : -1,\n        false,\n      );\n    }\n  };\n  self.stopDragReorder = function (e) {\n    var oIndex,\n      tIndex,\n      cr = {\n        'row-reorder': self.orders.rows,\n        'column-reorder': self.orders.columns,\n      },\n      i = {\n        'row-reorder': 'rowIndex',\n        'column-reorder': 'sortColumnIndex',\n      }[self.dragMode];\n    document.body.removeEventListener('mousemove', self.dragReorder, false);\n    document.body.removeEventListener('mouseup', self.stopDragReorder, false);\n    if (\n      self.reorderObject &&\n      self.reorderTarget &&\n      ((self.dragMode === 'column-reorder' &&\n        self.reorderTarget.sortColumnIndex > -1 &&\n        self.reorderTarget.sortColumnIndex < self.getSchema().length) ||\n        (self.dragMode === 'row-reorder' &&\n          self.reorderTarget.rowIndex > -1 &&\n          self.reorderTarget.rowIndex < self.data.length)) &&\n      self.reorderObject[i] !== self.reorderTarget[i] &&\n      !self.dispatchEvent('reorder', {\n        NativeEvent: e,\n        source: self.reorderObject,\n        target: self.reorderTarget,\n        dragMode: self.dragMode,\n      })\n    ) {\n      self.ignoreNextClick = true;\n      oIndex = cr[self.dragMode].indexOf(self.reorderObject[i]);\n      tIndex = cr[self.dragMode].indexOf(self.reorderTarget[i]);\n      cr[self.dragMode].splice(oIndex, 1);\n      cr[self.dragMode].splice(tIndex, 0, self.reorderObject[i]);\n      if (self.dragMode === 'column-reorder') {\n        self.orders.columns = cr[self.dragMode];\n      } else {\n        self.orders.rows = cr[self.dragMode];\n      }\n      self.resize();\n      self.setStorageData();\n    }\n    self.reorderObject = undefined;\n    self.reorderTarget = undefined;\n    self.draw(true);\n  };\n  self.dragMove = function (e) {\n    if (\n      self.dispatchEvent('moving', { NativeEvent: e, cell: self.currentCell })\n    ) {\n      return;\n    }\n    var pos = self.getLayerPos(e);\n    self.moveOffset = {\n      x: self.currentCell.columnIndex - self.dragStartObject.columnIndex,\n      y: self.currentCell.rowIndex - self.dragStartObject.rowIndex,\n    };\n    if (\n      Math.abs(pos.x) > self.attributes.reorderDeadZone ||\n      Math.abs(pos.y) > self.attributes.reorderDeadZone\n    ) {\n      setTimeout(function () {\n        self.autoScrollZone(e, pos.x, pos.y, false);\n      }, 1);\n    }\n  };\n  self.stopDragMove = function (e) {\n    document.body.removeEventListener('mousemove', self.dragMove, false);\n    document.body.removeEventListener('mouseup', self.stopDragMove, false);\n    var b = self.getSelectionBounds();\n    if (\n      self.dispatchEvent('endmove', { NativeEvent: e, cell: self.currentCell })\n    ) {\n      self.movingSelection = undefined;\n      self.moveOffset = undefined;\n      self.draw(true);\n      return;\n    }\n    if (self.moveOffset) {\n      self.moveTo(\n        self.movingSelection,\n        b.left + self.moveOffset.x,\n        b.top + self.moveOffset.y,\n      );\n      self.moveSelection(self.moveOffset.x, self.moveOffset.y);\n    }\n    self.movingSelection = undefined;\n    self.moveOffset = undefined;\n    self.draw(true);\n  };\n  self.freezeMove = function (e) {\n    if (\n      self.dispatchEvent('freezemoving', {\n        NativeEvent: e,\n        cell: self.currentCell,\n      })\n    ) {\n      return;\n    }\n    var pos = self.getLayerPos(e);\n    self.ignoreNextClick = true;\n    self.freezeMarkerPosition = pos;\n    if (\n      self.currentCell &&\n      self.currentCell.rowIndex !== undefined &&\n      self.dragMode === 'frozen-row-marker'\n    ) {\n      self.scrollBox.scrollTop = 0;\n      self.frozenRow = self.currentCell.rowIndex + 1;\n    }\n    if (\n      self.currentCell &&\n      self.currentCell.columnIndex !== undefined &&\n      self.dragMode === 'frozen-column-marker'\n    ) {\n      self.scrollBox.scrollLeft = 0;\n      self.frozenColumn = self.currentCell.columnIndex + 1;\n    }\n    if (\n      Math.abs(pos.x) > self.attributes.reorderDeadZone ||\n      Math.abs(pos.y) > self.attributes.reorderDeadZone\n    ) {\n      setTimeout(function () {\n        self.autoScrollZone(e, pos.x, pos.y, false);\n      }, 1);\n    }\n  };\n  self.stopFreezeMove = function (e) {\n    document.body.removeEventListener('mousemove', self.freezeMove, false);\n    document.body.removeEventListener('mouseup', self.stopFreezeMove, false);\n    self.freezeMarkerPosition = undefined;\n    if (\n      self.dispatchEvent('endfreezemove', {\n        NativeEvent: e,\n        cell: self.currentCell,\n      })\n    ) {\n      self.frozenRow = self.startFreezeMove.x;\n      self.frozenColumn = self.startFreezeMove.y;\n      self.draw(true);\n      return;\n    }\n    self.draw(true);\n  };\n  self.mousedown = function (e, overridePos) {\n    self.lastMouseDownTarget = e.target;\n    if (\n      self.dispatchEvent('mousedown', {\n        NativeEvent: e,\n        cell: self.currentCell,\n      })\n    ) {\n      return;\n    }\n    if (!self.hasFocus) {\n      return;\n    }\n    if (e.button === 2 || self.input) {\n      return;\n    }\n    var ctrl = e.ctrlKey || e.metaKey,\n      move = /-move/.test(self.dragMode),\n      freeze = /frozen-row-marker|frozen-column-marker/.test(self.dragMode),\n      resize = /-resize/.test(self.dragMode);\n    self.dragStart = overridePos || self.getLayerPos(e);\n    self.scrollStart = {\n      left: self.scrollBox.scrollLeft,\n      top: self.scrollBox.scrollTop,\n    };\n    self.dragStartObject = self.getCellAt(self.dragStart.x, self.dragStart.y);\n    self.dragAddToSelection = !self.dragStartObject.selected;\n    if (\n      !ctrl &&\n      !e.shiftKey &&\n      !/(vertical|horizontal)-scroll-(bar|box)/.test(\n        self.dragStartObject.context,\n      ) &&\n      self.currentCell &&\n      !self.currentCell.isColumnHeader &&\n      !move &&\n      !freeze &&\n      !resize\n    ) {\n      self.selections = [];\n    }\n    if (self.dragStartObject.isGrid) {\n      return;\n    }\n    if (self.scrollModes.indexOf(self.dragStartObject.context) !== -1) {\n      self.scrollMode = self.dragStartObject.context;\n      self.scrollStartMode = self.dragStartObject.context;\n      self.scrollGrid(e);\n      if (\n        self.attributes.scrollPointerLock &&\n        ['horizontal-scroll-box', 'vertical-scroll-box'].indexOf(\n          self.scrollStartMode,\n        ) !== -1\n      ) {\n        self.pointerLockPosition = {\n          x: self.dragStart.x,\n          y: self.dragStart.y,\n        };\n        self.canvas.requestPointerLock();\n      }\n      document.addEventListener('mousemove', self.scrollGrid, false);\n      document.addEventListener('mouseup', self.stopScrollGrid, false);\n      self.ignoreNextClick = true;\n      return;\n    }\n    if (self.dragMode === 'cell') {\n      self.selecting = true;\n      if (\n        (self.attributes.selectionMode === 'row' ||\n          self.dragStartObject.columnIndex === -1) &&\n        self.dragStartObject.rowIndex > -1\n      ) {\n        self.selectRow(self.dragStartObject.rowIndex, ctrl, null);\n      } else if (self.attributes.selectionMode !== 'row') {\n        self.mousemove(e);\n      }\n      return;\n    }\n    if (move) {\n      self.draggingItem = self.dragItem;\n      self.movingSelection = self.selections.concat([]);\n      self.dragging = self.dragStartObject;\n      if (\n        self.dispatchEvent('beginmove', {\n          NativeEvent: e,\n          cell: self.currentCell,\n        })\n      ) {\n        return;\n      }\n      document.body.addEventListener('mousemove', self.dragMove, false);\n      document.body.addEventListener('mouseup', self.stopDragMove, false);\n      return self.mousemove(e);\n    }\n    if (freeze) {\n      self.draggingItem = self.dragItem;\n      self.startFreezeMove = {\n        x: self.frozenRow,\n        y: self.frozenColumn,\n      };\n      if (self.dispatchEvent('beginfreezemove', { NativeEvent: e })) {\n        return;\n      }\n      document.body.addEventListener('mousemove', self.freezeMove, false);\n      document.body.addEventListener('mouseup', self.stopFreezeMove, false);\n      return self.mousemove(e);\n    }\n    if (resize) {\n      self.draggingItem = self.dragItem;\n      if (self.draggingItem.rowOpen) {\n        self.resizingStartingHeight =\n          self.sizes.trees[self.draggingItem.rowIndex];\n      } else {\n        self.resizingStartingHeight =\n          self.sizes.rows[self.draggingItem.rowIndex] || self.style.cellHeight;\n      }\n      self.resizingStartingWidth =\n        self.sizes.columns[\n          self.draggingItem.header.style === 'rowHeaderCell'\n            ? 'cornerCell'\n            : self.draggingItem.sortColumnIndex\n        ] || self.draggingItem.width;\n      document.body.addEventListener('mousemove', self.dragResizeColumn, false);\n      document.body.addEventListener('mouseup', self.stopDragResize, false);\n      return;\n    }\n    if (['row-reorder', 'column-reorder'].indexOf(self.dragMode) !== -1) {\n      self.draggingItem = self.dragStartObject;\n      document.body.addEventListener('mousemove', self.dragReorder, false);\n      document.body.addEventListener('mouseup', self.stopDragReorder, false);\n      return;\n    }\n  };\n  self.mouseup = function (e) {\n    clearTimeout(self.scrollTimer);\n    self.cellBoundaryCrossed = true;\n    self.rowBoundaryCrossed = true;\n    self.columnBoundaryCrossed = true;\n    self.selecting = undefined;\n    self.draggingItem = undefined;\n    self.dragStartObject = undefined;\n    if (\n      self.dispatchEvent('mouseup', { NativeEvent: e, cell: self.currentCell })\n    ) {\n      return;\n    }\n    if (!self.hasFocus && e.target !== self.canvas) {\n      return;\n    }\n    if (self.currentCell && self.currentCell.grid !== undefined) {\n      return;\n    }\n    if (self.contextMenu || self.input) {\n      return;\n    }\n    if (self.dragStart && self.isInGrid(self.dragStart)) {\n      self.controlInput.focus();\n    }\n    e.preventDefault();\n  };\n  // gets the horizontal adjacent cells as well as first/last based on column visibility\n  self.getAdjacentCells = function () {\n    var x,\n      i,\n      s = self.getSchema(),\n      o = {};\n    for (x = 0; x < s.length; x += 1) {\n      i = self.orders.columns[x];\n      if (!s[i].hidden) {\n        if (o.first === undefined) {\n          o.first = x;\n          o.left = x;\n        }\n        o.last = x;\n        if (x > self.activeCell.columnIndex && o.right === undefined) {\n          o.right = x;\n        }\n        if (x < self.activeCell.columnIndex) {\n          o.left = x;\n        }\n      }\n    }\n    if (o.right === undefined) {\n      o.right = o.last;\n    }\n    return o;\n  };\n  self.keydown = function (e) {\n    var i,\n      ev,\n      adjacentCells = self.getAdjacentCells(),\n      x = self.activeCell.columnIndex,\n      y = self.activeCell.rowIndex,\n      ctrl = e.ctrlKey || e.metaKey,\n      last = self.data.length - 1,\n      s = self.getSchema(),\n      cols = s.length - 1;\n\n    var defaultPrevented = self.dispatchEvent('keydown', {\n      NativeEvent: e,\n      cell: self.currentCell,\n    });\n\n    if (defaultPrevented) {\n      return;\n    }\n\n    if (!self.hasFocus) {\n      return;\n    }\n\n    // If a user starts typing content, switch to \"Enter\" mode\n    if (isPrintableKeyEvent(e) && !ctrl) {\n      return self.beginEditAt(x, y, e, true);\n    }\n\n    if (self.attributes.showNewRow) {\n      last += 1;\n    }\n\n    if (e.key === 'Tab') {\n      e.preventDefault();\n    }\n\n    if (e.key === 'Escape') {\n      self.selections = [];\n      self.draw(true);\n    } else if (ctrl && e.key === 'a') {\n      self.selectAll();\n    } else if (e.key === 'ArrowDown') {\n      y += 1;\n    } else if (e.key === 'ArrowUp') {\n      y -= 1;\n    } else if (\n      (e.key === 'ArrowLeft' && !ctrl) ||\n      (e.shiftKey && e.key === 'Tab')\n    ) {\n      x = adjacentCells.left;\n    } else if (\n      (e.key === 'ArrowRight' && !ctrl) ||\n      (!e.shiftKey && e.key === 'Tab')\n    ) {\n      x = adjacentCells.right;\n    } else if (e.key === 'PageUp') {\n      y -= self.page;\n      e.preventDefault();\n    } else if (e.key === 'PageDown') {\n      y += self.page;\n      e.preventDefault();\n    } else if (e.key === 'Home' || (ctrl && e.key === 'ArrowUp')) {\n      y = 0;\n    } else if (e.key === 'End' || (ctrl && e.key === 'ArrowDown')) {\n      y = self.data.length - 1;\n    } else if (ctrl && e.key === 'ArrowRight') {\n      x = adjacentCells.last;\n    } else if (ctrl && e.key === 'ArrowLeft') {\n      x = adjacentCells.first;\n    }\n\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      return self.beginEditAt(x, y, e);\n    }\n\n    if (x < 0 || Number.isNaN(x)) {\n      x = adjacentCells.first;\n    }\n    if (y > last) {\n      y = last;\n    }\n    if (y < 0 || Number.isNaN(y)) {\n      y = 0;\n    }\n    if (x > cols) {\n      x = adjacentCells.last;\n    }\n\n    // TODO - most likely some column order related bugs in key based selection\n    // Arrows\n    var isArrowKey = [\n      'ArrowLeft',\n      'ArrowUp',\n      'ArrowRight',\n      'ArrowDown',\n    ].includes(e.key);\n\n    if (e.shiftKey && isArrowKey) {\n      self.selections[Math.max(y, 0)] = self.selections[Math.max(y, 0)] || [];\n      self.selections[Math.max(y, 0)].push(x);\n\n      self.selectionBounds = self.getSelectionBounds();\n      self.selectArea(undefined, ctrl);\n\n      self.draw(true);\n    }\n\n    if (x !== self.activeCell.columnIndex || y !== self.activeCell.rowIndex) {\n      self.scrollIntoView(\n        x !== self.activeCell.columnIndex ? x : undefined,\n        y !== self.activeCell.rowIndex && !Number.isNaN(y) ? y : undefined,\n      );\n\n      self.setActiveCell(x, y);\n      if (!e.shiftKey && self.attributes.selectionFollowsActiveCell) {\n        if (!ctrl) {\n          self.selections = [];\n        }\n        self.selections[y] = self.selections[y] || [];\n        self.selections[y].push(x);\n        ev = {\n          selectedData: self.getSelectedData(),\n          selections: self.selections,\n          selectionBounds: self.getSelectionBounds(),\n        };\n        Object.defineProperty(ev, 'selectedData', {\n          get: function () {\n            return self.getSelectedData();\n          },\n        });\n        self.dispatchEvent('selectionchanged', ev);\n      }\n      self.draw(true);\n    }\n  };\n  self.keyup = function (e) {\n    if (\n      self.dispatchEvent('keyup', { NativeEvent: e, cell: self.currentCell })\n    ) {\n      return;\n    }\n    if (!self.hasFocus) {\n      return;\n    }\n  };\n  self.keypress = function (e) {\n    if (!self.hasFocus) {\n      return;\n    }\n    if (\n      self.dispatchEvent('keypress', { NativeEvent: e, cell: self.currentCell })\n    ) {\n      return;\n    }\n  };\n  self.dblclick = function (e) {\n    if (\n      self.dispatchEvent('dblclick', { NativeEvent: e, cell: self.currentCell })\n    ) {\n      return;\n    }\n    if (!self.hasFocus) {\n      return;\n    }\n    if (\n      self.currentCell.context === 'ew-resize' &&\n      self.currentCell.style === 'columnHeaderCell'\n    ) {\n      self.fitColumnToValues(self.currentCell.header.name);\n    } else if (\n      self.currentCell.context === 'ew-resize' &&\n      self.currentCell.style === 'cornerCell'\n    ) {\n      self.autosize();\n    } else if (['cell', 'activeCell'].indexOf(self.currentCell.style) !== -1) {\n      self.beginEditAt(self.currentCell.columnIndex, self.currentCell.rowIndex);\n    }\n  };\n  self.scrollWheel = function (e) {\n    var l,\n      t,\n      ev = e,\n      deltaX = e.deltaX === undefined ? e.NativeEvent.deltaX : e.deltaX,\n      deltaY = e.deltaY === undefined ? e.NativeEvent.deltaY : e.deltaY,\n      deltaMode =\n        e.deltaMode === undefined ? e.NativeEvent.deltaMode : e.deltaMode;\n    var e = e.NativeEvent || e;\n    if (wheeling) {\n      ev.preventDefault(e);\n      return;\n    }\n    if (self.dispatchEvent('wheel', { NativeEvent: e })) {\n      return;\n    }\n    self.touchHaltAnimation = true;\n    l = self.scrollBox.scrollLeft;\n    t = self.scrollBox.scrollTop;\n    if (self.hasFocus) {\n      //BUG Issue 42: https://github.com/TonyGermaneri/canvas-datagrid/issues/42\n      //https://stackoverflow.com/questions/20110224/what-is-the-height-of-a-line-in-a-wheel-event-deltamode-dom-delta-line\n      if (deltaMode === 1) {\n        // line mode = 17 pixels per line\n        deltaY = deltaY * 17;\n      }\n      if (\n        (self.scrollBox.scrollTop < self.scrollBox.scrollHeight &&\n          deltaY > 0) ||\n        (self.scrollBox.scrollLeft < self.scrollBox.scrollWidth &&\n          deltaX > 0) ||\n        (self.scrollBox.scrollTop > 0 && deltaY < 0) ||\n        (self.scrollBox.scrollLeft > 0 && deltaX < 0)\n      ) {\n        ev.preventDefault(e);\n      }\n      wheeling = setTimeout(function () {\n        wheeling = undefined;\n        self.scrollBox.scrollTo(deltaX + l, deltaY + t);\n      }, 1);\n    }\n  };\n\n  self.pasteData = function (\n    pasteValue,\n    mimeType,\n    startRowIndex,\n    startColIndex,\n  ) {\n    var schema = self.getVisibleSchema();\n\n    const isSupportedHtmlTable = (htmlString) =>\n      /(?:^(<meta[^>]+>)?<table>)|(?:<!--StartFragment-->\\s*<table>)/.test(\n        htmlString,\n      );\n\n    // TODO: support pasting tables from Excel\n    if (\n      mimeType === 'text/html' &&\n      isSupportedHtmlTable(pasteValue) === false\n    ) {\n      console.warn(\n        'Unrecognized HTML format. HTML must be a simple table, e.g.: <table><tr><td>data</td></tr></table>.',\n      );\n      console.warn(\n        'Data with the mime type text/html not in this format will not be imported as row data.',\n      );\n\n      return;\n    }\n\n    function parseData(data, mimeType) {\n      // TODO: use DOMParser\n      if (mimeType === 'text/html') {\n        // strip table beginning and ending off, then split at rows\n        var cleanedHtmlData = data\n          .substring(\n            data.indexOf('<table><tr>') + 11,\n            data.indexOf('</tr></table>'),\n          )\n          .split('</tr><tr>')\n          .filter(\n            // ditch any headers on the table\n            (row) => !/^<th>|^<thead>/.test(row),\n          )\n          .map(\n            // split row into individual cells\n            (row) =>\n              row\n                .match(/<td>[^<]+/g)\n                .map((match) => match.replace(/^<td>/, '')),\n          );\n\n        return cleanedHtmlData;\n      }\n\n      // Default data format is string, so split on new line,\n      // and then enclose in an array (a row with one cell):\n      return data.split('\\n').map((value) => [value]);\n    }\n\n    var rows = parseData(pasteValue, mimeType);\n\n    // Special case: if rows.length = 1, we paste this value in each\n    // selected cell. This mimics Excel's paste functionality, and works\n    // as a poor-man's fill-down.\n    if (rows.length === 1) {\n      var cellData = rows[0][0];\n\n      self.forEachSelectedCell(function (data, rowIndex, colName) {\n        data[rowIndex][colName] = cellData;\n      });\n    } else {\n      var selections = [];\n      for (var rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n        // Rows may have been moved by user, so get the actual row index\n        // (instead of the row index at which the row is rendered):\n        var realRowIndex = self.orders.rows[startRowIndex + rowIndex];\n        var cells = rows[rowIndex];\n\n        var existingRowData = self.data[realRowIndex];\n        var newRowData = Object.assign({}, existingRowData);\n\n        selections[realRowIndex] = [];\n\n        for (var colIndex = 0; colIndex < cells.length; colIndex++) {\n          var column = schema[startColIndex + colIndex];\n\n          if (!column) {\n            console.warn('Paste data exceeded grid bounds. Skipping.');\n            continue;\n          }\n\n          var columnName = column.name;\n          var cellData = cells[colIndex];\n\n          if (cellData === undefined || cellData === null) {\n            newRowData[columnName] = existingRowData[columnName];\n            continue;\n          }\n\n          selections[realRowIndex].push(startColIndex + colIndex);\n\n          newRowData[columnName] = cellData;\n        }\n\n        self.data[realRowIndex] = newRowData;\n      }\n      self.selections = selections;\n    }\n\n    // selections is a sparse array, so we condense:\n    var affectedCells = [];\n\n    self.selections.forEach(function (row, rowIndex) {\n      if (rowIndex === undefined) return;\n\n      row.forEach(function (columnIndex) {\n        affectedCells.push([rowIndex, columnIndex]);\n      });\n    });\n\n    self.dispatchEvent('afterpaste', {\n      cells: affectedCells,\n    });\n\n    return rows.length;\n  };\n  self.getNextVisibleColumnIndex = function (visibleColumnIndex) {\n    var x,\n      s = self.getVisibleSchema();\n    for (x = 0; x < s.length; x += 1) {\n      if (s[x].columnIndex === visibleColumnIndex) {\n        return s[x + 1].columnIndex;\n      }\n    }\n    return -1;\n  };\n  self.getVisibleColumnIndexOf = function (columnIndex) {\n    var x,\n      s = self.getVisibleSchema();\n    for (x = 0; x < s.length; x += 1) {\n      if (s[x].columnIndex === columnIndex) {\n        return x;\n      }\n    }\n    return -1;\n  };\n  self.paste = function (event) {\n    if (!self.attributes.editable) {\n      return;\n    }\n\n    var defaultPrevented = self.dispatchEvent('beforepaste', {\n      NativeEvent: event,\n    });\n\n    if (defaultPrevented) {\n      return;\n    }\n\n    var clipboardItems = new Map(\n      Array.from(event.clipboardData.items).map((item) => [item.type, item]),\n    );\n\n    // Supported MIME types, in order of preference:\n    var supportedMimeTypes = ['text/html', 'text/csv', 'text/plain'];\n\n    // The clipboard will often contain the same data in multiple formats,\n    // which can be used depending on the context in which it's pasted. Here\n    // we'll prefere more structured (HTML/CSV) over less structured, when\n    // available, so we try to find those first:\n    var pasteableItems = supportedMimeTypes\n      .map((mimeType) => clipboardItems.get(mimeType))\n      .filter((item) => !!item); // filter out not-found MIME types (= undefined)\n\n    if (pasteableItems.length === 0) {\n      console.warn(\n        'Cannot find supported clipboard data type. Supported types are:',\n        supportedMimeTypes.join(', '),\n      );\n      return;\n    }\n\n    var itemToPaste = pasteableItems[0];\n\n    // itemToPaste is cleared once accessed (getData or getAsString),\n    // so we need to store the type here, before reading its value:\n    var pasteType = itemToPaste.type;\n\n    itemToPaste.getAsString(function (pasteValue) {\n      self.pasteData(\n        pasteValue,\n        pasteType,\n        self.activeCell.rowIndex,\n        self.getVisibleColumnIndexOf(self.activeCell.columnIndex),\n      );\n\n      self.draw();\n    });\n  };\n  self.cut = function (e) {\n    self.copy(e);\n    self.forEachSelectedCell(function (data, index, colName) {\n      data[index][colName] = '';\n    });\n  };\n  self.copy = function (e) {\n    if (self.dispatchEvent('copy', { NativeEvent: e })) {\n      return;\n    }\n    if (!self.hasFocus || !e.clipboardData) {\n      return;\n    }\n    var t,\n      d,\n      data = self.data || [],\n      tableRows = [],\n      textRows = [],\n      outputHeaders = {},\n      outputHeaderKeys,\n      sData = self.getSelectedData(),\n      s = self.getSchema();\n    function htmlSafe(v) {\n      return v.replace(/</g, '&lt;').replace(/>/g, '&gt;');\n    }\n    function fCopyCell(v) {\n      v = v === null || v === undefined ? '' : v;\n      return '<td>' + (typeof v === 'string' ? htmlSafe(v) : v) + '</td>';\n    }\n    function addHeaders(headers, useHtml) {\n      if (!s.length || headers.length < 2) {\n        return '';\n      }\n      var h = [];\n      if (useHtml) {\n        h.push('<tr>');\n      }\n      s.forEach(function (column, columnIndex) {\n        // intentional redefinition of column\n        column = s[self.orders.columns[columnIndex]];\n        if (!column.hidden && headers.indexOf(column.name) !== -1) {\n          var ev = { NativeEvent: e, column: column };\n          if (self.dispatchEvent('copyonschema', ev)) {\n            column = ev.column;\n          }\n\n          var hVal = column.name || column.title || '';\n          if (useHtml) {\n            h.push('<th>' + htmlSafe(hVal) + '</th>');\n          } else {\n            h.push('\"' + hVal.replace(/\"/g, '\"\"') + '\"');\n          }\n        }\n      });\n      h.push(useHtml ? '</tr>' : '\\n');\n      return h.join(useHtml ? '' : ',');\n    }\n    function addCellValue(val, trRow, textRow, column) {\n      // escape strings\n      if (val !== null && val !== false && val !== undefined && val.replace) {\n        trRow.push(fCopyCell(val));\n        textRow.push('\"' + val.replace(/\"/g, '\"\"') + '\"');\n        return;\n      }\n      if (val !== undefined) {\n        textRow.push(val);\n        trRow.push(fCopyCell(val));\n        return;\n      }\n      // issue #66\n      textRow.push('');\n      trRow.push('<td>&nbsp;</td>');\n    }\n    if (sData.length > 0) {\n      sData.forEach(function (row) {\n        var rowKeys = Object.keys(row);\n        if (row) {\n          var trRow = [],\n            textRow = [],\n            sSorted = [];\n          // HACK: https://github.com/TonyGermaneri/canvas-datagrid/issues/181\n          // I can't use sort here or O(1), so hacks\n          s.forEach(function (column, columnIndex) {\n            sSorted.push(s[self.orders.columns[columnIndex]]);\n          });\n          sSorted.forEach(function (column, columnIndex) {\n            if (rowKeys.indexOf(column.name) !== -1) {\n              outputHeaders[column.name] = true;\n              // escape strings\n              addCellValue(row[column.name], trRow, textRow, column);\n            }\n          });\n          tableRows.push(trRow.join(''));\n          textRows.push(textRow.join(','));\n        }\n      });\n      outputHeaderKeys = Object.keys(outputHeaders);\n      t = addHeaders(outputHeaderKeys) + textRows.join('\\n');\n      d =\n        '<table>' +\n        addHeaders(outputHeaderKeys, true) +\n        '<tr>' +\n        tableRows.join('</tr><tr>') +\n        '</tr></table>';\n      if (outputHeaderKeys.length === 1) {\n        // if there was only one cell selected, remove the quotes from the string\n        t = t.substring(1, t.length - 1);\n      }\n      e.clipboardData.setData('text/html', d);\n      e.clipboardData.setData('text/plain', t);\n      e.clipboardData.setData('text/csv', t);\n      e.clipboardData.setData('application/json', JSON.stringify(sData));\n      e.preventDefault();\n    }\n  };\n  return;\n}\n","/*jslint browser: true, unparam: true, todo: true, plusplus: true*/\n/*globals define: true, MutationObserver: false, requestAnimationFrame: false, performance: false, btoa: false*/\n'use strict';\n\nexport default function (self) {\n  var touchTimerMs = 50,\n    debounceTouchMove,\n    touchMoving,\n    touchScrollTimeout;\n  self.scrollAnimation = {};\n  self.touchDelta = {};\n  self.touchAnimateTo = {};\n  self.animationFrames = 0;\n  self.getTouchPos = function (e, touchIndex) {\n    var t = touchIndex ? e.touches[touchIndex] : e.touches[0],\n      rect = self.canvas.getBoundingClientRect(),\n      pos;\n    if (!t) {\n      return;\n    }\n    pos = {\n      x: t.clientX - rect.left,\n      y: t.clientY - rect.top,\n    };\n    if (self.isChildGrid) {\n      pos.x -= self.canvasOffsetLeft;\n      pos.y -= self.canvasOffsetTop;\n    }\n    return {\n      x: pos.x,\n      y: pos.y,\n      rect: rect,\n    };\n  };\n  // shamelessly stolen from from https://gist.github.com/gre/1650294\n  self.easingFunctions = {\n    linear: function (t) {\n      return t;\n    },\n    easeInQuad: function (t) {\n      return t * t;\n    },\n    easeOutQuad: function (t) {\n      return t * (2 - t);\n    },\n    easeInOutQuad: function (t) {\n      return t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t;\n    },\n    easeInCubic: function (t) {\n      return t * t * t;\n    },\n    easeOutCubic: function (t) {\n      return --t * t * t + 1;\n    },\n    easeInOutCubic: function (t) {\n      return t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\n    },\n    easeInQuart: function (t) {\n      return t * t * t * t;\n    },\n    easeOutQuart: function (t) {\n      return 1 - --t * t * t * t;\n    },\n    easeInOutQuart: function (t) {\n      return t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t;\n    },\n    easeInQuint: function (t) {\n      return t * t * t * t * t;\n    },\n    easeOutQuint: function (t) {\n      return 1 + --t * t * t * t * t;\n    },\n    easeInOutQuint: function (t) {\n      return t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t;\n    },\n  };\n  self.easing = function (t, b, c, d) {\n    return (\n      c * self.easingFunctions[self.attributes.touchEasingMethod](t / d) + b\n    );\n  };\n  self.calculatePPSTimed = function () {\n    self.xPPST = -(\n      (self.touchDelta.x - self.touchSigmaTimed.x) /\n      (self.touchDelta.t - self.touchSigmaTimed.t)\n    );\n    self.yPPST = -(\n      (self.touchDelta.y - self.touchSigmaTimed.y) /\n      (self.touchDelta.t - self.touchSigmaTimed.t)\n    );\n    self.touchSigmaTimed = {\n      x: self.touchDelta.x,\n      y: self.touchDelta.y,\n      t: performance.now(),\n    };\n  };\n  self.calculatePPS = function () {\n    self.xPPS = -(\n      (self.touchDelta.x - self.touchSigma.x) /\n      (self.touchDelta.t - self.touchSigma.t)\n    );\n    self.yPPS = -(\n      (self.touchDelta.y - self.touchSigma.y) /\n      (self.touchDelta.t - self.touchSigma.t)\n    );\n    self.touchSigma = {\n      x: self.touchDelta.x,\n      y: self.touchDelta.y,\n      t: performance.now(),\n    };\n  };\n  self.touchEndAnimation = function () {\n    if (!self.canvas || !self.scrollBox.scrollTo) {\n      return requestAnimationFrame(self.touchEndAnimation);\n    }\n    var n = performance.now(),\n      d = self.attributes.touchReleaseAnimationDurationMs,\n      t;\n    t = n - self.touchDelta.t;\n    self.animationFrames += 1;\n    self.scrollAnimation.x = self.easing(\n      t,\n      self.touchDelta.scrollLeft,\n      self.touchAnimateTo.x,\n      d,\n    );\n    self.scrollAnimation.y = self.easing(\n      t,\n      self.touchDelta.scrollTop,\n      self.touchAnimateTo.y,\n      d,\n    );\n    if (\n      t > d ||\n      (self.scrollAnimation.y === self.scrollBox.scrollTop &&\n        self.scrollAnimation.x === self.scrollBox.scrollLeft) ||\n      self.stopAnimation\n    ) {\n      return;\n    }\n    self.scrollBox.scrollTo(self.scrollAnimation.x, self.scrollAnimation.y);\n    requestAnimationFrame(self.touchEndAnimation);\n  };\n  self.touchEditCell = function (cell) {\n    self.beginEditAt(cell.columnIndex, cell.rowIndex);\n  };\n  self.touchCell = function (e) {\n    return function () {\n      clearInterval(self.calculatePPSTimer);\n      var i,\n        pos = self.getTouchPos(e);\n      if (\n        Math.abs(self.touchDelta.x) + Math.abs(self.touchDelta.y) <\n        self.attributes.touchDeadZone\n      ) {\n        i = self.getCellAt(pos.x, pos.y);\n        if (!i) {\n          return;\n        }\n        if (\n          self.touchingCell &&\n          self.touchingCell.rowIndex === i.rowIndex &&\n          self.touchingCell.columnIndex === i.columnIndex\n        ) {\n          self.touchEditCell(i);\n          return;\n        }\n        if (self.input && self.input.editCell) {\n          self.endEdit();\n        }\n        self.touchingCell = i;\n        self.selectArea({\n          top: i.rowIndex,\n          bottom: i.rowIndex,\n          left: i.columnIndex,\n          right: i.columnIndex,\n        });\n        self.draw(true);\n      }\n    };\n  };\n  self.touchstart = function (e) {\n    if (e.changedTouches[0]) {\n      self.touchStart = self.getTouchPos(e);\n      self.startingCell = self.getCellAt(\n        self.touchStart.x,\n        self.touchStart.y,\n        true,\n      );\n    }\n    if (\n      self.dispatchEvent('touchstart', {\n        NativeEvent: e,\n        cell: self.startingCell,\n      })\n    ) {\n      return;\n    }\n    self.disposeContextMenu();\n    clearInterval(self.calculatePPSTimer);\n    clearTimeout(self.touchContextTimeout);\n    self.touchStartEvent = e;\n    self.stopAnimation = true;\n    self.animationFrames = 0;\n    self.stopPropagation(e);\n    e.preventDefault();\n    if (e.touches.length === 1 && e.changedTouches[0] && !self.zoomAltered) {\n      self.touchLength = 1;\n      self.touchStart = self.touchStart || self.touchStart1;\n      self.touchScrollStart = {\n        x: self.scrollBox.scrollLeft,\n        y: self.scrollBox.scrollTop,\n        t: performance.now(),\n      };\n      self.touchDelta = {\n        x: 0,\n        y: 0,\n        scrollLeft: self.scrollBox.scrollLeft,\n        scrollTop: self.scrollBox.scrollTop,\n        t: self.touchScrollStart.t,\n      };\n      self.touchSigma = {\n        x: self.touchDelta.x,\n        y: self.touchDelta.y,\n        t: self.touchDelta.t,\n      };\n      self.touchSigmaTimed = {\n        x: self.touchDelta.x,\n        y: self.touchDelta.y,\n        t: self.touchDelta.t,\n      };\n      self.touchContextTimeout = setTimeout(function () {\n        self.contextmenuEvent(e, self.touchStart);\n      }, self.attributes.touchContextMenuTimeMs);\n      self.calculatePPSTimer = setInterval(\n        self.calculatePPSTimed,\n        touchTimerMs,\n      );\n      if (\n        self.startingCell &&\n        (self.startingCell.isGrid ||\n          ['tree', 'inherit'].indexOf(self.startingCell.context) !== -1)\n      ) {\n        self.hasFocus = false;\n        return;\n      }\n      self.hasFocus = true;\n      if (self.startingCell.isHeader) {\n        if (self.startingCell.isRowHeader) {\n          self.selectArea({\n            top: self.startingCell.rowIndex,\n            bottom: self.startingCell.rowIndex,\n            left: 0,\n            right: self.getVisibleSchema().length - 1,\n          });\n          self.draw(true);\n        } else if (self.startingCell.isColumnHeader) {\n          if (self.attributes.columnHeaderClickBehavior === 'sort') {\n            if (self.orderBy === self.startingCell.header.name) {\n              self.orderDirection =\n                self.orderDirection === 'asc' ? 'desc' : 'asc';\n            } else {\n              self.orderDirection = 'asc';\n            }\n            self.order(self.startingCell.header.name, self.orderDirection);\n          }\n          if (self.attributes.columnHeaderClickBehavior === 'select') {\n            self.selectArea({\n              top: 0,\n              bottom: self.data.length - 1,\n              left: self.startingCell.columnIndex,\n              right: self.startingCell.columnIndex,\n            });\n            self.draw(true);\n          }\n        }\n        self.touchEndEvents(e);\n        return;\n      }\n    }\n    if (self.zoomAltered) {\n      return;\n    }\n    document.body.addEventListener('touchmove', self.touchmove, {\n      passive: false,\n    });\n    document.body.addEventListener('touchend', self.touchend, false);\n    document.body.addEventListener('touchcancel', self.touchcancel, false);\n    self.draw(true);\n  };\n  self.touchSelect = function (cell, handleType) {\n    if (cell.rowIndex === undefined || cell.columnIndex === undefined) {\n      return;\n    }\n    self.touchSelecting = true;\n    var bounds = self.getSelectionBounds();\n    if (\n      handleType === 'selection-handle-bl' &&\n      cell.rowIndex >= bounds.top &&\n      cell.columnIndex <= bounds.right\n    ) {\n      bounds.bottom = cell.rowIndex;\n      bounds.left = cell.columnIndex;\n    } else if (\n      handleType === 'selection-handle-tl' &&\n      cell.rowIndex <= bounds.bottom &&\n      cell.columnIndex <= bounds.right\n    ) {\n      bounds.top = cell.rowIndex;\n      bounds.left = cell.columnIndex;\n    } else if (\n      handleType === 'selection-handle-tr' &&\n      cell.rowIndex <= bounds.bottom &&\n      cell.columnIndex >= bounds.left\n    ) {\n      bounds.top = cell.rowIndex;\n      bounds.right = cell.columnIndex;\n    } else if (\n      handleType === 'selection-handle-br' &&\n      cell.rowIndex >= bounds.top &&\n      cell.columnIndex >= bounds.left\n    ) {\n      bounds.bottom = cell.rowIndex;\n      bounds.right = cell.columnIndex;\n    }\n    if (self.attributes.selectionMode === 'row' || cell.rowIndex === -1) {\n      bounds.left = 0;\n      bounds.right = self.getSchema().length - 1;\n    } else {\n      bounds.left = Math.max(0, bounds.left);\n    }\n    self.selectArea(bounds);\n    self.draw(true);\n  };\n  function touchMove(e) {\n    var ch, rw, rScrollZone, lScrollZone, bScrollZone, tScrollZone, sbw, t1, t2;\n    if (self.dispatchEvent('beforetouchmove', { NativeEvent: e })) {\n      return;\n    }\n    clearTimeout(touchScrollTimeout);\n    if (e.changedTouches[0]) {\n      self.touchPosition = self.getTouchPos(e);\n    }\n    if (e.changedTouches[1]) {\n      self.touchPosition1 = self.getTouchPos(e, 1);\n    }\n    if (\n      Math.abs(self.touchDelta.x) + Math.abs(self.touchDelta.y) >\n      self.attributes.touchDeadZone\n    ) {\n      clearTimeout(self.touchContextTimeout);\n    }\n    if (e.touches.length === 2 && self.touchPosition && self.touchPosition1) {\n      t1 = self.touchPosition.y;\n      t2 = self.touchPosition1.y;\n      if (!self.zoomDeltaStart) {\n        self.zoomDeltaStart = Math.abs(t1 - t2);\n        self.startScale = self.scale;\n      }\n      self.touchLength = 2;\n      self.scaleDelta = self.zoomDeltaStart - Math.abs(t1 - t2);\n      self.scale =\n        self.startScale -\n        self.scaleDelta * self.attributes.touchZoomSensitivity;\n      self.scale = Math.min(\n        Math.max(self.scale, self.attributes.touchZoomMin),\n        self.attributes.touchZoomMax,\n      );\n      self.zoomAltered = true;\n      self.resize(true);\n      self.resizeChildGrids();\n      return;\n    }\n    if (self.zoomAltered) {\n      return;\n    }\n    self.touchLength = 1;\n    self.touchPosition = self.touchPosition || self.touchPosition1;\n    ch = self.getColumnHeaderCellHeight();\n    rw = self.getRowHeaderCellWidth();\n    rScrollZone =\n      self.width - self.style.scrollBarWidth - self.touchPosition.x <\n      self.attributes.selectionScrollZone;\n    lScrollZone =\n      self.touchPosition.x - rw < self.attributes.selectionScrollZone;\n    bScrollZone =\n      self.height - self.style.scrollBarWidth - self.touchPosition.y <\n      self.attributes.selectionScrollZone;\n    tScrollZone =\n      self.touchPosition.y - ch < self.attributes.selectionScrollZone;\n    sbw = self.style.scrollBarWidth;\n    function touchScroll() {\n      var x = self.scrollBox.scrollLeft,\n        y = self.scrollBox.scrollTop;\n      x += rScrollZone ? self.attributes.selectionScrollIncrement : 0;\n      y += bScrollZone ? self.attributes.selectionScrollIncrement : 0;\n      y -= tScrollZone ? self.attributes.selectionScrollIncrement : 0;\n      x -= lScrollZone ? self.attributes.selectionScrollIncrement : 0;\n      self.scrollBox.scrollTo(x, y);\n      touchScrollTimeout = setTimeout(\n        touchScroll,\n        self.attributes.scrollRepeatRate,\n      );\n    }\n    e.stopPropagation();\n    self.touchDelta = {\n      x: self.touchPosition.x - self.touchStart.x,\n      y: self.touchPosition.y - self.touchStart.y,\n      scrollLeft: self.scrollBox.scrollLeft,\n      scrollTop: self.scrollBox.scrollTop,\n      t: performance.now(),\n    };\n    self.currentCell = self.getCellAt(\n      self.touchPosition.x,\n      self.touchPosition.y,\n    );\n    self.dispatchEvent('touchmove', { NativeEvent: e, cell: self.currentCell });\n    self.calculatePPS();\n    self.touchDuration = performance.now() - self.touchScrollStart.t;\n    self.stopAnimation = true;\n    self.animationFrames = 0;\n    if (\n      self.touchSelecting &&\n      (rScrollZone || lScrollZone || tScrollZone || bScrollZone)\n    ) {\n      touchScroll();\n    }\n    if (/vertical-scroll-/.test(self.startingCell.style)) {\n      self.scrollBox.scrollTop =\n        self.scrollBox.scrollHeight *\n        ((self.touchPosition.y - ch - sbw) /\n          (self.scrollBox.height - sbw - ch));\n      return;\n    }\n    if (/horizontal-scroll-/.test(self.startingCell.style)) {\n      self.scrollBox.scrollLeft =\n        self.scrollBox.scrollWidth *\n        ((self.touchPosition.x - rw - sbw) / (self.scrollBox.width - sbw - rw));\n      return;\n    }\n    if (/selection-handle-/.test(self.startingCell.style)) {\n      self.touchSelect(self.currentCell, self.startingCell.style);\n      return;\n    }\n    self.scrollBox.scrollTo(\n      self.touchScrollStart.x - self.touchDelta.x,\n      self.touchScrollStart.y - self.touchDelta.y,\n    );\n  }\n  self.touchmove = function (e) {\n    if (touchMoving) {\n      return;\n    }\n    requestAnimationFrame(function () {\n      touchMoving = true;\n      touchMove(e);\n      touchMoving = false;\n    });\n  };\n  self.touchEndEvents = function (e) {\n    self.zoomDeltaStart = undefined;\n    self.touchSelecting = false;\n    clearInterval(self.touchScrollTimeout);\n    clearInterval(self.touchContextTimeout);\n    clearInterval(self.calculatePPSTimer);\n    e.stopPropagation();\n    document.body.removeEventListener('touchmove', self.touchmove, {\n      passive: false,\n    });\n    document.body.removeEventListener('touchend', self.touchend, false);\n    document.body.removeEventListener('touchcancel', self.touchcancel, false);\n  };\n  self.touchend = function (e) {\n    if (\n      self.dispatchEvent('touchend', { NativeEvent: e, cell: self.currentCell })\n    ) {\n      return;\n    }\n    self.zoomDeltaStart = undefined;\n    if (e.changedTouches[0]) {\n      self.touchPosition = undefined;\n    }\n    if (e.changedTouches[1]) {\n      self.touchPosition1 = undefined;\n    }\n    if (self.zoomAltered) {\n      if (e.touches.length === 0) {\n        self.zoomAltered = false;\n      }\n      return;\n    }\n    var dz =\n      Math.abs(self.touchDelta.x) + Math.abs(self.touchDelta.y) <\n      self.attributes.touchDeadZone;\n    if (isNaN(self.xPPS)) {\n      self.xPPS = 0;\n    }\n    if (isNaN(self.yPPS)) {\n      self.yPPS = 0;\n    }\n    if (isNaN(self.xPPST)) {\n      self.xPPST = 0;\n    }\n    if (isNaN(self.yPPST)) {\n      self.yPPST = 0;\n    }\n    self.touchAnimateTo.x =\n      self.xPPS * self.attributes.touchReleaseAcceleration;\n    self.touchAnimateTo.y =\n      self.yPPS * self.attributes.touchReleaseAcceleration;\n    self.calculatePPSTimed();\n    if (dz && !self.contextMenu) {\n      self.touchCell(self.touchStartEvent)();\n    } else if (\n      self.animationFrames === 0 &&\n      (Math.abs(self.xPPST) > self.attributes.scrollAnimationPPSThreshold ||\n        Math.abs(self.yPPST) > self.attributes.scrollAnimationPPSThreshold) &&\n      !/-scroll-/.test(self.startingCell.style) &&\n      !dz\n    ) {\n      self.stopAnimation = false;\n      self.touchEndAnimation();\n    }\n    self.touchEndEvents(e);\n  };\n  self.touchcancel = function (e) {\n    if (\n      self.dispatchEvent('touchcancel', {\n        NativeEvent: e,\n        cell: self.currentCell,\n      })\n    ) {\n      return;\n    }\n    self.touchEndEvents(e);\n  };\n}\n","/*jslint browser: true, unparam: true, todo: true*/\n/*globals HTMLElement: false, Reflect: false, define: true, MutationObserver: false, requestAnimationFrame: false, performance: false, btoa: false*/\n'use strict';\n\nexport default function (self, ctor) {\n  self.scale = 1;\n  self.orders = {\n    rows: [],\n    columns: [],\n  };\n  self.appliedInlineStyles = {};\n  self.cellGridAttributes = {};\n  self.treeGridAttributes = {};\n  self.visibleRowHeights = [];\n  self.hasFocus = false;\n  self.activeCell = {\n    columnIndex: 0,\n    rowIndex: 0,\n  };\n  self.innerHTML = '';\n  self.storageName = 'canvasDataGrid';\n  self.invalidSearchExpClass = 'canvas-datagrid-invalid-search-regExp';\n  self.localStyleLibraryStorageKey = 'canvas-datagrid-user-style-library';\n  self.dataType = 'application/x-canvas-datagrid';\n  self.orderBy = null;\n  self.orderDirection = 'asc';\n  self.orderings = {\n    columns: [],\n    add: function (orderBy, orderDirection, sortFunction) {\n      self.orderings.columns = self.orderings.columns.filter(function (col) {\n        return col.orderBy !== orderBy;\n      });\n      self.orderings.columns.push({\n        orderBy: orderBy,\n        orderDirection: orderDirection,\n        sortFunction: sortFunction,\n      });\n    },\n    sort: function () {\n      self.orderings.columns.forEach(function (col) {\n        self.data.sort(col.sortFunction(col.orderBy, col.orderDirection));\n      });\n    },\n  };\n  self.columnFilters = {};\n  self.filters = {};\n  self.frozenRow = 0;\n  self.frozenColumn = 0;\n  self.ellipsisCache = {};\n  self.scrollCache = { x: [], y: [] };\n  self.scrollBox = {};\n  self.visibleRows = [];\n  self.visibleCells = [];\n  self.sizes = {\n    rows: {},\n    columns: {},\n    trees: {},\n  };\n  self.currentFilter = function () {\n    return true;\n  };\n  self.selections = [];\n  self.hovers = {};\n  self.attributes = {};\n  self.style = {};\n  self.formatters = {};\n  self.sorters = {};\n  self.parsers = {};\n  self.schemaHashes = {};\n  self.events = {};\n  self.changes = [];\n  self.scrollIndexTop = 0;\n  self.scrollPixelTop = 0;\n  self.scrollIndexLeft = 0;\n  self.scrollPixelLeft = 0;\n  self.childGrids = {};\n  self.openChildren = {};\n  self.scrollModes = [\n    'vertical-scroll-box',\n    'vertical-scroll-top',\n    'vertical-scroll-bottom',\n    'horizontal-scroll-box',\n    'horizontal-scroll-right',\n    'horizontal-scroll-left',\n  ];\n  self.componentL1Events = {};\n  self.eventNames = [\n    'afterdraw',\n    'afterrendercell',\n    'attributechanged',\n    'beforebeginedit',\n    'beforecreatecellgrid',\n    'beforedraw',\n    'beforeendedit',\n    'beforerendercell',\n    'beforerendercellgrid',\n    'beginedit',\n    'cellmouseout',\n    'cellmouseover',\n    'click',\n    'collapsetree',\n    'contextmenu',\n    'copy',\n    'datachanged',\n    'dblclick',\n    'endedit',\n    'expandtree',\n    'formatcellvalue',\n    'keydown',\n    'keypress',\n    'keyup',\n    'mousedown',\n    'mousemove',\n    'mouseup',\n    'newrow',\n    'ordercolumn',\n    'rendercell',\n    'rendercellgrid',\n    'renderorderbyarrow',\n    'rendertext',\n    'rendertreearrow',\n    'reorder',\n    'reordering',\n    'resize',\n    'resizecolumn',\n    'resizerow',\n    'schemachanged',\n    'scroll',\n    'selectionchanged',\n    'stylechanged',\n    'touchcancel',\n    'touchend',\n    'touchmove',\n    'touchstart',\n    'wheel',\n  ];\n  self.mouse = { x: 0, y: 0 };\n  self.getSelectedData = function (expandToRow) {\n    var d = [],\n      s = self.getSchema(),\n      l = self.data.length;\n    if (l === 0) {\n      return [];\n    }\n    self.selections.forEach(function (row, index) {\n      if (!row) {\n        return;\n      }\n      if (index === l) {\n        return;\n      }\n      if (row.length === 0) {\n        d[index] = null;\n        return;\n      }\n      d[index] = {};\n      row.forEach(function (col) {\n        var orderedIndex;\n        if (col === -1 || !s[col]) {\n          return;\n        }\n        orderedIndex = self.orders.columns[col];\n        if (!expandToRow && s[orderedIndex].hidden) {\n          return;\n        }\n        if (self.data[index]) {\n          d[index][s[orderedIndex].name] =\n            self.data[index][s[orderedIndex].name];\n        }\n      });\n    });\n    return d;\n  };\n  self.getColumnHeaderCellHeight = function () {\n    if (!self.attributes.showColumnHeaders) {\n      return 0;\n    }\n    return (\n      (self.sizes.rows[-1] || self.style.columnHeaderCellHeight) * self.scale\n    );\n  };\n  self.getRowHeaderCellWidth = function () {\n    if (!self.attributes.showRowHeaders) {\n      return 0;\n    }\n    return (\n      (self.sizes.columns[-1] || self.style.rowHeaderCellWidth) * self.scale\n    );\n  };\n  self.setStorageData = function () {\n    if (!self.attributes.saveAppearance || !self.attributes.name) {\n      return;\n    }\n    var visibility = {};\n    self.getSchema().forEach(function (column) {\n      visibility[column.name] = !column.hidden;\n    });\n    localStorage.setItem(\n      self.storageName + '-' + self.attributes.name,\n      JSON.stringify({\n        sizes: {\n          rows: self.sizes.rows,\n          columns: self.sizes.columns,\n        },\n        orders: {\n          rows: self.orders.rows,\n          columns: self.orders.columns,\n        },\n        orderBy: self.orderBy,\n        orderDirection: self.orderDirection,\n        visibility: visibility,\n      }),\n    );\n  };\n  self.getSchema = function () {\n    return self.schema || self.tempSchema || [];\n  };\n  function fillArray(low, high) {\n    var i = [],\n      x;\n    for (x = low; x <= high; x += 1) {\n      i[x] = x;\n    }\n    return i;\n  }\n  self.createColumnOrders = function () {\n    var s = self.getSchema();\n    self.orders.columns = fillArray(0, s.length - 1);\n  };\n  self.createRowOrders = function () {\n    self.orders.rows = fillArray(0, self.data.length - 1);\n  };\n  self.getVisibleSchema = function () {\n    return self.getSchema().filter(function (col) {\n      return !col.hidden;\n    });\n  };\n  self.applyDefaultValue = function (row, header) {\n    var d = header.defaultValue || '';\n    if (typeof d === 'function') {\n      d = d.apply(self.intf, [header]);\n    }\n    row[header.name] = d;\n  };\n  self.createNewRowData = function () {\n    self.newRow = {};\n    self.getSchema().forEach(function forEachHeader(header) {\n      self.applyDefaultValue(self.newRow, header);\n    });\n  };\n  self.getSchemaNameHash = function (key) {\n    var n = 0;\n    while (self.schemaHashes[key]) {\n      n += 1;\n      key = key + n;\n    }\n    return key;\n  };\n  self.filter = function (type) {\n    var f = self.filters[type];\n    if (!f && type !== undefined) {\n      console.warn(\n        'Cannot find filter for type %s, falling back to substring match.',\n        type,\n      );\n      f = self.filters.string;\n    }\n    return f;\n  };\n  self.applyFilter = function () {\n    self.refreshFromOrigialData();\n    Object.keys(self.columnFilters).forEach(function (filter) {\n      var header = self.getHeaderByName(filter);\n      if (!header) {\n        return;\n      }\n      self.currentFilter =\n        header.filter || self.filter(header.type || 'string');\n      self.data = self.data.filter(function (row) {\n        return self.currentFilter(row[filter], self.columnFilters[filter]);\n      });\n    });\n    self.resize();\n    self.draw(true);\n  };\n  self.applyDataTransforms = function () {\n    self.applyFilter();\n    self.orderings.sort();\n  };\n  self.getBestGuessDataType = function (columnName, data) {\n    var t,\n      x,\n      l = data.length;\n    for (x = 0; x < l; x += 1) {\n      if (\n        data[x] !== undefined &&\n        data[x] !== null &&\n        [null, undefined].indexOf(data[x][columnName]) !== -1\n      ) {\n        t = typeof data[x];\n        return t === 'object' ? 'string' : t;\n      }\n    }\n    return 'string';\n  };\n  self.drawChildGrids = function () {\n    Object.keys(self.childGrids).forEach(function (gridKey) {\n      self.childGrids[gridKey].draw();\n    });\n  };\n  self.resizeChildGrids = function () {\n    Object.keys(self.childGrids).forEach(function (gridKey) {\n      self.childGrids[gridKey].resize();\n    });\n  };\n  self.autoScrollZone = function (e, x, y, ctrl) {\n    var setTimer,\n      rowHeaderCellWidth = self.getRowHeaderCellWidth(),\n      columnHeaderCellHeight = self.getColumnHeaderCellHeight();\n    if (y !== -1) {\n      if (\n        x > self.width - self.attributes.selectionScrollZone &&\n        x < self.width\n      ) {\n        self.scrollBox.scrollLeft += self.attributes.selectionScrollIncrement;\n        setTimer = true;\n      }\n      if (x - self.attributes.selectionScrollZone - rowHeaderCellWidth < 0) {\n        self.scrollBox.scrollLeft -= self.attributes.selectionScrollIncrement;\n        setTimer = true;\n      }\n    }\n    if (y !== -1) {\n      if (\n        y > self.height - self.attributes.selectionScrollZone &&\n        y < self.height\n      ) {\n        self.scrollBox.scrollTop += self.attributes.selectionScrollIncrement;\n        setTimer = true;\n      }\n      if (\n        y - self.attributes.selectionScrollZone - columnHeaderCellHeight <\n        0\n      ) {\n        self.scrollBox.scrollTop -= self.attributes.selectionScrollIncrement;\n        setTimer = true;\n      }\n    }\n    if (\n      setTimer &&\n      !ctrl &&\n      self.currentCell &&\n      self.currentCell.columnIndex !== -1\n    ) {\n      self.scrollTimer = setTimeout(\n        self.mousemove,\n        self.attributes.scrollRepeatRate,\n        e,\n      );\n    }\n  };\n  self.refreshFromOrigialData = function () {\n    self.data = self.originalData.filter(function (row) {\n      return true;\n    });\n  };\n  self.validateColumn = function (c, s) {\n    if (!c.name) {\n      throw new Error('A column must contain at least a name.');\n    }\n    if (\n      s.filter(function (i) {\n        return i.name === c.name;\n      }).length > 0\n    ) {\n      throw new Error(\n        'A column with the name ' +\n          c.name +\n          ' already exists and cannot be added again.',\n      );\n    }\n    return true;\n  };\n  self.setDefaults = function (obj1, obj2, key, def) {\n    obj1[key] = obj2[key] === undefined ? def : obj2[key];\n  };\n  self.setAttributes = function () {\n    self.defaults.attributes.forEach(function eachAttribute(i) {\n      self.setDefaults(self.attributes, self.args, i[0], i[1]);\n    });\n  };\n  self.setStyle = function () {\n    self.defaults.styles.forEach(function eachStyle(i) {\n      self.setDefaults(self.style, self.args.style || {}, i[0], i[1]);\n    });\n  };\n  self.autosize = function (colName) {\n    self.getVisibleSchema().forEach(function (col, colIndex) {\n      if (col.name === colName || colName === undefined) {\n        self.sizes.columns[colIndex] = Math.max(\n          self.findColumnMaxTextLength(col.name),\n          self.style.minColumnWidth,\n        );\n      }\n    });\n    self.sizes.columns[-1] = self.findColumnMaxTextLength('cornerCell');\n  };\n  self.dispose = function () {\n    if (!self.isChildGrid && self.canvas && self.canvas.parentNode) {\n      self.canvas.parentNode.removeChild(self.canvas);\n    }\n    if (!self.isChildGrid) {\n      document.body.removeChild(self.controlInput);\n    }\n    self.eventParent.removeEventListener('mouseup', self.mouseup, false);\n    self.eventParent.removeEventListener('mousedown', self.mousedown, false);\n    self.eventParent.removeEventListener('dblclick', self.dblclick, false);\n    self.eventParent.removeEventListener('click', self.click, false);\n    self.eventParent.removeEventListener('mousemove', self.mousemove);\n    self.eventParent.removeEventListener('wheel', self.scrollWheel, false);\n    self.canvas.removeEventListener('contextmenu', self.contextmenu, false);\n    self.canvas.removeEventListener('copy', self.copy);\n    self.controlInput.removeEventListener('copy', self.copy);\n    self.controlInput.removeEventListener('cut', self.cut);\n    self.controlInput.removeEventListener('paste', self.paste);\n    self.controlInput.removeEventListener('keypress', self.keypress, false);\n    self.controlInput.removeEventListener('keyup', self.keyup, false);\n    self.controlInput.removeEventListener('keydown', self.keydown, false);\n    window.removeEventListener('resize', self.resize);\n    if (self.observer && self.observer.disconnect) {\n      self.observer.disconnect();\n    }\n  };\n  self.tryLoadStoredSettings = function () {\n    var s;\n    self.reloadStoredValues();\n    if (\n      self.storedSettings &&\n      typeof self.storedSettings.orders === 'object' &&\n      self.storedSettings.orders !== null\n    ) {\n      if (self.storedSettings.orders.rows.length >= (self.data || []).length) {\n        self.orders.rows = self.storedSettings.orders.rows;\n      }\n      s = self.getSchema();\n      if (self.storedSettings.orders.columns.length === s.length) {\n        self.orders.columns = self.storedSettings.orders.columns;\n      }\n      self.orderBy =\n        self.storedSettings.orderBy === undefined\n          ? s[0].name\n          : self.storedSettings.orderBy;\n      self.orderDirection =\n        self.storedSettings.orderDirection === undefined\n          ? 'asc'\n          : self.storedSettings.orderDirection;\n      if (\n        self.storedSettings.orderBy !== undefined &&\n        self.getHeaderByName(self.orderBy) &&\n        self.orderDirection\n      ) {\n        self.order(self.orderBy, self.orderDirection);\n      }\n    }\n  };\n  self.getDomRoot = function () {\n    return self.shadowRoot ? self.shadowRoot.host : self.parentNode;\n  };\n  self.getFontName = function (fontStyle) {\n    return fontStyle.replace(/\\d+\\.?\\d*px/, '');\n  };\n  self.getFontHeight = function (fontStyle) {\n    return parseFloat(fontStyle, 10);\n  };\n  self.parseStyleValue = function (key) {\n    if (/Font/.test(key)) {\n      self.style[key + 'Height'] = self.getFontHeight(self.style[key]);\n      self.style[key + 'Name'] = self.getFontName(self.style[key]);\n      return;\n    }\n    // when inheriting styles from already instantiated grids, don't parse already parsed values.\n    if (\n      key === 'moveOverlayBorderSegments' &&\n      typeof self.style[key] === 'string'\n    ) {\n      self.style[key] = self.style[key].split(',').map(function (i) {\n        return parseInt(i, 10);\n      });\n    }\n  };\n  self.initProp = function (propName) {\n    if (!self.args[propName]) {\n      return;\n    }\n    Object.keys(self.args[propName]).forEach(function (key) {\n      self[propName][key] = self.args[propName][key];\n    });\n  };\n  self.getStyleProperty = function (key) {\n    if (self.styleKeys.indexOf(key) === -1) {\n      return self.parentNodeStyle[key];\n    }\n    return self.style[key];\n  };\n  self.setStyleProperty = function (key, value, supressDrawAndEvent) {\n    var isDim =\n      [\n        'height',\n        'width',\n        'minHeight',\n        'minWidth',\n        'maxHeight',\n        'maxWidth',\n      ].indexOf(key) !== -1;\n    if (self.styleKeys.indexOf(key) === -1) {\n      self.parentNodeStyle[key] = value;\n    } else {\n      if (/-/.test(key)) {\n        key = self.dehyphenateProperty(key);\n      }\n      self.style[key] = value;\n      self.parseStyleValue(key);\n    }\n    if (isDim) {\n      self.resize();\n    }\n    if (!supressDrawAndEvent) {\n      self.draw(true);\n      self.dispatchEvent('stylechanged', { name: 'style', value: value });\n    }\n  };\n  self.reloadStoredValues = function () {\n    if (self.attributes.name && self.attributes.saveAppearance) {\n      try {\n        self.storedSettings = localStorage.getItem(\n          self.storageName + '-' + self.attributes.name,\n        );\n      } catch (e) {\n        console.warn('Error loading stored values. ' + e.message);\n        self.storedSettings = undefined;\n      }\n      if (self.storedSettings) {\n        try {\n          self.storedSettings = JSON.parse(self.storedSettings);\n        } catch (e) {\n          console.warn('could not read settings from localStore', e);\n          self.storedSettings = undefined;\n        }\n      }\n      if (self.storedSettings) {\n        if (\n          typeof self.storedSettings.sizes === 'object' &&\n          self.storedSettings.sizes !== null\n        ) {\n          self.sizes.rows = self.storedSettings.sizes.rows;\n          self.sizes.columns = self.storedSettings.sizes.columns;\n          ['trees', 'columns', 'rows'].forEach(function (i) {\n            if (!self.sizes[i]) {\n              self.sizes[i] = {};\n            }\n          });\n        }\n        if (typeof self.storedSettings.visibility === 'object') {\n          self.getSchema().forEach(function (column) {\n            if (\n              self.storedSettings.visibility &&\n              self.storedSettings.visibility[column.name] !== undefined\n            ) {\n              column.hidden = !self.storedSettings.visibility[column.name];\n            }\n          });\n        }\n      }\n    }\n  };\n  self.init = function () {\n    if (self.initialized) {\n      return;\n    }\n    function addStyleKeyIfNoneExists(key) {\n      if (self.styleKeys.indexOf(key) === -1) {\n        self.styleKeys.push(key);\n      }\n    }\n    var publicStyleKeyIntf = {};\n    self.setAttributes();\n    self.setStyle();\n    self.initScrollBox();\n    self.setDom();\n    self.nodeType = 'canvas-datagrid';\n    self.ie = /Trident/.test(window.navigator.userAgent);\n    self.edge = /Edge/.test(window.navigator.userAgent);\n    self.webKit = /WebKit/.test(window.navigator.userAgent);\n    self.moz = /Gecko/.test(window.navigator.userAgent);\n    self.mobile = /Mobile/i.test(window.navigator.userAgent);\n    self.blankValues = [undefined, null, ''];\n    self.cursorGrab = 'grab';\n    self.cursorGrabing = 'grabbing';\n    self.cursorGrab = self.webKit ? '-webkit-grab' : self.cursorGrab;\n    self.cursorGrabing = self.moz ? '-webkit-grabbing' : self.cursorGrabbing;\n    self.pointerLockPosition = { x: 0, y: 0 };\n    Object.keys(self.style).forEach(self.parseStyleValue);\n    self.intf.moveSelection = self.moveSelection;\n    self.intf.moveTo = self.moveTo;\n    self.intf.addEventListener = self.addEventListener;\n    self.intf.removeEventListener = self.removeEventListener;\n    self.intf.dispatchEvent = self.dispatchEvent;\n    /**\n     * Releases grid resources and removes grid elements.\n     * @memberof canvasDatagrid\n     * @name dispose\n     * @method\n     */\n    self.intf.dispose = self.dispose;\n    /**\n     * Appends the grid to another element later.  Not implemented.\n     * @memberof canvasDatagrid\n     * @name appendTo\n     * @method\n     * @param {number} el The element to append the grid to.\n     */\n    self.intf.appendTo = self.appendTo;\n    self.intf.getVisibleCellByIndex = self.getVisibleCellByIndex;\n    self.intf.filters = self.filters;\n    self.intf.sorters = self.sorters;\n    self.intf.autosize = self.autosize;\n    self.intf.beginEditAt = self.beginEditAt;\n    self.intf.endEdit = self.endEdit;\n    self.intf.setActiveCell = self.setActiveCell;\n    self.intf.forEachSelectedCell = self.forEachSelectedCell;\n    self.intf.scrollIntoView = self.scrollIntoView;\n    self.intf.clearChangeLog = self.clearChangeLog;\n    self.intf.gotoCell = self.gotoCell;\n    self.intf.gotoRow = self.gotoRow;\n    self.intf.getHeaderByName = self.getHeaderByName;\n    self.intf.findColumnScrollLeft = self.findColumnScrollLeft;\n    self.intf.findRowScrollTop = self.findRowScrollTop;\n    self.intf.fitColumnToValues = self.fitColumnToValues;\n    self.intf.findColumnMaxTextLength = self.findColumnMaxTextLength;\n    self.intf.disposeContextMenu = self.disposeContextMenu;\n    self.intf.getCellAt = self.getCellAt;\n    self.intf.isCellVisible = self.isCellVisible;\n    self.intf.isRowVisible = self.isRowVisible;\n    self.intf.isColumnVisible = self.isColumnVisible;\n    self.intf.order = self.order;\n    self.intf.draw = self.draw;\n    self.intf.isComponent = self.isComponent;\n    self.intf.selectArea = self.selectArea;\n    self.intf.clipElement = self.clipElement;\n    self.intf.getSchemaFromData = self.getSchemaFromData;\n    self.intf.setFilter = self.setFilter;\n    self.intf.selectRow = self.selectRow;\n    self.intf.parentGrid = self.parentGrid;\n    self.intf.toggleTree = self.toggleTree;\n    self.intf.expandTree = self.expandTree;\n    self.intf.collapseTree = self.collapseTree;\n    self.intf.canvas = self.canvas;\n    self.intf.context = self.ctx;\n    self.intf.insertRow = self.insertRow;\n    self.intf.deleteRow = self.deleteRow;\n    self.intf.addRow = self.addRow;\n    self.intf.insertColumn = self.insertColumn;\n    self.intf.deleteColumn = self.deleteColumn;\n    self.intf.addColumn = self.addColumn;\n    self.intf.getClippingRect = self.getClippingRect;\n    self.intf.setRowHeight = self.setRowHeight;\n    self.intf.setColumnWidth = self.setColumnWidth;\n    self.intf.resetColumnWidths = self.resetColumnWidths;\n    self.intf.resetRowHeights = self.resetRowHeights;\n    self.intf.resize = self.resize;\n    self.intf.selectColumn = self.selectColumn;\n    self.intf.selectRow = self.selectRow;\n    self.intf.selectAll = self.selectAll;\n    self.intf.selectNone = self.selectNone;\n    self.intf.drawChildGrids = self.drawChildGrids;\n    self.intf.assertPxColor = self.assertPxColor;\n    self.intf.clearPxColorAssertions = self.clearPxColorAssertions;\n    self.intf.integerToAlpha = self.integerToAlpha;\n    self.intf.copy = self.copy;\n    self.intf.paste = self.paste;\n    self.intf.setStyleProperty = self.setStyleProperty;\n    Object.defineProperty(self.intf, 'defaults', {\n      get: function () {\n        return {\n          styles: self.defaults.styles.reduce(function (a, i) {\n            a[i[0]] = i[1];\n            return a;\n          }, {}),\n          attributes: self.defaults.attributes.reduce(function (a, i) {\n            a[i[0]] = i[1];\n            return a;\n          }, {}),\n        };\n      },\n    });\n    self.styleKeys = Object.keys(self.intf.defaults.styles);\n    self.styleKeys\n      .map(function (i) {\n        return self.hyphenateProperty(i, false);\n      })\n      .forEach(addStyleKeyIfNoneExists);\n    self.styleKeys\n      .map(function (i) {\n        return self.hyphenateProperty(i, true);\n      })\n      .forEach(addStyleKeyIfNoneExists);\n    self.DOMStyles = window.getComputedStyle(document.body, null);\n    self.styleKeys.concat(Object.keys(self.DOMStyles)).forEach(function (key) {\n      // unless this line is here, Object.keys() will not work on <instance>.style\n      publicStyleKeyIntf[key] = undefined;\n      Object.defineProperty(publicStyleKeyIntf, key, {\n        get: function () {\n          return self.getStyleProperty(key);\n        },\n        set: function (value) {\n          if (self.initialized) {\n            self.appliedInlineStyles[key] = value;\n          }\n          self.setStyleProperty(key, value);\n        },\n      });\n    });\n    Object.defineProperty(self.intf, 'shadowRoot', {\n      get: function () {\n        return self.shadowRoot;\n      },\n    });\n    Object.defineProperty(self.intf, 'activeCell', {\n      get: function () {\n        return self.activeCell;\n      },\n    });\n    Object.defineProperty(self.intf, 'hasFocus', {\n      get: function () {\n        return self.hasFocus;\n      },\n    });\n    Object.defineProperty(self.intf, 'style', {\n      get: function () {\n        return publicStyleKeyIntf;\n      },\n      set: function (valueObject) {\n        Object.keys(valueObject).forEach(function (key) {\n          self.setStyleProperty(key, valueObject[key], true);\n        });\n        self.draw(true);\n        self.dispatchEvent('stylechanged', {\n          name: 'style',\n          value: valueObject,\n        });\n      },\n    });\n    Object.defineProperty(self.intf, 'attributes', { value: {} });\n    Object.keys(self.attributes).forEach(function (key) {\n      Object.defineProperty(self.intf.attributes, key, {\n        get: function () {\n          return self.attributes[key];\n        },\n        set: function (value) {\n          self.attributes[key] = value;\n          if (key === 'name') {\n            self.tryLoadStoredSettings();\n          }\n          self.draw(true);\n          self.dispatchEvent('attributechanged', {\n            name: key,\n            value: value[key],\n          });\n        },\n      });\n    });\n    self.filters.string = function (value, filterFor) {\n      if (filterFor === self.attributes.blanksText) {\n        return self.blankValues.includes(\n          value == null ? value : String(value).trim(),\n        );\n      }\n\n      value = String(value);\n      var filterRegExp,\n        regEnd = /\\/(i|g|m)*$/,\n        pattern = regEnd.exec(filterFor),\n        flags = pattern ? pattern[0].substring(1) : '',\n        flagLength = flags.length;\n      self.invalidFilterRegEx = undefined;\n      if (filterFor.substring(0, 1) === '/' && pattern) {\n        try {\n          filterRegExp = new RegExp(\n            filterFor.substring(1, filterFor.length - (flagLength + 1)),\n            flags,\n          );\n        } catch (e) {\n          self.invalidFilterRegEx = e;\n          return;\n        }\n        return filterRegExp.test(value);\n      }\n      return value.toString\n        ? value\n            .toString()\n            .toLocaleUpperCase()\n            .indexOf(filterFor.toLocaleUpperCase()) !== -1\n        : false;\n    };\n    self.filters.number = function (value, filterFor) {\n      if (filterFor === self.attributes.blanksText) {\n        return self.blankValues.includes(\n          value == null ? value : String(value).trim(),\n        );\n      }\n\n      if (!filterFor) {\n        return true;\n      }\n      return value === filterFor;\n    };\n    ['formatters', 'filters', 'sorters'].forEach(self.initProp);\n    self.applyComponentStyle(false, self.intf);\n    self.reloadStoredValues();\n    if (self.args.data) {\n      self.intf.data = self.args.data;\n    }\n    if (self.intf.innerText || self.intf.textContent) {\n      if (self.intf.dataType === 'application/x-canvas-datagrid') {\n        self.intf.dataType = 'application/json+x-canvas-datagrid';\n      }\n      self.intf.data = self.intf.innerText || self.intf.textContent;\n    }\n    if (self.args.schema) {\n      self.intf.schema = self.args.schema;\n    }\n    if (self.isChildGrid || !self.isComponent) {\n      requestAnimationFrame(function () {\n        self.resize(true);\n      });\n    } else {\n      self.resize(true);\n    }\n    self.initialized = true;\n    return self;\n  };\n  /**\n   * Removes focus from the grid.\n   * @memberof canvasDatagrid\n   * @name blur\n   * @method\n   */\n  self.intf.blur = function (e) {\n    self.hasFocus = false;\n  };\n  /**\n   * Focuses on the grid.\n   * @memberof canvasDatagrid\n   * @name focus\n   * @method\n   */\n  self.intf.focus = function () {\n    self.hasFocus = true;\n    self.controlInput.focus();\n  };\n  if (self.shadowRoot || self.isChildGrid) {\n    Object.defineProperty(self.intf, 'height', {\n      get: function () {\n        if (self.shadowRoot) {\n          return self.shadowRoot.height;\n        }\n        return self.parentNode.height;\n      },\n      set: function (value) {\n        if (self.shadowRoot) {\n          self.shadowRoot.height = value;\n        } else {\n          self.parentNode.height = value;\n        }\n        self.resize(true);\n      },\n    });\n    Object.defineProperty(self.intf, 'width', {\n      get: function () {\n        if (self.shadowRoot) {\n          return self.shadowRoot.width;\n        }\n        return self.parentNode.width;\n      },\n      set: function (value) {\n        if (self.shadowRoot) {\n          self.shadowRoot.width = value;\n        } else {\n          self.parentNode.width = value;\n        }\n        self.resize(true);\n      },\n    });\n    Object.defineProperty(self.intf, 'parentNode', {\n      get: function () {\n        return self.parentNode;\n      },\n      set: function (value) {\n        if (!self.isChildGrid) {\n          throw new TypeError(\n            'Cannot set property parentNode which has only a getter',\n          );\n        }\n        self.parentNode = value;\n      },\n    });\n  }\n  Object.defineProperty(self.intf, 'visibleRowHeights', {\n    get: function () {\n      return self.visibleRowHeights;\n    },\n  });\n  Object.defineProperty(self.intf, 'openChildren', {\n    get: function () {\n      return self.openChildren;\n    },\n  });\n  Object.defineProperty(self.intf, 'childGrids', {\n    get: function () {\n      return Object.keys(self.childGrids).map(function (gridId) {\n        return self.childGrids[gridId];\n      });\n    },\n  });\n  Object.defineProperty(self.intf, 'isChildGrid', {\n    get: function () {\n      return self.isChildGrid;\n    },\n  });\n  Object.defineProperty(self, 'cursor', {\n    get: function () {\n      return self.parentNodeStyle.cursor;\n    },\n    set: function (value) {\n      if (value === 'cell') {\n        value = 'default';\n      }\n      if (self.currentCursor !== value) {\n        self.parentNodeStyle.cursor = value;\n        self.currentCursor = value;\n      }\n    },\n  });\n  Object.defineProperty(self.intf, 'orderDirection', {\n    get: function () {\n      return self.orderDirection;\n    },\n    set: function (value) {\n      if (value !== 'desc') {\n        value = 'asc';\n      }\n      self.orderDirection = value;\n      self.order(self.orderBy, self.orderDirection);\n    },\n  });\n  Object.defineProperty(self.intf, 'orderBy', {\n    get: function () {\n      return self.orderBy;\n    },\n    set: function (value) {\n      if (\n        self.getSchema().find(function (col) {\n          return col.name === value;\n        }) === undefined\n      ) {\n        throw new Error('Cannot sort by unknown column name.');\n      }\n      self.orderBy = value;\n      self.order(self.orderBy, self.orderDirection);\n    },\n  });\n  if (self.isComponent) {\n    Object.defineProperty(self.intf, 'offsetHeight', {\n      get: function () {\n        return self.canvas.offsetHeight;\n      },\n    });\n    Object.defineProperty(self.intf, 'offsetWidth', {\n      get: function () {\n        return self.canvas.offsetWidth;\n      },\n    });\n  }\n  Object.defineProperty(self.intf, 'scrollHeight', {\n    get: function () {\n      return self.scrollBox.scrollHeight;\n    },\n  });\n  Object.defineProperty(self.intf, 'scrollWidth', {\n    get: function () {\n      return self.scrollBox.scrollWidth;\n    },\n  });\n  Object.defineProperty(self.intf, 'scrollTop', {\n    get: function () {\n      return self.scrollBox.scrollTop;\n    },\n    set: function (value) {\n      self.scrollBox.scrollTop = value;\n    },\n  });\n  Object.defineProperty(self.intf, 'scrollLeft', {\n    get: function () {\n      return self.scrollBox.scrollLeft;\n    },\n    set: function (value) {\n      self.scrollBox.scrollLeft = value;\n    },\n  });\n  Object.defineProperty(self.intf, 'sizes', {\n    get: function () {\n      return self.sizes;\n    },\n  });\n  Object.defineProperty(self.intf, 'parentDOMNode', {\n    get: function () {\n      return self.parentDOMNode;\n    },\n  });\n  Object.defineProperty(self.intf, 'input', {\n    get: function () {\n      return self.input;\n    },\n  });\n  Object.defineProperty(self.intf, 'controlInput', {\n    get: function () {\n      return self.controlInput;\n    },\n  });\n  Object.defineProperty(self.intf, 'currentCell', {\n    get: function () {\n      return self.currentCell;\n    },\n  });\n  Object.defineProperty(self.intf, 'visibleCells', {\n    get: function () {\n      return self.visibleCells;\n    },\n  });\n  Object.defineProperty(self.intf, 'visibleRows', {\n    get: function () {\n      return self.visibleRows;\n    },\n  });\n  Object.defineProperty(self.intf, 'selections', {\n    get: function () {\n      return self.selections;\n    },\n  });\n  Object.defineProperty(self.intf, 'dragMode', {\n    get: function () {\n      return self.dragMode;\n    },\n  });\n  Object.defineProperty(self.intf, 'changes', {\n    get: function () {\n      return self.changes;\n    },\n  });\n  self.intf.formatters = self.formatters;\n  Object.defineProperty(self.intf, 'dataType', {\n    get: function () {\n      return self.dataType;\n    },\n    set: function (value) {\n      if (!self.parsers[value]) {\n        throw new Error('No parser for MIME type ' + value);\n      }\n      self.dataType = value;\n    },\n  });\n  self.eventNames.forEach(function (eventName) {\n    Object.defineProperty(self.intf, 'on' + eventName, {\n      get: function () {\n        return self.componentL1Events[eventName];\n      },\n      set: function (value) {\n        self.events[eventName] = [];\n        self.componentL1Events[eventName] = value;\n        if (!value) {\n          return;\n        }\n        self.addEventListener(eventName, value);\n      },\n    });\n  });\n  Object.defineProperty(self.intf, 'frozenRow', {\n    get: function () {\n      return self.frozenRow;\n    },\n    set: function (val) {\n      if (isNaN(val)) {\n        throw new TypeError('Expected value for frozenRow to be a number.');\n      }\n      if (self.visibleRows.length < val) {\n        throw new RangeError(\n          'Cannot set a value larger than the number of visible rows.',\n        );\n      }\n      self.frozenRow = val;\n    },\n  });\n  Object.defineProperty(self.intf, 'frozenColumn', {\n    get: function () {\n      return self.frozenColumn;\n    },\n    set: function (val) {\n      if (isNaN(val)) {\n        throw new TypeError('Expected value for frozenRow to be a number.');\n      }\n      if (self.getVisibleSchema().length < val) {\n        throw new RangeError(\n          'Cannot set a value larger than the number of visible columns.',\n        );\n      }\n      self.frozenColumn = val;\n    },\n  });\n  Object.defineProperty(self.intf, 'scrollIndexRect', {\n    get: function () {\n      return {\n        top: self.scrollIndexTop,\n        right: self.scrollIndexRight,\n        bottom: self.scrollIndexBottom,\n        left: self.scrollIndexLeft,\n      };\n    },\n  });\n  Object.defineProperty(self.intf, 'scrollPixelRect', {\n    get: function () {\n      return {\n        top: self.scrollPixelTop,\n        right: self.scrollPixelRight,\n        bottom: self.scrollPixelBottom,\n        left: self.scrollPixelLeft,\n      };\n    },\n  });\n  Object.defineProperty(self.intf, 'rowOrder', {\n    get: function () {\n      return self.orders.rows;\n    },\n    set: function (val) {\n      if (!Array.isArray(val)) {\n        throw new TypeError('Value must be an array.');\n      }\n      if (!self.data || val.length < self.data.length) {\n        throw new RangeError(\n          'Array length must be equal to or greater than number of rows.',\n        );\n      }\n      self.orders.rows = val;\n    },\n  });\n  Object.defineProperty(self.intf, 'columnOrder', {\n    get: function () {\n      return self.orders.columns;\n    },\n    set: function (val) {\n      if (!Array.isArray(val)) {\n        throw new TypeError('Value must be an array.');\n      }\n      if (val.length < self.getSchema().length) {\n        throw new RangeError(\n          'Array length must be equal to or greater than number of columns.',\n        );\n      }\n      self.orders.columns = val;\n    },\n  });\n  Object.defineProperty(self.intf, 'selectionBounds', {\n    get: function () {\n      return self.getSelectionBounds();\n    },\n  });\n  Object.defineProperty(self.intf, 'selectedRows', {\n    get: function () {\n      return self.getSelectedData(true);\n    },\n  });\n  Object.defineProperty(self.intf, 'selectedCells', {\n    get: function () {\n      return self.getSelectedData();\n    },\n  });\n  Object.defineProperty(self.intf, 'visibleSchema', {\n    get: function () {\n      return self.getVisibleSchema().map(function eachDataRow(col) {\n        return col;\n      });\n    },\n  });\n  Object.defineProperty(self.intf, 'treeGridAttributes', {\n    get: function () {\n      return self.treeGridAttributes;\n    },\n    set: function setTreeGridAttributes(value) {\n      self.treeGridAttributes = value;\n    },\n  });\n  Object.defineProperty(self.intf, 'cellGridAttributes', {\n    get: function () {\n      return self.cellGridAttributes;\n    },\n    set: function setCellGridAttributes(value) {\n      self.cellGridAttributes = value;\n    },\n  });\n  Object.defineProperty(self.intf, 'ctx', {\n    get: function () {\n      return self.ctx;\n    },\n  });\n  Object.defineProperty(self.intf, 'schema', {\n    get: function schemaGetter() {\n      return self.getSchema();\n    },\n    set: function schemaSetter(value) {\n      if (value === undefined) {\n        // Issue #89 - allow schema to be set to initialized state\n        self.schema = undefined;\n        self.tempSchema = undefined;\n        self.dispatchEvent('schemachanged', { schema: undefined });\n        return;\n      }\n      if (!Array.isArray(value) || typeof value[0] !== 'object') {\n        throw new Error('Schema must be an array of objects.');\n      }\n      if (value[0].name === undefined) {\n        throw new Error(\n          'Expected schema to contain an object with at least a name property.',\n        );\n      }\n      self.schema = value.map(function eachSchemaColumn(column, index) {\n        column.width = column.width || self.style.cellWidth;\n        column.filter = column.filter || self.filter(column.type);\n        column.type = column.type || 'string';\n        column.index = index;\n        column.columnIndex = index;\n        column.rowIndex = -1;\n        return column;\n      });\n      self.tempSchema = undefined;\n      self.createNewRowData();\n      self.createColumnOrders();\n      self.tryLoadStoredSettings();\n      if (\n        self.storedSettings &&\n        typeof self.storedSettings.visibility === 'object'\n      ) {\n        self.schema.forEach(function hideEachSchemaColumn(column, index) {\n          if (\n            self.storedSettings &&\n            self.storedSettings.visibility[column.name] !== undefined\n          ) {\n            column.hidden = !self.storedSettings.visibility[column.name];\n          }\n        });\n      }\n      self.resize(true);\n      self.dispatchEvent('schemachanged', { schema: self.schema });\n    },\n  });\n  /**\n   * Gets an array of currently registered MIME types.\n   * @memberof canvasDatagrid\n   * @name getDataTypes\n   * @method\n   */\n  self.intf.getTypes = function () {\n    return Object.keys(self.parsers);\n  };\n  self.parseInnerHtml = function (data) {\n    if (!data || /^ +$/.test(data)) {\n      return [];\n    }\n    try {\n      data = JSON.parse(data);\n    } catch (e) {\n      console.warn(\n        Error(\n          'Cannot parse application/json+x-canvas-datagrid formated data. ' +\n            e.message +\n            '  \\nNote: canvas-datagrid.innerHTML is for string data only.  ' +\n            'Use the canvas-datagrid.data property to set object data.',\n        ),\n      );\n    }\n    return data;\n  };\n  self.parsers['application/json+x-canvas-datagrid'] = function (\n    data,\n    callback,\n  ) {\n    self.parsers['application/x-canvas-datagrid'](\n      self.parseInnerHtml(data),\n      function (data, schema) {\n        return callback(data, schema);\n      },\n    );\n  };\n  self.parsers['application/x-canvas-datagrid'] = function (data, callback) {\n    return callback(data);\n  };\n  self.intf.parsers = self.parsers;\n  // send to dataType ETL function to extract from input data\n  // and transform into native [{}, {}] format\n  self.etl = function (data, callback) {\n    if (!self.intf.parsers[self.dataType]) {\n      throw new Error('Unsupported data type.');\n    }\n    self.intf.parsers[self.dataType](data, function (data, schema) {\n      if (Array.isArray(schema)) {\n        self.schema = schema;\n      }\n      // Issue #89 - allow schema to be auto-created every time data is set\n      if (self.attributes.autoGenerateSchema) {\n        self.schema = self.getSchemaFromData(data);\n      }\n      if (!self.schema) {\n        self.tempSchema = self.getSchemaFromData(data);\n      }\n      if (self.getSchema()) {\n        self.createColumnOrders();\n      }\n      // set the unfiltered/sorted data array\n      self.originalData = data;\n      // apply filter, sort, etc to incoming dataset\n      self.applyDataTransforms();\n      // empty data was set\n      if (!self.schema && (self.data || []).length === 0) {\n        self.tempSchema = [{ name: '' }];\n      }\n      self.fitColumnToValues('cornerCell', true);\n      if (\n        (self.tempSchema && !self.schema) ||\n        self.attributes.autoGenerateSchema\n      ) {\n        self.createColumnOrders();\n        self.dispatchEvent('schemachanged', { schema: self.tempSchema });\n      }\n      callback();\n    });\n  };\n  Object.defineProperty(self.intf, 'data', {\n    get: function dataGetter() {\n      return self.data;\n    },\n    set: function dataSetter(value) {\n      self.etl(value, function () {\n        self.changes = [];\n        self.createNewRowData();\n        if (\n          self.attributes.autoResizeColumns &&\n          self.data.length > 0 &&\n          self.storedSettings === undefined\n        ) {\n          self.autosize();\n        }\n        // set the header column to fit the numbers in it\n        self.fitColumnToValues('cornerCell', true);\n        self.createRowOrders();\n        self.tryLoadStoredSettings();\n        self.dispatchEvent('datachanged', { data: self.data });\n        self.resize(true);\n      });\n    },\n  });\n  self.initScrollBox = function () {\n    var sHeight = 0,\n      sWidth = 0,\n      scrollTop = 0,\n      scrollLeft = 0,\n      scrollHeight = 0,\n      scrollWidth = 0,\n      scrollBoxHeight = 20,\n      scrollBoxWidth = 20;\n    function setScrollTop(value, preventScrollEvent) {\n      if (isNaN(value)) {\n        throw new Error('ScrollTop value must be a number');\n      }\n      if (value < 0) {\n        value = 0;\n      }\n      if (value > scrollHeight) {\n        value = scrollHeight;\n      }\n      if (scrollHeight < 0) {\n        value = 0;\n      }\n      scrollTop = value;\n      if (!preventScrollEvent) {\n        self.scroll();\n      }\n    }\n    function setScrollLeft(value, preventScrollEvent) {\n      if (isNaN(value)) {\n        throw new Error('ScrollLeft value must be a number');\n      }\n      if (value < 0) {\n        value = 0;\n      }\n      if (value > scrollWidth) {\n        value = scrollWidth;\n      }\n      if (scrollWidth < 0) {\n        value = 0;\n      }\n      scrollLeft = value;\n      if (!preventScrollEvent) {\n        self.scroll();\n      }\n    }\n    self.scrollBox.toString = function () {\n      return (\n        '{\"width\": ' +\n        scrollWidth.toFixed(2) +\n        ', \"height\": ' +\n        scrollHeight.toFixed(2) +\n        ', \"left\": ' +\n        scrollLeft.toFixed(2) +\n        ', \"top\": ' +\n        scrollTop.toFixed(2) +\n        ', \"widthRatio\": ' +\n        self.scrollBox.widthBoxRatio.toFixed(5) +\n        ', \"heightRatio\": ' +\n        self.scrollBox.heightBoxRatio.toFixed(5) +\n        '}'\n      );\n    };\n    self.scrollBox.scrollTo = function (x, y, supressDrawEvent) {\n      setScrollLeft(x, true);\n      setScrollTop(y, supressDrawEvent);\n    };\n    Object.defineProperty(self.scrollBox, 'scrollBoxHeight', {\n      get: function () {\n        return scrollBoxHeight;\n      },\n      set: function (value) {\n        scrollBoxHeight = value;\n      },\n    });\n    Object.defineProperty(self.scrollBox, 'scrollBoxWidth', {\n      get: function () {\n        return scrollBoxWidth;\n      },\n      set: function (value) {\n        scrollBoxWidth = value;\n      },\n    });\n    Object.defineProperty(self.scrollBox, 'height', {\n      get: function () {\n        return sHeight;\n      },\n      set: function (value) {\n        sHeight = value;\n      },\n    });\n    Object.defineProperty(self.scrollBox, 'width', {\n      get: function () {\n        return sWidth;\n      },\n      set: function (value) {\n        sWidth = value;\n      },\n    });\n    Object.defineProperty(self.scrollBox, 'scrollTop', {\n      get: function () {\n        return scrollTop;\n      },\n      set: setScrollTop,\n    });\n    Object.defineProperty(self.scrollBox, 'scrollLeft', {\n      get: function () {\n        return scrollLeft;\n      },\n      set: setScrollLeft,\n    });\n    Object.defineProperty(self.scrollBox, 'scrollHeight', {\n      get: function () {\n        return scrollHeight;\n      },\n      set: function (value) {\n        if (scrollTop > value) {\n          scrollTop = Math.max(value, 0);\n        }\n        scrollHeight = value;\n      },\n    });\n    Object.defineProperty(self.scrollBox, 'scrollWidth', {\n      get: function () {\n        return scrollWidth;\n      },\n      set: function (value) {\n        if (scrollLeft > value) {\n          scrollLeft = Math.max(value, 0);\n        }\n        scrollWidth = value;\n      },\n    });\n  };\n  return;\n}\n","/*jslint browser: true, unparam: true, todo: true*/\n/*globals define: true, MutationObserver: false, requestAnimationFrame: false, performance: false, btoa: false, Event: false*/\n'use strict';\n\nexport default function (self) {\n  var zIndexTop, hoverScrollTimeout, autoCompleteContext;\n  function applyContextItemStyle(contextItemContainer) {\n    self.createInlineStyle(\n      contextItemContainer,\n      'canvas-datagrid-context-menu-item' + (self.mobile ? '-mobile' : ''),\n    );\n    contextItemContainer.addEventListener('mouseover', function () {\n      self.createInlineStyle(\n        contextItemContainer,\n        'canvas-datagrid-context-menu-item:hover',\n      );\n    });\n    contextItemContainer.addEventListener('mouseout', function () {\n      self.createInlineStyle(\n        contextItemContainer,\n        'canvas-datagrid-context-menu-item',\n      );\n    });\n  }\n  function createContextMenu(ev, pos, items, parentContextMenu) {\n    var container = document.createElement('div'),\n      upArrow = document.createElement('div'),\n      downArrow = document.createElement('div'),\n      children = [],\n      selectedIndex = -1,\n      intf = {},\n      rect;\n    if (!Array.isArray(items)) {\n      throw new Error('createContextMenu expects an array.');\n    }\n    function createItems() {\n      items.forEach(function (item) {\n        var contextItemContainer = document.createElement('div'),\n          childMenuArrow;\n        function removeChildContext(e) {\n          if (\n            e.relatedTarget === container ||\n            item.contextMenu.container === e.relatedTarget ||\n            childMenuArrow === e.relatedTarget ||\n            contextItemContainer === e.relatedTarget ||\n            item.contextMenu.container.contains(e.relatedTarget)\n          ) {\n            return;\n          }\n          item.contextMenu.dispose();\n          children.splice(children.indexOf(item.contextMenu), 1);\n          item.contextMenu = undefined;\n          contextItemContainer.removeEventListener(\n            'mouseout',\n            removeChildContext,\n          );\n          container.removeEventListener('mouseout', removeChildContext);\n          contextItemContainer.setAttribute('contextOpen', '0');\n          contextItemContainer.setAttribute('opening', '0');\n        }\n        function contextAddCallback(items) {\n          // check yet again if the user hasn't moved off\n          if (\n            contextItemContainer.getAttribute('opening') !== '1' ||\n            contextItemContainer.getAttribute('contextOpen') === '1'\n          ) {\n            return;\n          }\n          var cPos = contextItemContainer.getBoundingClientRect();\n          cPos = {\n            left:\n              cPos.left +\n              self.style.childContextMenuMarginLeft +\n              container.offsetWidth,\n            top: cPos.top + self.style.childContextMenuMarginTop,\n            bottom: cPos.bottom,\n            right: cPos.right,\n          };\n          item.contextMenu = createContextMenu(ev, cPos, items, intf);\n          contextItemContainer.setAttribute('contextOpen', '1');\n          contextItemContainer.addEventListener('mouseout', removeChildContext);\n          container.addEventListener('mouseout', removeChildContext);\n          children.push(item.contextMenu);\n        }\n        function createChildContext() {\n          var i;\n          if (contextItemContainer.getAttribute('contextOpen') === '1') {\n            return;\n          }\n          contextItemContainer.setAttribute('opening', '1');\n          if (typeof item.items === 'function') {\n            i = item.items.apply(intf, [\n              function (items) {\n                contextAddCallback(items);\n              },\n            ]);\n            if (i !== undefined && Array.isArray(i)) {\n              contextAddCallback(i);\n            }\n            return;\n          }\n          contextAddCallback(item.items);\n        }\n        function addItem(item) {\n          function addContent(content) {\n            if (content === null) {\n              return;\n            }\n            if (typeof content === 'function') {\n              return addContent(content(ev));\n            }\n            if (typeof content === 'object') {\n              contextItemContainer.appendChild(content);\n              return;\n            }\n            applyContextItemStyle(contextItemContainer);\n            contextItemContainer.innerHTML = content;\n            return;\n          }\n          addContent(item.title);\n          item.contextItemContainer = contextItemContainer;\n          if (\n            (item.items && item.items.length > 0) ||\n            typeof item.items === 'function'\n          ) {\n            childMenuArrow = document.createElement('div');\n            self.createInlineStyle(\n              childMenuArrow,\n              'canvas-datagrid-context-child-arrow',\n            );\n            childMenuArrow.innerHTML = self.style.childContextMenuArrowHTML;\n            contextItemContainer.appendChild(childMenuArrow);\n            contextItemContainer.addEventListener(\n              'mouseover',\n              createChildContext,\n            );\n            contextItemContainer.addEventListener('mouseout', function () {\n              contextItemContainer.setAttribute('opening', '0');\n            });\n          }\n          if (item.click) {\n            contextItemContainer.addEventListener('click', function (ev) {\n              item.click.apply(self, [ev]);\n            });\n          }\n        }\n        addItem(item);\n        container.appendChild(contextItemContainer);\n      });\n    }\n    function clickIndex(idx) {\n      items[idx].contextItemContainer.dispatchEvent(new Event('click'));\n    }\n    function checkArrowVisibility() {\n      if (container.scrollTop > 0) {\n        self.parentDOMNode.appendChild(upArrow);\n      } else if (upArrow.parentNode) {\n        upArrow.parentNode.removeChild(upArrow);\n      }\n      if (\n        container.scrollTop >=\n          container.scrollHeight - container.offsetHeight &&\n        downArrow.parentNode\n      ) {\n        downArrow.parentNode.removeChild(downArrow);\n      } else if (\n        container.scrollHeight - container.offsetHeight > 0 &&\n        !(\n          container.scrollTop >=\n          container.scrollHeight - container.offsetHeight\n        )\n      ) {\n        self.parentDOMNode.appendChild(downArrow);\n      }\n    }\n    function startHoverScroll(type) {\n      return function t() {\n        var a = self.attributes.contextHoverScrollAmount;\n        if (type === 'up' && container.scrollTop === 0) {\n          return;\n        }\n        if (type === 'down' && container.scrollTop === container.scrollHeight) {\n          return;\n        }\n        container.scrollTop += type === 'up' ? -a : a;\n        hoverScrollTimeout = setTimeout(\n          t,\n          self.attributes.contextHoverScrollRateMs,\n          type,\n        );\n      };\n    }\n    function endHoverScroll(type) {\n      return function () {\n        clearTimeout(hoverScrollTimeout);\n      };\n    }\n    function init() {\n      var loc = {},\n        s = self.scrollOffset(self.canvas);\n      if (zIndexTop === undefined) {\n        zIndexTop = self.style.contextMenuZIndex;\n      }\n      createItems();\n      self.createInlineStyle(\n        container,\n        'canvas-datagrid-context-menu' + (self.mobile ? '-mobile' : ''),\n      );\n      loc.x = pos.left - s.left;\n      loc.y = pos.top - s.top;\n      loc.height = 0;\n      zIndexTop += 1;\n      container.style.position = 'absolute';\n      upArrow.style.color = self.style.contextMenuArrowColor;\n      downArrow.style.color = self.style.contextMenuArrowColor;\n      [upArrow, downArrow].forEach(function (el) {\n        el.style.textAlign = 'center';\n        el.style.position = 'absolute';\n        el.style.zIndex = zIndexTop + 1;\n      });\n      container.style.zIndex = zIndexTop;\n      if (parentContextMenu && parentContextMenu.inputDropdown) {\n        container.style.maxHeight =\n          window.innerHeight -\n          loc.y -\n          self.style.autocompleteBottomMargin +\n          'px';\n        container.style.minWidth = pos.width + 'px';\n        loc.y += pos.height;\n      }\n      if (self.mobile) {\n        container.style.width = pos.width + 'px';\n      }\n      container.style.left = loc.x + 'px';\n      container.style.top = loc.y + 'px';\n      container.addEventListener('scroll', checkArrowVisibility);\n      container.addEventListener('wheel', function (e) {\n        if (self.hasFocus) {\n          container.scrollTop += e.deltaY;\n          container.scrollLeft += e.deltaX;\n        }\n        checkArrowVisibility();\n      });\n      upArrow.innerHTML = self.style.contextMenuArrowUpHTML;\n      downArrow.innerHTML = self.style.contextMenuArrowDownHTML;\n      container.appendChild(upArrow);\n      document.body.appendChild(downArrow);\n      document.body.appendChild(container);\n      rect = container.getBoundingClientRect();\n      // TODO: fix !(parentContextMenu && parentContextMenu.inputDropdown) state (autocomplete)\n      if (rect.bottom > window.innerHeight) {\n        if (!(parentContextMenu && parentContextMenu.inputDropdown)) {\n          loc.y -=\n            rect.bottom +\n            self.style.contextMenuWindowMargin -\n            window.innerHeight;\n        }\n        if (loc.y < 0) {\n          loc.y = self.style.contextMenuWindowMargin;\n        }\n        if (\n          container.offsetHeight >\n          window.innerHeight - self.style.contextMenuWindowMargin\n        ) {\n          container.style.height =\n            window.innerHeight - self.style.contextMenuWindowMargin * 2 + 'px';\n        }\n      }\n      if (rect.right > window.innerWidth) {\n        loc.x -=\n          rect.right - window.innerWidth + self.style.contextMenuWindowMargin;\n      }\n      if (loc.x < 0) {\n        loc.x = self.style.contextMenuWindowMargin;\n      }\n      if (loc.y < 0) {\n        loc.y = self.style.contextMenuWindowMargin;\n      }\n      container.style.left = loc.x + 'px';\n      container.style.top = loc.y + 'px';\n      rect = container.getBoundingClientRect();\n      upArrow.style.top = rect.top + 'px';\n      downArrow.style.top =\n        rect.top + rect.height - downArrow.offsetHeight + 'px';\n      upArrow.style.left = rect.left + 'px';\n      downArrow.style.left = rect.left + 'px';\n      downArrow.style.width = container.offsetWidth + 'px';\n      upArrow.style.width = container.offsetWidth + 'px';\n      downArrow.addEventListener('mouseover', startHoverScroll('down'));\n      downArrow.addEventListener('mouseout', endHoverScroll('down'));\n      upArrow.addEventListener('mouseover', startHoverScroll('up'));\n      upArrow.addEventListener('mouseout', endHoverScroll('up'));\n      checkArrowVisibility();\n    }\n    intf.parentGrid = self.intf;\n    intf.parentContextMenu = parentContextMenu;\n    intf.container = container;\n    init();\n    intf.clickIndex = clickIndex;\n    intf.rect = rect;\n    intf.items = items;\n    intf.upArrow = upArrow;\n    intf.downArrow = downArrow;\n    intf.dispose = function () {\n      clearTimeout(hoverScrollTimeout);\n      children.forEach(function (c) {\n        c.dispose();\n      });\n      [downArrow, upArrow, container].forEach(function (el) {\n        if (el.parentNode) {\n          el.parentNode.removeChild(el);\n        }\n      });\n    };\n    Object.defineProperty(intf, 'selectedIndex', {\n      get: function () {\n        return selectedIndex;\n      },\n      set: function (value) {\n        if (typeof value !== 'number' || isNaN(value || !isFinite(value))) {\n          throw new Error('Context menu selected index must be a sane number.');\n        }\n        selectedIndex = value;\n        if (selectedIndex > items.length - 1) {\n          selectedIndex = items.length - 1;\n        }\n        if (selectedIndex < 0) {\n          selectedIndex = 0;\n        }\n        items.forEach(function (item, index) {\n          if (index === selectedIndex) {\n            return self.createInlineStyle(\n              item.contextItemContainer,\n              'canvas-datagrid-context-menu-item:hover',\n            );\n          }\n          self.createInlineStyle(\n            item.contextItemContainer,\n            'canvas-datagrid-context-menu-item',\n          );\n        });\n      },\n    });\n    return intf;\n  }\n  function createFilterContextMenuItems(e) {\n    var filterContainer = document.createElement('div'),\n      filterLabel = document.createElement('div'),\n      filterAutoCompleteButton = document.createElement('button'),\n      filterInput = document.createElement('input'),\n      n =\n        e.cell && e.cell.header\n          ? e.cell.header.title || e.cell.header.name\n          : '',\n      iRect;\n    function checkRegExpErrorState() {\n      filterInput.style.background = self.style.contextFilterInputBackground;\n      filterInput.style.color = self.style.contextFilterInputColor;\n      if (self.invalidFilterRegEx) {\n        filterInput.style.background =\n          self.style.contextFilterInvalidRegExpBackground;\n        filterInput.style.color = self.style.contextFilterInvalidRegExpColor;\n      }\n    }\n    function fillAutoComplete() {\n      var count = 0;\n      var items = {};\n      var blanksItem = [];\n\n      self.data.forEach(function (row) {\n        var cellValue =\n          row[e.cell.header.name] == null\n            ? row[e.cell.header.name]\n            : String(row[e.cell.header.name]).trim();\n        var value = self.blankValues.includes(cellValue)\n          ? self.attributes.blanksText\n          : cellValue;\n\n        if (items[value] || count > self.attributes.maxAutoCompleteItems) {\n          return;\n        }\n        count += 1;\n        items[value] = {\n          title: self.formatters[e.cell.header.type || 'string']({\n            cell: { value: value },\n          }),\n          click: function (e) {\n            filterInput.value = value;\n            e.stopPropagation();\n            filterInput.dispatchEvent(new Event('keyup'));\n            self.disposeAutocomplete();\n            return;\n          },\n        };\n      });\n\n      if (Object.keys(items).indexOf(self.attributes.blanksText) !== -1) {\n        blanksItem.push(items[self.attributes.blanksText]);\n        delete items[self.attributes.blanksText];\n      }\n\n      return blanksItem.concat(\n        Object.keys(items).map(function (key) {\n          return items[key];\n        }),\n      );\n    }\n\n    function createAutoCompleteContext(ev) {\n      if (ev && ['ArrowDown', 'ArrowUp', 'Enter', 'Tab'].includes(ev.key)) {\n        return;\n      }\n\n      var autoCompleteItems = fillAutoComplete();\n\n      iRect = filterInput.getBoundingClientRect();\n      if (autoCompleteContext) {\n        autoCompleteContext.dispose();\n        autoCompleteContext = undefined;\n      }\n      autoCompleteContext = createContextMenu(\n        e,\n        {\n          left: iRect.left,\n          top: iRect.top,\n          right: iRect.right,\n          bottom: iRect.bottom,\n          height: iRect.height,\n          width: iRect.width,\n        },\n        autoCompleteItems,\n        { inputDropdown: true },\n      );\n      autoCompleteContext.selectedIndex = 0;\n    }\n    self.createInlineStyle(filterLabel, 'canvas-datagrid-context-menu-label');\n    self.createInlineStyle(\n      filterAutoCompleteButton,\n      'canvas-datagrid-context-menu-filter-button',\n    );\n    self.createInlineStyle(\n      filterInput,\n      'canvas-datagrid-context-menu-filter-input',\n    );\n    checkRegExpErrorState();\n    filterInput.onclick = self.disposeAutocomplete;\n    filterInput.addEventListener('keydown', function (e) {\n      if (e.key === 'ArrowDown') {\n        autoCompleteContext.selectedIndex += 1;\n      }\n\n      if (e.key === 'ArrowUp') {\n        autoCompleteContext.selectedIndex -= 1;\n      }\n\n      if (e.key === 'Enter') {\n        autoCompleteContext.clickIndex(autoCompleteContext.selectedIndex);\n        self.disposeContextMenu();\n      }\n\n      if (e.key === 'Tab') {\n        autoCompleteContext.clickIndex(autoCompleteContext.selectedIndex);\n        e.preventDefault();\n      }\n\n      if (e.key === 'Escape') {\n        self.disposeContextMenu();\n      }\n    });\n    filterInput.addEventListener('keyup', function () {\n      self.setFilter(e.cell.header.name, filterInput.value);\n    });\n    filterInput.addEventListener('keyup', createAutoCompleteContext);\n    ['focus', 'blur', 'keydown', 'keyup', 'change'].forEach(function (en) {\n      filterInput.addEventListener(en, checkRegExpErrorState);\n    });\n    filterInput.value = e.cell.header\n      ? self.columnFilters[e.cell.header.name] || ''\n      : '';\n    filterLabel.innerHTML = self.attributes.filterOptionText.replace(/%s/g, n);\n    filterAutoCompleteButton.onclick = function () {\n      if (autoCompleteContext) {\n        return self.disposeAutocomplete();\n      }\n      createAutoCompleteContext();\n    };\n    filterAutoCompleteButton.innerHTML = self.style.contextFilterButtonHTML;\n    filterContainer.addEventListener('click', function (e) {\n      return e.stopPropagation();\n    });\n    filterContainer.appendChild(filterLabel);\n    filterContainer.appendChild(filterInput);\n    filterContainer.appendChild(filterAutoCompleteButton);\n    e.items.push({\n      title: filterContainer,\n    });\n    if (Object.keys(self.columnFilters).length) {\n      Object.keys(self.columnFilters).forEach(function (cf) {\n        var h = self.getHeaderByName(cf);\n        e.items.push({\n          title: self.attributes.removeFilterOptionText.replace(\n            /%s/g,\n            h.title || h.name,\n          ),\n          click: function removeFilterClick(e) {\n            e.preventDefault();\n            self.setFilter(cf, '');\n            self.controlInput.focus();\n          },\n        });\n      });\n    }\n  }\n  function addDefaultContextMenuItem(e) {\n    var isNormalCell =\n      !(\n        e.cell.isBackground ||\n        e.cell.isColumnHeaderCellCap ||\n        e.cell.isScrollBar ||\n        e.cell.isCorner ||\n        e.cell.isRowHeader\n      ) && e.cell.header;\n    if (self.attributes.showFilter && isNormalCell) {\n      createFilterContextMenuItems(e);\n    }\n    if (\n      self.attributes.showCopy &&\n      self.selections.reduce(function (p, r) {\n        return p + r.length;\n      }, 0) > 0\n    ) {\n      e.items.push({\n        title: self.attributes.copyText,\n        click: function () {\n          document.execCommand('copy');\n          self.disposeContextMenu();\n          self.controlInput.focus();\n        },\n      });\n    }\n    if (self.attributes.showPaste && self.clipBoardData) {\n      e.items.push({\n        title: self.attributes.pasteText,\n        click: function () {\n          self.paste(self.clipBoardData, e.cell.columnIndex, e.cell.rowIndex);\n          self.draw();\n        },\n      });\n    }\n    if (self.attributes.showColumnSelector) {\n      e.items.push({\n        title: self.attributes.columnSelectorText,\n        items: function () {\n          var d = [];\n          self.getSchema().forEach(function (column) {\n            function toggleColumnVisibility(e) {\n              column.hidden = !column.hidden;\n              self.dispatchEvent('togglecolumn', {\n                column: column,\n                hidden: column.hidden,\n              });\n              e.preventDefault();\n              self.stopPropagation(e);\n              self.disposeContextMenu();\n              self.resize(true);\n              self.setStorageData();\n            }\n            var el = document.createElement('div');\n            applyContextItemStyle(el);\n            el.addEventListener('touchstart', toggleColumnVisibility);\n            el.addEventListener('click', toggleColumnVisibility);\n            el.innerHTML =\n              (column.hidden\n                ? self.attributes.columnSelectorHiddenText\n                : self.attributes.columnSelectorVisibleText) +\n              (column.title || column.name);\n            d.push({\n              title: el,\n            });\n          });\n          return d;\n        },\n      });\n      if (e.cell && e.cell.header && e.cell.columnIndex > -1) {\n        e.items.push({\n          title: self.attributes.hideColumnText.replace(\n            /%s/gi,\n            e.cell.header.title || e.cell.header.name,\n          ),\n          click: function (ev) {\n            self.getSchema()[e.cell.columnIndex].hidden = true;\n            ev.preventDefault();\n            self.stopPropagation(ev);\n            self.disposeContextMenu();\n            self.setStorageData();\n            setTimeout(function () {\n              self.resize(true);\n            }, 10);\n          },\n        });\n      }\n    }\n    if (\n      self.attributes.saveAppearance &&\n      self.attributes.showClearSettingsOption &&\n      (Object.keys(self.sizes.rows).length > 0 ||\n        Object.keys(self.sizes.columns).length > 0)\n    ) {\n      e.items.push({\n        title: self.attributes.clearSettingsOptionText,\n        click: function (e) {\n          e.preventDefault();\n          self.sizes.rows = {};\n          self.sizes.columns = {};\n          self.createRowOrders();\n          self.createColumnOrders();\n          self.storedSettings = undefined;\n          self.dispatchEvent('resizecolumn', {\n            columnWidth: self.style.cellWidth,\n          });\n          self.dispatchEvent('resizerow', {\n            cellHeight: self.style.cellHeight,\n          });\n          self.setStorageData();\n          self.resize(true);\n          self.disposeContextMenu();\n          self.controlInput.focus();\n        },\n      });\n    }\n    if (\n      self.attributes.allowSorting &&\n      self.attributes.showOrderByOption &&\n      isNormalCell\n    ) {\n      e.items.push({\n        title: self.attributes.showOrderByOptionTextAsc.replace(\n          '%s',\n          e.cell.header.title || e.cell.header.name,\n        ),\n        click: function (ev) {\n          ev.preventDefault();\n          self.order(e.cell.header.name, 'asc');\n          self.controlInput.focus();\n        },\n      });\n      e.items.push({\n        title: self.attributes.showOrderByOptionTextDesc.replace(\n          '%s',\n          e.cell.header.title || e.cell.header.name,\n        ),\n        click: function (ev) {\n          ev.preventDefault();\n          self.order(e.cell.header.name, 'desc');\n          self.disposeContextMenu();\n          self.controlInput.focus();\n        },\n      });\n    }\n  }\n  self.disposeAutocomplete = function () {\n    if (autoCompleteContext) {\n      autoCompleteContext.dispose();\n      autoCompleteContext = undefined;\n    }\n  };\n  self.disposeContextMenu = function () {\n    document.removeEventListener('click', self.disposeContextMenu);\n    zIndexTop = self.style.contextMenuZIndex;\n    self.disposeAutocomplete();\n    if (self.contextMenu) {\n      self.contextMenu.dispose();\n    }\n    self.contextMenu = undefined;\n  };\n  self.contextmenuEvent = function (e, overridePos) {\n    if (!self.hasFocus && e.target !== self.canvas) {\n      return;\n    }\n    function createDiposeEvent() {\n      requestAnimationFrame(function () {\n        document.addEventListener('click', self.disposeContextMenu);\n        document.removeEventListener('mouseup', createDiposeEvent);\n      });\n    }\n    var contextPosition,\n      items = [],\n      pos = overridePos || self.getLayerPos(e),\n      ev = {\n        NativeEvent: e,\n        cell: self.getCellAt(pos.x, pos.y),\n        items: items,\n      };\n    if (!ev.cell.isGrid) {\n      addDefaultContextMenuItem(ev);\n    }\n    if (self.dispatchEvent('contextmenu', ev)) {\n      return;\n    }\n    if (!ev.cell.isGrid) {\n      if (self.contextMenu) {\n        self.disposeContextMenu();\n      }\n      contextPosition = {\n        left:\n          pos.x +\n          pos.rect.left +\n          self.style.contextMenuMarginLeft +\n          self.canvasOffsetLeft,\n        top:\n          pos.y +\n          pos.rect.top +\n          self.style.contextMenuMarginTop +\n          self.canvasOffsetTop,\n        right: ev.cell.width + ev.cell.x + pos.rect.left,\n        bottom: ev.cell.height + ev.cell.y + pos.rect.top,\n        height: ev.cell.height,\n        width: ev.cell.width,\n      };\n      if (self.mobile) {\n        contextPosition.left = self.style.mobileContextMenuMargin + 'px';\n        contextPosition.width =\n          self.width - self.style.mobileContextMenuMargin * 2 + 'px';\n      }\n      self.contextMenu = createContextMenu(ev, contextPosition, items);\n      document.addEventListener('mouseup', createDiposeEvent);\n      e.preventDefault();\n    }\n  };\n  return;\n}\n","/*jslint browser: true, unparam: true, todo: true*/\n/*globals define: true, MutationObserver: false, requestAnimationFrame: false, performance: false, btoa: false*/\n'use strict';\n\nexport default function (self) {\n  self.getClippingRect = function (ele) {\n    var boundingRect = self.position(self.parentNode),\n      eleRect = self.position(ele),\n      s = self.scrollOffset(self.canvas),\n      clipRect = {\n        x: 0,\n        y: 0,\n        h: 0,\n        w: 0,\n      },\n      parentRect = {\n        x: -Infinity,\n        y: -Infinity,\n        h: Infinity,\n        w: Infinity,\n      },\n      columnHeaderCellHeight = self.getColumnHeaderCellHeight(),\n      rowHeaderCellWidth = self.getRowHeaderCellWidth();\n    boundingRect.top -= s.top;\n    boundingRect.left -= s.left;\n    eleRect.top -= s.top;\n    eleRect.left -= s.left;\n    clipRect.h =\n      boundingRect.top +\n      boundingRect.height -\n      ele.offsetTop -\n      self.style.scrollBarWidth;\n    clipRect.w =\n      boundingRect.left +\n      boundingRect.width -\n      ele.offsetLeft -\n      self.style.scrollBarWidth;\n    clipRect.x = boundingRect.left + eleRect.left * -1 + rowHeaderCellWidth;\n    clipRect.y = boundingRect.top + eleRect.top * -1 + columnHeaderCellHeight;\n    return {\n      x: clipRect.x > parentRect.x ? clipRect.x : parentRect.x,\n      y: clipRect.y > parentRect.y ? clipRect.y : parentRect.y,\n      h: clipRect.h < parentRect.h ? clipRect.h : parentRect.h,\n      w: clipRect.w < parentRect.w ? clipRect.w : parentRect.w,\n    };\n  };\n  self.clipElement = function (ele) {\n    var clipRect = self.getClippingRect(ele);\n    if (clipRect.w < 0) {\n      clipRect.w = 0;\n    }\n    if (clipRect.h < 0) {\n      clipRect.h = 0;\n    }\n    ele.style.clip =\n      'rect(' +\n      clipRect.y +\n      'px,' +\n      clipRect.w +\n      'px,' +\n      clipRect.h +\n      'px,' +\n      clipRect.x +\n      'px' +\n      ')';\n    // INFO https://developer.mozilla.org/en-US/docs/Web/CSS/clip\n    // clip has been \"deprecated\" for clipPath.  Of course nothing but chrome\n    // supports clip path, so we'll keep using clip until someday clipPath becomes\n    // more widely support.  The code below works correctly, but setting clipPath and clip\n    // at the same time has undesirable results.\n    // ele.style.clipPath = 'polygon('\n    //     + clipRect.x + 'px ' + clipRect.y + 'px,'\n    //     + clipRect.x + 'px ' + clipRect.h + 'px,'\n    //     + clipRect.w + 'px ' + clipRect.h + 'px,'\n    //     + clipRect.w + 'px ' + clipRect.y + 'px'\n    //     + ')';\n  };\n  self.scrollOffset = function (e) {\n    var x = 0,\n      y = 0,\n      scrollingElement = document.scrollingElement || {\n        scrollLeft: 0,\n        scrollTop: 0,\n      };\n    while (\n      e.parentNode &&\n      e.nodeName !== 'CANVAS-DATAGRID' &&\n      e !== self.intf\n    ) {\n      if (\n        e.nodeType !== 'canvas-datagrid-tree' &&\n        e.nodeType !== 'canvas-datagrid-cell'\n      ) {\n        x -= e.scrollLeft;\n        y -= e.scrollTop;\n      }\n      e = e.parentNode;\n    }\n    return {\n      left: x - scrollingElement.scrollLeft,\n      top: y - scrollingElement.scrollTop,\n    };\n  };\n  self.resizeEditInput = function () {\n    if (self.input && self.input.editCell) {\n      var pos = self.canvas.getBoundingClientRect(),\n        s = self.scrollOffset(self.intf),\n        bm = self.style.gridBorderCollapse === 'collapse' ? 1 : 2,\n        borderWidth = self.style.cellBorderWidth * bm,\n        cell = self.getVisibleCellByIndex(\n          self.input.editCell.columnIndex,\n          self.input.editCell.rowIndex,\n        ) || { x: -100, y: -100, height: 0, width: 0 };\n      if (self.mobile) {\n        self.input.style.left = '0';\n        self.input.style.top =\n          self.height -\n          self.style.mobileEditInputHeight -\n          borderWidth -\n          1 +\n          'px';\n        self.input.style.height = self.style.mobileEditInputHeight + 'px';\n        self.input.style.width = self.width - borderWidth - 1 + 'px';\n        return;\n      }\n      self.input.style.left =\n        pos.left + cell.x + self.canvasOffsetLeft - s.left + 'px';\n      self.input.style.top =\n        pos.top +\n        cell.y -\n        self.style.cellBorderWidth +\n        self.canvasOffsetTop -\n        s.top +\n        'px';\n      self.input.style.height = cell.height - borderWidth + 'px';\n      self.input.style.width = cell.width - self.style.cellPaddingLeft + 'px';\n      self.clipElement(self.input);\n    }\n  };\n  self.position = function (e, ignoreScrollOffset) {\n    var x = 0,\n      y = 0,\n      s = e,\n      h,\n      w;\n    while (e.offsetParent && e.nodeName !== 'CANVAS-DATAGRID') {\n      x += e.offsetLeft;\n      y += e.offsetTop;\n      h = e.offsetHeight;\n      w = e.offsetWidth;\n      e = e.offsetParent;\n    }\n    if (ignoreScrollOffset) {\n      return { left: x, top: y, height: h, width: w };\n    }\n    e = s;\n    s = self.scrollOffset(e);\n    return { left: x + s.left, top: y + s.top, height: h, width: w };\n  };\n  self.getLayerPos = function (e) {\n    var rect = self.canvas.getBoundingClientRect(),\n      pos = {\n        x: e.clientX - rect.left,\n        y: e.clientY - rect.top,\n      };\n    if (self.isChildGrid) {\n      pos.x -= self.canvasOffsetLeft;\n      pos.y -= self.canvasOffsetTop;\n    }\n    return {\n      x: pos.x,\n      y: pos.y,\n      rect: rect,\n    };\n  };\n  /**\n   * Ends editing, optionally aborting the edit.\n   * @memberof canvasDatagrid\n   * @name endEdit\n   * @method\n   * @param {boolean} abort When true, abort the edit.\n   */\n  self.endEdit = function (abort) {\n    var cell = self.input.editCell,\n      y = cell.rowIndex;\n    function abortEdit() {\n      abort = true;\n    }\n    if (\n      self.dispatchEvent('beforeendedit', {\n        cell: cell,\n        newValue: self.input.value,\n        oldValue: cell.value,\n        abort: abortEdit,\n        input: self.input,\n      })\n    ) {\n      return false;\n    }\n    if (self.input.value !== cell.value && !abort) {\n      self.changes[y] = self.changes[y] || {};\n      self.changes[y][cell.header.name] = self.input.value;\n      if (!cell.data) {\n        self.data[cell.rowIndex] = {};\n        cell.data = self.data[cell.rowIndex];\n      }\n      cell.data[cell.header.name] = self.input.value;\n      if (y === self.data.length) {\n        if (\n          self.dispatchEvent('newrow', {\n            value: self.input.value,\n            defaultValue: cell.value,\n            aborted: abort,\n            cell: cell,\n            input: self.input,\n          })\n        ) {\n          return false;\n        }\n        self.addRow(cell.data);\n        self.createNewRowData();\n      }\n      self.draw(true);\n    }\n    if (self.input.parentNode) {\n      self.input.parentNode.removeChild(self.input);\n    }\n    self.intf.focus();\n    self.dispatchEvent('endedit', {\n      cell: cell,\n      value: self.input.value,\n      aborted: abort,\n      input: self.input,\n    });\n    self.input = undefined;\n    return true;\n  };\n  /**\n   * Begins editing at cell x, row y.\n   * @memberof canvasDatagrid\n   * @name beginEditAt\n   * @method\n   * @param {number} x The column index of the cell to edit.\n   * @param {number} y The row index of the cell to edit.\n   * @param {boolean} inEnterMode If true, starting to type in cell will replace the\n   * cell's previous value instead of appending, and using the arrow keys will allow\n   * the user to navigate to adjacent cells instead of moving the text cursor around\n   * (default is false, and means user is in 'edit' mode).\n   */\n  self.beginEditAt = function (x, y, NativeEvent, inEnterMode = false) {\n    if (!self.attributes.editable) {\n      return;\n    }\n    if (self.input) {\n      self.endEdit();\n    }\n    var cell = self.getVisibleCellByIndex(x, y),\n      s = self.getSchema(),\n      adjacentCells,\n      enumItems,\n      enu,\n      option,\n      valueInEnum;\n    if (!(cell && cell.header)) {\n      return;\n    }\n    //HACK for IE10, does not like literal enum\n    enu = cell.header['enum'];\n    if (\n      self.dispatchEvent('beforebeginedit', {\n        cell: cell,\n        NativeEvent: NativeEvent,\n      })\n    ) {\n      return false;\n    }\n    self.scrollIntoView(x, y);\n    self.setActiveCell(x, y);\n    adjacentCells = self.getAdjacentCells();\n    if (enu) {\n      self.input = document.createElement('select');\n    } else {\n      self.input = document.createElement(\n        self.attributes.multiLine ? 'textarea' : 'input',\n      );\n    }\n    cell = self.getVisibleCellByIndex(x, y);\n    //HACK on mobile devices sometimes edit can begin without the cell being in view, I don't know how.\n    if (!cell) {\n      return;\n    }\n    if (enu) {\n      // add enums\n      if (typeof enu === 'function') {\n        enumItems = enu.apply(self.intf, [{ cell: cell }]);\n      } else if (Array.isArray(enu)) {\n        enumItems = enu;\n      }\n      enumItems.forEach(function (e) {\n        var i = document.createElement('option'),\n          val,\n          title;\n        if (Array.isArray(e)) {\n          val = e[0];\n          title = e[1];\n        } else {\n          val = e;\n          title = e;\n        }\n        if (val === cell.value) {\n          valueInEnum = true;\n        }\n        i.value = val;\n        i.innerHTML = title;\n        self.input.appendChild(i);\n      });\n      if (!valueInEnum) {\n        option = document.createElement('option');\n        option.value = cell.value;\n        option.innerHTML = cell.value;\n        self.input.appendChild(option);\n      }\n      self.input.addEventListener('change', function () {\n        self.endEdit();\n        self.draw(true);\n      });\n    }\n    // if the user has not prevented the default action, append to the body\n    if (\n      !self.dispatchEvent('appendeditinput', { cell: cell, input: self.input })\n    ) {\n      document.body.appendChild(self.input);\n    }\n    self.createInlineStyle(\n      self.input,\n      self.mobile\n        ? 'canvas-datagrid-edit-mobile-input'\n        : 'canvas-datagrid-edit-input',\n    );\n    self.input.style.position = 'absolute';\n    self.input.editCell = cell;\n    self.resizeEditInput();\n    self.input.style.zIndex = self.style.editCellZIndex;\n    self.input.style.fontSize =\n      parseInt(self.style.editCellFontSize, 10) * self.scale + 'px';\n\n    var cellValueIsEmpty = [null, undefined].indexOf(cell.value) !== -1;\n    var shouldClearCellValue = cellValueIsEmpty || inEnterMode;\n\n    self.input.value = shouldClearCellValue ? '' : cell.value;\n    self.input.focus();\n    self.input.addEventListener('click', self.stopPropagation);\n    self.input.addEventListener('dblclick', self.stopPropagation);\n    self.input.addEventListener('mouseup', self.stopPropagation);\n    self.input.addEventListener('mousedown', self.stopPropagation);\n    self.input.addEventListener('keydown', function (e) {\n      var nx = cell.columnIndex,\n        ny = cell.rowIndex;\n\n      if (e.key === 'Escape') {\n        self.endEdit(true); // end edit and abort the value change\n        self.draw(true);\n      } else if (e.key === 'Enter' && self.attributes.multiLine && e.altKey) {\n        self.input.value = self.input.value + '\\n';\n        self.input.scrollTop = self.input.scrollHeight;\n      } else if (e.key === 'Enter') {\n        self.endEdit();\n\n        // Move to cell in next or previous row\n        var nextRowIndex = e.shiftKey\n          ? Math.max(0, ny - 1)\n          : Math.min(ny + 1, self.data.length - 1);\n\n        if (nextRowIndex !== ny) {\n          self.scrollIntoView(nx, nextRowIndex);\n          self.setActiveCell(nx, nextRowIndex);\n        }\n\n        self.draw(true);\n      } else if (\n        ['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'].includes(e.key) &&\n        inEnterMode\n      ) {\n        switch (e.key) {\n          case 'ArrowUp':\n            ny = Math.max(0, ny - 1);\n            break;\n          case 'ArrowDown':\n            ny = Math.min(ny + 1, self.data.length - 1);\n            break;\n          case 'ArrowLeft':\n            nx = Math.max(nx - 1, 0);\n            break;\n          case 'ArrowRight':\n            nx = adjacentCells.right;\n            break;\n        }\n\n        self.endEdit();\n\n        self.scrollIntoView(nx, ny);\n        self.setActiveCell(nx, ny);\n\n        self.draw(true);\n      } else if (e.key === 'Tab') {\n        e.preventDefault();\n        if (!self.endEdit()) {\n          return;\n        }\n        if (e.shiftKey) {\n          nx = adjacentCells.left;\n        } else {\n          nx = adjacentCells.right;\n        }\n        if (adjacentCells.left === x && e.shiftKey) {\n          nx = adjacentCells.last;\n          ny -= 1;\n        }\n        if (adjacentCells.right === x && !e.shiftKey) {\n          nx = adjacentCells.first;\n          ny += 1;\n        }\n        if (ny < 0) {\n          ny = self.data.length - 1;\n        }\n        if (ny > self.data.length - 1) {\n          ny = 0;\n        }\n        self.scrollIntoView(nx, ny);\n        self.beginEditAt(nx, ny, e);\n      }\n    });\n\n    self.dispatchEvent('beginedit', { cell: cell, input: self.input });\n  };\n  self.createInlineStyle = function (el, className) {\n    var css = {\n      'canvas-datagrid-context-menu-filter-input': {\n        height: '19px',\n        verticalAlign: 'bottom',\n        marginLeft: '2px',\n        padding: '0',\n        background: self.style.contextFilterInputBackground,\n        color: self.style.contextFilterInputColor,\n        border: self.style.contextFilterInputBorder,\n        borderRadius: self.style.contextFilterInputBorderRadius,\n        lineHeight: 'normal',\n        fontWeight: 'normal',\n        fontFamily: self.style.contextFilterInputFontFamily,\n        fontSize: self.style.contextFilterInputFontSize,\n      },\n      'canvas-datagrid-context-menu-filter-button': {\n        height: '19px',\n        verticalAlign: 'bottom',\n        marginLeft: '2px',\n        padding: '0',\n        background: self.style.contextMenuBackground,\n        color: self.style.contextMenuColor,\n        border: self.style.contextFilterButtonBorder,\n        borderRadius: self.style.contextFilterButtonBorderRadius,\n        lineHeight: 'normal',\n        fontWeight: 'normal',\n        fontFamily: self.style.contextMenuFilterButtonFontFamily,\n        fontSize: self.style.contextMenuFilterButtonFontSize,\n      },\n      'canvas-datagrid-context-child-arrow': {\n        cssFloat: 'right',\n        color: self.style.childContextMenuArrowColor,\n        fontSize: self.style.contextMenuChildArrowFontSize,\n        fontFamily: self.style.contextMenuFontFamily,\n        verticalAlign: 'middle',\n      },\n      'canvas-datagrid-autocomplete': {\n        fontFamily: self.style.contextMenuFontFamily,\n        fontSize: self.style.contextMenuFontSize,\n        background: self.style.contextMenuBackground,\n        color: self.style.contextMenuColor,\n        border: self.style.contextMenuBorder,\n        padding: self.style.contextMenuPadding,\n        borderRadius: self.style.contextMenuBorderRadius,\n        opacity: self.style.contextMenuOpacity,\n        position: 'absolute',\n        zIndex: 9999,\n        overflow: 'hidden',\n      },\n      'canvas-datagrid-autocomplete-item': {\n        background: self.style.contextMenuBackground,\n        color: self.style.contextMenuColor,\n      },\n      'canvas-datagrid-autocomplete-item:hover': {\n        background: self.style.contextMenuHoverBackground,\n        color: self.style.contextMenuHoverColor,\n      },\n      'canvas-datagrid-canvas': {\n        position: 'absolute',\n        zIndex: '-1',\n      },\n      'canvas-datagrid': {\n        display: 'block',\n      },\n      'canvas-datagrid-control-input': {\n        position: 'fixed',\n        top: '-5px',\n        left: '-5px',\n        border: 'none',\n        opacity: '0',\n        cursor: 'pointer',\n        width: '1px',\n        height: '1px',\n        lineHeight: 'normal',\n        fontWeight: 'normal',\n        fontFamily: self.style.contextMenuFontFamily,\n        fontSize: self.style.contextMenuFontSize,\n      },\n      'canvas-datagrid-edit-mobile-input': {\n        boxSizing: 'content-box',\n        outline: 'none',\n        margin: '0',\n        padding: '0 0 0 0',\n        lineHeight: 'normal',\n        fontWeight: 'normal',\n        fontFamily: self.style.mobileEditFontFamily,\n        fontSize: self.style.mobileEditFontSize,\n        border: self.style.editCellBorder,\n        color: self.style.editCellColor,\n        background: self.style.editCellBackgroundColor,\n        appearance: 'none',\n        webkitAppearance: 'none',\n        mozAppearance: 'none',\n        borderRadius: '0',\n      },\n      'canvas-datagrid-edit-input': {\n        boxSizing: 'content-box',\n        outline: 'none',\n        margin: '0',\n        padding: '0 0 0 ' + self.style.editCellPaddingLeft + 'px',\n        lineHeight: 'normal',\n        fontWeight: 'normal',\n        fontFamily: self.style.editCellFontFamily,\n        fontSize: self.style.editCellFontSize,\n        boxShadow: self.style.editCellBoxShadow,\n        border: self.style.editCellBorder,\n        color: self.style.editCellColor,\n        background: self.style.editCellBackgroundColor,\n        appearance: 'none',\n        webkitAppearance: 'none',\n        mozAppearance: 'none',\n        borderRadius: '0',\n      },\n      'canvas-datagrid-context-menu-item-mobile': {\n        lineHeight: 'normal',\n        fontWeight: 'normal',\n        fontFamily: self.style.contextMenuFontFamily,\n        fontSize: self.style.contextMenuFontSize,\n        color: 'inherit',\n        background: 'inherit',\n        margin: self.style.contextMenuItemMargin,\n        borderRadius: self.style.contextMenuItemBorderRadius,\n        verticalAlign: 'middle',\n      },\n      'canvas-datagrid-context-menu-item': {\n        lineHeight: 'normal',\n        fontWeight: 'normal',\n        fontFamily: self.style.contextMenuFontFamily,\n        fontSize: self.style.contextMenuFontSize,\n        color: 'inherit',\n        background: 'inherit',\n        margin: self.style.contextMenuItemMargin,\n        borderRadius: self.style.contextMenuItemBorderRadius,\n        verticalAlign: 'middle',\n      },\n      'canvas-datagrid-context-menu-item:hover': {\n        background: self.style.contextMenuHoverBackground,\n        color: self.style.contextMenuHoverColor,\n      },\n      'canvas-datagrid-context-menu-label': {\n        margin: self.style.contextMenuLabelMargin,\n        display: self.style.contextMenuLabelDisplay,\n        minWidth: self.style.contextMenuLabelMinWidth,\n        maxWidth: self.style.contextMenuLabelMaxWidth,\n      },\n      'canvas-datagrid-context-menu-mobile': {\n        lineHeight: 'normal',\n        fontWeight: 'normal',\n        fontFamily: self.style.contextMenuFontFamily,\n        fontSize: self.style.contextMenuFontSize,\n        background: self.style.contextMenuBackground,\n        color: self.style.contextMenuColor,\n        border: self.style.contextMenuBorder,\n        padding: self.style.contextMenuPadding,\n        borderRadius: self.style.contextMenuBorderRadius,\n        opacity: self.style.contextMenuOpacity,\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n      },\n      'canvas-datagrid-context-menu': {\n        lineHeight: 'normal',\n        fontWeight: 'normal',\n        fontFamily: self.style.contextMenuFontFamily,\n        fontSize: self.style.contextMenuFontSize,\n        background: self.style.contextMenuBackground,\n        color: self.style.contextMenuColor,\n        border: self.style.contextMenuBorder,\n        padding: self.style.contextMenuPadding,\n        borderRadius: self.style.contextMenuBorderRadius,\n        opacity: self.style.contextMenuOpacity,\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n        cursor: self.style.contextMenuCursor,\n      },\n      'canvas-datagrid-invalid-search-regExp': {\n        background: self.style.contextMenuFilterInvalidExpresion,\n      },\n    };\n    if (css[className]) {\n      Object.keys(css[className]).map(function (prop) {\n        el.style[prop] = css[className][prop];\n      });\n    }\n    return;\n  };\n  self.appendTo = function (e) {\n    self.parentNode = e;\n    self.setDom();\n  };\n  self.setDom = function () {\n    if (self.isChildGrid) {\n      self.parentGrid = self.parentNode.parentGrid;\n      self.ctx = self.parentGrid.context;\n      self.canvas = self.parentGrid.canvas;\n      self.controlInput = self.parentGrid.controlInput;\n      self.eventParent = self.canvas;\n    } else {\n      self.controlInput = self.controlInput || document.createElement('input');\n      self.controlInput.onblur = self.intf.blur;\n      self.createInlineStyle(\n        self.controlInput,\n        'canvas-datagrid-control-input',\n      );\n      self.isChildGrid = false;\n      self.parentDOMNode = self.parentNode;\n      self.parentIsCanvas = /^canvas$/i.test(self.parentDOMNode.tagName);\n      if (self.parentIsCanvas) {\n        self.canvas = self.parentDOMNode;\n      } else {\n        self.canvas = document.createElement('canvas');\n        self.parentDOMNode.appendChild(self.canvas);\n      }\n      document.body.appendChild(self.controlInput);\n      self.createInlineStyle(self.canvas, 'canvas-datagrid');\n      self.ctx = self.canvas.getContext('2d');\n      self.ctx.textBaseline = 'alphabetic';\n      self.eventParent = self.canvas;\n    }\n    self.parentNodeStyle = self.canvas.style;\n    self.controlInput.setAttribute('readonly', true);\n    self.controlInput.addEventListener('blur', function (e) {\n      if (e.target !== self.canvas) {\n        self.hasFocus = false;\n      }\n    });\n    self.eventParent.addEventListener('scroll', self.resize, false);\n    self.eventParent.addEventListener('touchstart', self.touchstart, false);\n    self.eventParent.addEventListener('mouseup', self.mouseup, false);\n    self.eventParent.addEventListener('mousedown', self.mousedown, false);\n    self.eventParent.addEventListener('dblclick', self.dblclick, false);\n    self.eventParent.addEventListener('click', self.click, false);\n    self.eventParent.addEventListener('mousemove', self.mousemove);\n    self[self.isChildGrid ? 'parentGrid' : 'eventParent'].addEventListener(\n      'wheel',\n      self.scrollWheel,\n      false,\n    );\n    self.canvas.addEventListener('contextmenu', self.contextmenuEvent, false);\n    self.controlInput.addEventListener('copy', self.copy);\n    self.controlInput.addEventListener('cut', self.cut);\n    self.controlInput.addEventListener('paste', self.paste);\n    self.controlInput.addEventListener('keypress', self.keypress, false);\n    self.controlInput.addEventListener('keyup', self.keyup, false);\n    self.controlInput.addEventListener('keydown', self.keydown, false);\n    window.addEventListener('resize', self.resize);\n  };\n}\n","/*jslint browser: true, unparam: true, todo: true*/\n/*globals define: true, MutationObserver: false, requestAnimationFrame: false, performance: false, btoa: false*/\n'use strict';\n\nexport default function (self) {\n  /**\n   * Converts a integer into a letter A - ZZZZZ...\n   * @memberof canvasDatagrid\n   * @name integerToAlpha\n   * @method\n   * @param {column} n The number to convert.\n   */\n  self.integerToAlpha = function (n) {\n    var ordA = 'a'.charCodeAt(0),\n      ordZ = 'z'.charCodeAt(0),\n      len = ordZ - ordA + 1,\n      s = '';\n    while (n >= 0) {\n      s = String.fromCharCode((n % len) + ordA) + s;\n      n = Math.floor(n / len) - 1;\n    }\n    return s;\n  };\n  /**\n   * Inserts a new column before the specified index into the schema.\n   * @tutorial schema\n   * @memberof canvasDatagrid\n   * @name insertColumn\n   * @method\n   * @param {column} c The column to insert into the schema.\n   * @param {number} index The index of the column to insert before.\n   */\n  self.insertColumn = function (c, index) {\n    var s = self.getSchema();\n    if (s.length < index) {\n      throw new Error('Index is beyond the length of the schema.');\n    }\n    self.validateColumn(c, s);\n    s.splice(index, 0, c);\n    self.data.forEach(function (row) {\n      self.applyDefaultValue(row, c);\n    });\n    self.intf.schema = s;\n  };\n  /**\n   * Deletes a column from the schema at the specified index.\n   * @memberof canvasDatagrid\n   * @name deleteColumn\n   * @tutorial schema\n   * @method\n   * @param {number} index The index of the column to delete.\n   */\n  self.deleteColumn = function (index) {\n    var s = self.getSchema();\n    // remove data matching this column name from data\n    self.data.forEach(function (row) {\n      delete row[s[index].name];\n    });\n    s.splice(index, 1);\n    self.intf.schema = s;\n  };\n  /**\n   * Adds a new column into the schema.\n   * @tutorial schema\n   * @memberof canvasDatagrid\n   * @name addColumn\n   * @method\n   * @param {column} c The column to add to the schema.\n   */\n  self.addColumn = function (c) {\n    var s = self.getSchema();\n    self.validateColumn(c, s);\n    s.push(c);\n    self.data.forEach(function (row) {\n      self.applyDefaultValue(row, c);\n    });\n    self.intf.schema = s;\n  };\n  /**\n   * Deletes a row from the dataset at the specified index.\n   * @memberof canvasDatagrid\n   * @name deleteRow\n   * @method\n   * @param {number} index The index of the row to delete.\n   */\n  self.deleteRow = function (index) {\n    self.originalData.splice(index, 1);\n    self.setFilter();\n    self.resize(true);\n  };\n  /**\n   * Inserts a new row into the dataset before the specified index.\n   * @memberof canvasDatagrid\n   * @name insertRow\n   * @method\n   * @param {object} d data.\n   * @param {number} index The index of the row to insert before.\n   */\n  self.insertRow = function (d, index) {\n    if (self.originalData.length < index) {\n      throw new Error('Index is beyond the length of the dataset.');\n    }\n    self.originalData.splice(index, 0, d);\n    self.getSchema().forEach(function (c) {\n      if (d[c.name] === undefined) {\n        self.applyDefaultValue(self.originalData[index], c);\n      }\n    });\n    self.setFilter();\n    self.resize(true);\n  };\n  /**\n   * Adds a new row into the dataset.\n   * @memberof canvasDatagrid\n   * @name addRow\n   * @method\n   * @param {object} d data.\n   */\n  self.addRow = function (d) {\n    self.originalData.push(d);\n    self.getSchema().forEach(function (c) {\n      if (d[c.name] === undefined) {\n        self.applyDefaultValue(\n          self.originalData[self.originalData.length - 1],\n          c,\n        );\n      }\n    });\n    self.setFilter();\n    self.resize(true);\n  };\n  /**\n   * Sets the height of a given row by index number.\n   * @memberof canvasDatagrid\n   * @name setRowHeight\n   * @method\n   * @param {number} rowIndex The index of the row to set.\n   * @param {number} height Height to set the row to.\n   */\n  self.setRowHeight = function (rowIndex, height) {\n    self.sizes.rows[rowIndex] = height;\n    self.draw(true);\n  };\n  /**\n   * Sets the width of a given column by index number.\n   * @memberof canvasDatagrid\n   * @name setColumnWidth\n   * @method\n   * @param {number} colIndex The index of the column to set.\n   * @param {number} width Width to set the column to.\n   */\n  self.setColumnWidth = function (colIndex, width) {\n    self.sizes.columns[colIndex] = width;\n    self.draw(true);\n  };\n  /**\n   * Removes any changes to the width of the columns due to user or api interaction, setting them back to the schema or style default.\n   * @memberof canvasDatagrid\n   * @name resetColumnWidths\n   * @tutorial schema\n   * @method\n   */\n  self.resetColumnWidths = function () {\n    self.sizes.columns = {};\n    self.draw(true);\n  };\n  /**\n   * Removes any changes to the height of the rows due to user or api interaction, setting them back to the schema or style default.\n   * @memberof canvasDatagrid\n   * @name resetRowHeights\n   * @tutorial schema\n   * @method\n   */\n  self.resetRowHeights = function () {\n    self.sizes.rows = {};\n    self.draw(true);\n  };\n  /**\n   * Sets the value of the filter.\n   * @memberof canvasDatagrid\n   * @name setFilter\n   * @method\n   * @param {string} column Name of the column to filter.\n   * @param {string} value The value to filter for.\n   */\n  self.setFilter = function (column, value) {\n    if (column === undefined && value === undefined) {\n      self.columnFilters = {};\n    } else if (column && (value === '' || value === undefined)) {\n      delete self.columnFilters[column];\n    } else {\n      self.columnFilters[column] = value;\n    }\n    self.applyDataTransforms();\n  };\n  /**\n   * Returns the number of pixels to scroll down to line up with row rowIndex.\n   * @memberof canvasDatagrid\n   * @name findRowScrollTop\n   * @method\n   * @param {number} rowIndex The row index of the row to scroll find.\n   */\n  self.findRowScrollTop = function (rowIndex) {\n    if (self.scrollCache.y[rowIndex] === undefined) {\n      throw new RangeError('Row index out of range.');\n    }\n    return self.scrollCache.y[rowIndex];\n  };\n  /**\n   * Returns the number of pixels to scroll to the left to line up with column columnIndex.\n   * @memberof canvasDatagrid\n   * @name findColumnScrollLeft\n   * @method\n   * @param {number} columnIndex The column index of the column to find.\n   */\n  self.findColumnScrollLeft = function (columnIndex) {\n    var i = Math.max(columnIndex - 1, 0);\n    if (self.scrollCache.x[i] === undefined) {\n      throw new Error('Column index out of range.');\n    }\n    return (\n      self.scrollCache.x[i] -\n      self.getColummnWidth(self.orders.columns[columnIndex])\n    );\n  };\n  /**\n   * Scrolls to the cell at columnIndex x, and rowIndex y.  If you define both rowIndex and columnIndex additional calculations can be made to center the cell using the target cell's height and width.  Defining only one rowIndex or only columnIndex will result in simpler calculations.\n   * @memberof canvasDatagrid\n   * @name gotoCell\n   * @method\n   * @param {number} x The column index of the cell to scroll to.\n   * @param {number} y The row index of the cell to scroll to.\n   * @param {number} [offsetX=0] Percentage offset the cell should be from the left edge (not including headers).  The default is 0, meaning the cell will appear at the left edge. Valid values are 0 through 1. 1 = Left, 0 = Right, 0.5 = Center.\n   * @param {number} [offsetY=0] Percentage offset the cell should be from the top edge (not including headers).  The default is 0, meaning the cell will appear at the top edge. Valid values are 0 through 1. 1 = Bottom, 0 = Top, 0.5 = Center.\n   */\n  self.gotoCell = function (x, y, offsetX, offsetY) {\n    var targetX = x === undefined ? undefined : self.findColumnScrollLeft(x),\n      targetY = y === undefined ? undefined : self.findRowScrollTop(y),\n      cell,\n      sbw =\n        self.scrollBox.width -\n        (self.scrollBox.verticalBarVisible ? self.style.scrollBarWidth : 0),\n      sbh =\n        self.scrollBox.height -\n        (self.scrollBox.horizontalBarVisible ? self.style.scrollBarWidth : 0);\n    offsetX = offsetX === undefined ? 0 : offsetX;\n    offsetY = offsetY === undefined ? 0 : offsetY;\n    targetX -= sbw * offsetX;\n    targetY -= sbh * offsetY;\n    if (x !== undefined && y !== undefined) {\n      self.scrollBox.scrollTo(targetX, targetY);\n      requestAnimationFrame(function () {\n        cell = self.getVisibleCellByIndex(x, y);\n        // HACK: just don't offset if the target cell cannot be seen\n        // TODO: offset does not work on very small grids, not sure why\n        if (!cell) {\n          return;\n        }\n        targetX += cell.width * offsetX;\n        targetY += cell.height * offsetY;\n        self.scrollBox.scrollTo(targetX, targetY);\n      });\n    } else if (x !== undefined) {\n      self.scrollBox.scrollLeft = targetX;\n    } else if (y !== undefined) {\n      self.scrollBox.scrollTop = targetY;\n    }\n  };\n  /**\n   * Scrolls the row y.\n   * @memberof canvasDatagrid\n   * @name gotoRow\n   * @method\n   * @param {number} y The row index of the cell to scroll to.\n   */\n  self.gotoRow = function (y) {\n    self.gotoCell(0, y);\n  };\n  /**\n   * Scrolls the cell at cell x, row y into view if it is not already.\n   * @memberof canvasDatagrid\n   * @name scrollIntoView\n   * @method\n   * @param {number} x The column index of the cell to scroll into view.\n   * @param {number} y The row index of the cell to scroll into view.\n   * @param {number} [offsetX=0] Percentage offset the cell should be from the left edge (not including headers).  The default is 0, meaning the cell will appear at the left edge. Valid values are 0 through 1. 1 = Left, 0 = Right, 0.5 = Center.\n   * @param {number} [offsetY=0] Percentage offset the cell should be from the top edge (not including headers).  The default is 0, meaning the cell will appear at the top edge. Valid values are 0 through 1. 1 = Bottom, 0 = Top, 0.5 = Center.\n   */\n  self.scrollIntoView = function (x, y, offsetX, offsetY) {\n    if (\n      self.visibleCells.filter(function (cell) {\n        return (\n          (cell.rowIndex === y || y === undefined) &&\n          (cell.columnIndex === x || x === undefined) &&\n          cell.x > 0 &&\n          cell.y > 0 &&\n          cell.x + cell.width < self.width &&\n          cell.y + cell.height < self.height\n        );\n      }).length === 0\n    ) {\n      self.gotoCell(x, y, offsetX, offsetY);\n    }\n  };\n  /**\n   * Sets the active cell. Requires redrawing.\n   * @memberof canvasDatagrid\n   * @name setActiveCell\n   * @method\n   * @param {number} x The column index of the cell to set active.\n   * @param {number} y The row index of the cell to set active.\n   */\n  self.setActiveCell = function (x, y) {\n    if (x < 0) {\n      x = 0;\n    }\n    if (y < 0) {\n      y = 0;\n    }\n    self.activeCell = {\n      rowIndex: y,\n      columnIndex: x,\n    };\n  };\n  /**\n   * Removes the selection.\n   * @memberof canvasDatagrid\n   * @name selectNone\n   * @param {boolean} dontDraw Suppress the draw method after the selection change.\n   * @method\n   */\n  self.selectNone = function (dontDraw) {\n    self.selections = [];\n    self.dispatchEvent('selectionchanged', {\n      selectedData: self.getSelectedData(),\n      selections: self.selections,\n      selectionBounds: self.selectionBounds,\n    });\n    if (dontDraw) {\n      return;\n    }\n    self.draw();\n  };\n  /**\n   * Selects every visible cell.\n   * @memberof canvasDatagrid\n   * @name selectAll\n   * @param {boolean} dontDraw Suppress the draw method after the selection change.\n   * @method\n   */\n  self.selectAll = function (dontDraw) {\n    self.selectArea({\n      top: 0,\n      left: -1,\n      right: self.getSchema().length - 1,\n      bottom: self.data.length - 1,\n    });\n    if (dontDraw) {\n      return;\n    }\n    self.draw();\n  };\n  /**\n   * Returns true if the selected columnIndex is selected on every row.\n   * @memberof canvasDatagrid\n   * @name isColumnSelected\n   * @method\n   * @param {number} columnIndex The column index to check.\n   */\n  self.isColumnSelected = function (columnIndex) {\n    var colIsSelected = true;\n    self.data.forEach(function (row, rowIndex) {\n      if (\n        !self.selections[rowIndex] ||\n        self.selections[rowIndex].indexOf(self.orders.columns[columnIndex]) ===\n          -1\n      ) {\n        colIsSelected = false;\n      }\n    });\n    return colIsSelected;\n  };\n  /**\n   * Runs the defined method on each selected cell.\n   * @memberof canvasDatagrid\n   * @name forEachSelectedCell\n   * @method\n   * @param {number} fn The function to execute.  The signature of the function is: (data, rowIndex, columnName).\n   * @param {number} expandToRow When true the data in the array is expanded to the entire row.\n   */\n  self.forEachSelectedCell = function (fn, expandToRow) {\n    var d = [],\n      s = expandToRow ? self.getSchema() : self.getVisibleSchema(),\n      l = self.data.length;\n    self.selections.forEach(function (row, index) {\n      if (index === l) {\n        return;\n      }\n      if (row.length === 0) {\n        d[index] = null;\n        return;\n      }\n      d[index] = {};\n      row.forEach(function (col) {\n        if (col === -1 || !s[col]) {\n          return;\n        }\n        fn(self.data, index, s[col].name);\n      });\n    });\n  };\n  /**\n   * Selects a column.\n   * @memberof canvasDatagrid\n   * @name selectColumn\n   * @method\n   * @param {number} columnIndex The column index to select.\n   * @param {boolean} toggleSelectMode When true, behaves as if you were holding control/command when you clicked the column.\n   * @param {boolean} shift When true, behaves as if you were holding shift when you clicked the column.\n   * @param {boolean} supressSelectionchangedEvent When true, prevents the selectionchanged event from firing.\n   */\n  self.selectColumn = function (columnIndex, ctrl, shift, supressEvent) {\n    var s, e, x;\n    function addCol(i) {\n      self.data.forEach(function (row, rowIndex) {\n        self.selections[rowIndex] = self.selections[rowIndex] || [];\n        if (self.selections[rowIndex].indexOf(i) === -1) {\n          self.selections[rowIndex].push(i);\n        }\n      });\n    }\n    function removeCol(i) {\n      self.data.forEach(function (row, rowIndex) {\n        self.selections[rowIndex] = self.selections[rowIndex] || [];\n        if (self.selections[rowIndex].indexOf(i) !== -1) {\n          self.selections[rowIndex].splice(\n            self.selections[rowIndex].indexOf(i),\n            1,\n          );\n        }\n      });\n    }\n    if (shift) {\n      if (!self.activeCell) {\n        return;\n      }\n      s = Math.min(self.activeCell.columnIndex, columnIndex);\n      e = Math.max(self.activeCell.columnIndex, columnIndex);\n      for (x = s; e > x; x += 1) {\n        addCol(x);\n      }\n    }\n    if (!ctrl && !shift) {\n      self.selections = [];\n      self.activeCell.columnIndex = columnIndex;\n      self.activeCell.rowIndex = self.scrollIndexTop;\n    }\n    if (ctrl && self.isColumnSelected(columnIndex)) {\n      removeCol(columnIndex);\n    } else {\n      addCol(columnIndex);\n    }\n    if (supressEvent) {\n      return;\n    }\n    self.dispatchEvent('selectionchanged', {\n      selectedData: self.getSelectedData(),\n      selections: self.selections,\n      selectionBounds: self.getSelectionBounds(),\n    });\n  };\n  /**\n   * Selects a row.\n   * @memberof canvasDatagrid\n   * @name selectRow\n   * @method\n   * @param {number} rowIndex The row index to select.\n   * @param {boolean} ctrl When true, behaves as if you were holding control/command when you clicked the row.\n   * @param {boolean} shift When true, behaves as if you were holding shift when you clicked the row.\n   * @param {boolean} supressSelectionchangedEvent When true, prevents the selectionchanged event from firing.\n   */\n  self.selectRow = function (rowIndex, ctrl, shift, supressEvent) {\n    var x,\n      st,\n      en,\n      s = self.getVisibleSchema();\n    function de() {\n      if (supressEvent) {\n        return;\n      }\n      self.dispatchEvent('selectionchanged', {\n        selectedData: self.getSelectedData(),\n        selections: self.selections,\n        selectionBounds: self.selectionBounds,\n      });\n    }\n    function addRow(ri) {\n      self.selections[ri] = [];\n      self.selections[ri].push(-1);\n      s.forEach(function (col, index) {\n        self.selections[ri].push(self.orders.columns.indexOf(col.index));\n      });\n    }\n    if (self.dragAddToSelection === false || self.dragObject === undefined) {\n      if (\n        self.selections[rowIndex] &&\n        self.selections[rowIndex].length - 1 === s.length\n      ) {\n        if (ctrl) {\n          self.selections[rowIndex] = [];\n          de();\n          return;\n        }\n      }\n    }\n    if (self.dragAddToSelection === true || self.dragObject === undefined) {\n      if (shift && self.dragObject === undefined) {\n        if (!self.activeCell) {\n          return;\n        }\n        st = Math.min(self.activeCell.rowIndex, rowIndex);\n        en = Math.max(self.activeCell.rowIndex, rowIndex);\n        for (x = st; en >= x; x += 1) {\n          addRow(x);\n        }\n      } else {\n        addRow(rowIndex);\n      }\n    }\n    de();\n  };\n  /**\n   * Collapse a tree grid by row index.\n   * @memberof canvasDatagrid\n   * @name collapseTree\n   * @method\n   * @param {number} index The index of the row to collapse.\n   */\n  self.collapseTree = function (rowIndex) {\n    self.dispatchEvent('collapsetree', {\n      childGrid: self.childGrids[rowIndex],\n      data: self.data[rowIndex],\n      rowIndex: rowIndex,\n    });\n    self.openChildren[rowIndex].blur();\n    self.openChildren[rowIndex].dispose();\n    delete self.openChildren[rowIndex];\n    delete self.sizes.trees[rowIndex];\n    delete self.childGrids[rowIndex];\n    self.dispatchEvent('resizerow', {\n      cellHeight: self.style.cellHeight,\n    });\n    self.resize(true);\n    self.draw(true);\n  };\n  /**\n   * Expands a tree grid by row index.\n   * @memberof canvasDatagrid\n   * @name expandTree\n   * @method\n   * @param {number} index The index of the row to expand.\n   */\n  self.expandTree = function (rowIndex) {\n    var trArgs = self.args.treeGridAttributes || {},\n      columnHeaderCellHeight = self.getColumnHeaderCellHeight(),\n      rowHeaderCellWidth =\n        self.sizes.columns.cornerCell || self.style.rowHeaderCellWidth,\n      h = self.sizes.trees[rowIndex] || self.style.treeGridHeight,\n      treeGrid;\n    if (!self.childGrids[rowIndex]) {\n      trArgs.debug = self.attributes.debug;\n      trArgs.name = self.attributes.saveAppearance\n        ? self.attributes.name + 'tree' + rowIndex\n        : undefined;\n      trArgs.style = trArgs.style || self.style;\n      trArgs.parentNode = {\n        parentGrid: self.intf,\n        nodeType: 'canvas-datagrid-tree',\n        offsetHeight: h,\n        offsetWidth: self.width - rowHeaderCellWidth,\n        header: { width: self.width - rowHeaderCellWidth },\n        offsetLeft: rowHeaderCellWidth,\n        offsetTop: columnHeaderCellHeight,\n        offsetParent: self.intf.parentNode,\n        parentNode: self.intf.parentNode,\n        style: 'tree',\n        data: self.data[rowIndex],\n      };\n      treeGrid = self.createGrid(trArgs);\n      self.childGrids[rowIndex] = treeGrid;\n    }\n    treeGrid = self.childGrids[rowIndex];\n    treeGrid.visible = true;\n    self.dispatchEvent('expandtree', {\n      treeGrid: treeGrid,\n      data: self.data[rowIndex],\n      rowIndex: rowIndex,\n    });\n    self.openChildren[rowIndex] = treeGrid;\n    self.sizes.trees[rowIndex] = h;\n    self.dispatchEvent('resizerow', { height: self.style.cellHeight });\n    self.resize(true);\n  };\n  /**\n   * Toggles tree grid open and close by row index.\n   * @memberof canvasDatagrid\n   * @name toggleTree\n   * @method\n   * @param {number} index The index of the row to toggle.\n   */\n  self.toggleTree = function (rowIndex) {\n    var i = self.openChildren[rowIndex];\n    if (i) {\n      return self.collapseTree(rowIndex);\n    }\n    self.expandTree(rowIndex);\n  };\n  /**\n   * Returns a header from the schema by name.\n   * @memberof canvasDatagrid\n   * @name getHeaderByName\n   * @tutorial schema\n   * @method\n   * @returns {header} header with the selected name, or undefined.\n   * @param {string} name The name of the column to resize.\n   */\n  self.getHeaderByName = function (name) {\n    var x,\n      i = self.getSchema();\n    for (x = 0; x < i.length; x += 1) {\n      if (i[x].name === name) {\n        return i[x];\n      }\n    }\n  };\n  /**\n   * Resizes a column to fit the longest value in the column. Call without a value to resize all columns.\n   * Warning, can be slow on very large record sets (1m records ~3-5 seconds on an i7).\n   * @memberof canvasDatagrid\n   * @name fitColumnToValues\n   * @method\n   * @param {string} name The name of the column to resize.\n   */\n  self.fitColumnToValues = function (name, internal) {\n    if (!self.canvas) {\n      return;\n    }\n    self.sizes.columns[\n      name === 'cornerCell' ? -1 : self.getHeaderByName(name).index\n    ] = Math.max(self.findColumnMaxTextLength(name), self.style.minColumnWidth);\n    if (!internal) {\n      self.resize();\n      self.draw(true);\n    }\n  };\n  /**\n   * Checks if a cell is currently visible.\n   * @memberof canvasDatagrid\n   * @name isCellVisible\n   * @overload\n   * @method\n   * @returns {boolean} when true, the cell is visible, when false the cell is not currently drawn.\n   * @param {number} columnIndex The column index of the cell to check.\n   * @param {number} rowIndex The row index of the cell to check.\n   */\n  self.isCellVisible = function (cell, rowIndex) {\n    // overload\n    if (rowIndex !== undefined) {\n      return (\n        self.visibleCells.filter(function (c) {\n          return c.columnIndex === cell && c.rowIndex === rowIndex;\n        }).length > 0\n      );\n    }\n    var x,\n      l = self.visibleCells.length;\n    for (x = 0; x < l; x += 1) {\n      if (\n        cell.x === self.visibleCells[x].x &&\n        cell.y === self.visibleCells[x].y\n      ) {\n        return true;\n      }\n    }\n    return false;\n  };\n  /**\n   * Sets the order of the data.\n   * @memberof canvasDatagrid\n   * @name order\n   * @method\n   * @param {number} columnName Name of the column to be sorted.\n   * @param {string} direction `asc` for ascending or `desc` for descending.\n   * @param {function} [sortFunction] When defined, override the default sorting method defined in the column's schema and use this one.\n   * @param {bool} [dontSetStorageData] Don't store this setting for future use.\n   */\n  self.order = function (\n    columnName,\n    direction,\n    sortFunction,\n    dontSetStorageData,\n  ) {\n    var f,\n      c = self.getSchema().filter(function (col) {\n        return col.name === columnName;\n      });\n    if (\n      self.dispatchEvent('beforesortcolumn', {\n        name: columnName,\n        direction: direction,\n      })\n    ) {\n      return;\n    }\n    self.orderBy = columnName;\n    self.orderDirection = direction;\n    if (!self.data || self.data.length === 0) {\n      return;\n    }\n    if (c.length === 0) {\n      throw new Error('Cannot sort.  No such column name');\n    }\n    f = sortFunction || c[0].sorter || self.sorters[c[0].type];\n    if (!f && c[0].type !== undefined) {\n      console.warn(\n        'Cannot sort type \"%s\" falling back to string sort.',\n        c[0].type,\n      );\n    }\n    self.orderings.add(\n      columnName,\n      direction,\n      typeof f === 'function' ? f : self.sorters.string,\n    );\n    self.orderings.sort();\n    self.dispatchEvent('sortcolumn', {\n      name: columnName,\n      direction: direction,\n    });\n    self.draw(true);\n    if (dontSetStorageData) {\n      return;\n    }\n    self.setStorageData();\n  };\n  self.isInGrid = function (e) {\n    if (e.x < 0 || e.x > self.width || e.y < 0 || e.y > self.height) {\n      return false;\n    }\n    return true;\n  };\n  /**\n   * Moves the current selection relative to the its current position.  Note: this method does not move the selected data, just the selection itself.\n   * @memberof canvasDatagrid\n   * @name moveSelection\n   * @method\n   * @param {number} offsetX The number of columns to offset the selection.\n   * @param {number} offsetY The number of rows to offset the selection.\n   */\n  self.moveSelection = function (offsetX, offsetY) {\n    var sel = [];\n    self.selections.forEach(function (row, rowIndex) {\n      sel[rowIndex + offsetY] = [];\n      row.forEach(function (colIndex) {\n        sel[rowIndex + offsetY].push(colIndex + offsetX);\n      });\n    });\n    self.selections = sel;\n  };\n  /**\n   * Moves data in the provided selection to another position in the grid.  Moving data off the edge of the schema (columns/x) will truncate data.\n   * @memberof canvasDatagrid\n   * @name moveTo\n   * @method\n   * @param {array} sel 2D array representing selected rows and columns.  `canvasDatagrid.selections` is in this format and can be used here.\n   * @param {number} x The column index to start inserting the selection at.\n   * @param {number} y The row index to start inserting the selection at.\n   */\n  self.moveTo = function (sel, x, y) {\n    var d = self.getSelectedData(),\n      s = self.getVisibleSchema(),\n      l = sel.length,\n      xi,\n      maxRowLength = -Infinity,\n      minXi = Infinity,\n      yi = y - 1;\n    sel.forEach(function (row, index) {\n      if (index === l) {\n        return;\n      }\n      if (row.length === 0) {\n        return;\n      }\n      minXi = Math.min(self.getVisibleColumnIndexOf(x), minXi);\n      maxRowLength = Math.max(maxRowLength, row.length);\n      row.forEach(function (colIndex) {\n        // intentional redef of colIndex\n        colIndex = self.getVisibleColumnIndexOf(colIndex);\n        if (!s[colIndex]) {\n          return;\n        }\n        if (!self.data[index]) {\n          self.data[index] = {};\n        }\n        self.data[index][s[colIndex].name] = null;\n      });\n    });\n    sel.forEach(function (row, index) {\n      var lastSourceIndex;\n      yi += 1;\n      xi = self.getVisibleColumnIndexOf(x);\n      row.forEach(function (colIndex, cidx) {\n        colIndex = self.getVisibleColumnIndexOf(colIndex);\n        if (cidx > 0) {\n          // this confusing bit of nonsense figures out\n          // if the selection has skipped cells\n          xi += colIndex - lastSourceIndex;\n        }\n        lastSourceIndex = colIndex;\n        if (\n          colIndex === -1 ||\n          !s[xi] ||\n          !s[colIndex] ||\n          self.data.length - 1 < yi ||\n          yi < 0\n        ) {\n          return;\n        }\n        if (!self.data[yi]) {\n          self.data[yi] = {};\n        }\n        self.data[yi][s[xi].name] = d[index][s[colIndex].name];\n      });\n    });\n  };\n  /**\n   * Checks if a given column is visible.\n   * @memberof canvasDatagrid\n   * @name isColumnVisible\n   * @method\n   * @returns {boolean} When true, the column is visible.\n   * @param {number} columnIndex Column index.\n   */\n  self.isColumnVisible = function (columnIndex) {\n    return (\n      self.visibleCells.filter(function (c) {\n        return c.columnIndex === columnIndex;\n      }).length > 0\n    );\n  };\n  /**\n   * Checks if a given row is visible.\n   * @memberof canvasDatagrid\n   * @name isRowVisible\n   * @method\n   * @returns {boolean} When true, the row is visible.\n   * @param {number} rowIndex Row index.\n   */\n  self.isRowVisible = function (rowIndex) {\n    return (\n      self.visibleCells.filter(function (c) {\n        return c.rowIndex === rowIndex;\n      }).length > 0\n    );\n  };\n  /**\n   * Gets the cell at columnIndex and rowIndex.\n   * @memberof canvasDatagrid\n   * @name getVisibleCellByIndex\n   * @method\n   * @returns {cell} cell at the selected location.\n   * @param {number} x Column index.\n   * @param {number} y Row index.\n   */\n  self.getVisibleCellByIndex = function (x, y) {\n    return self.visibleCells.filter(function (c) {\n      return c.columnIndex === x && c.rowIndex === y;\n    })[0];\n  };\n  /**\n   * Gets the cell at grid pixel coordinate x and y.  Author's note.  This function ties drawing and events together.  This is a very complex function and is core to the component.\n   * @memberof canvasDatagrid\n   * @name getCellAt\n   * @method\n   * @returns {cell} cell at the selected location.\n   * @param {number} x Number of pixels from the left.\n   * @param {number} y Number of pixels from the top.\n   */\n  self.getCellAt = function (x, y, useTouchScrollZones) {\n    function getBorder(entitiy) {\n      if (\n        entitiy.x + entitiy.width - self.attributes.borderResizeZone * 0.4 <\n          x &&\n        entitiy.x + entitiy.width + self.attributes.borderResizeZone * 0.6 > x\n      ) {\n        return 'r';\n      }\n      if (\n        entitiy.x - self.attributes.borderResizeZone * 0.4 < x &&\n        entitiy.x + self.attributes.borderResizeZone * 0.6 > x\n      ) {\n        return 'l';\n      }\n      if (\n        entitiy.y + entitiy.height - self.attributes.borderResizeZone * 0.4 <\n          y &&\n        entitiy.y + entitiy.height + self.attributes.borderResizeZone * 0.6 > y\n      ) {\n        return 'b';\n      }\n      if (\n        entitiy.y - self.attributes.borderResizeZone * 0.4 < y &&\n        entitiy.y + self.attributes.borderResizeZone * 0.6 > y\n      ) {\n        return 't';\n      }\n    }\n    if (!self.visibleCells) {\n      return;\n    }\n    var border,\n      tsz = useTouchScrollZones ? self.attributes.touchScrollZone : 0,\n      moveMode = self.attributes.borderDragBehavior === 'move',\n      i,\n      l = self.visibleCells.length,\n      moveBorder,\n      xBorderBehavior = moveMode ? self.cursorGrab : 'ew-resize',\n      yBorderBehavior = moveMode ? self.cursorGrab : 'ns-resize',\n      cell,\n      entitiy;\n    if (!self.visibleCells || !self.visibleCells.length) {\n      return;\n    }\n    self.hasFocus = true;\n    if (!(y < self.height && y > 0 && x < self.width && x > 0)) {\n      self.hasFocus = false;\n      return {\n        dragContext: 'inherit',\n        context: 'inherit',\n      };\n    }\n    for (i = 0; i < l; i += 1) {\n      cell = self.visibleCells[i];\n      // interactive dimensions of the cell.  used for touch \"over size\" zones\n      entitiy = {\n        x: cell.x,\n        y: cell.y,\n        height: cell.height,\n        width: cell.width,\n      };\n      if (\n        useTouchScrollZones &&\n        /(vertical|horizontal)-scroll-/.test(cell.style)\n      ) {\n        entitiy.x -= tsz;\n        entitiy.y -= tsz;\n        entitiy.height += tsz;\n        entitiy.width += tsz;\n      }\n      if (\n        entitiy.x - self.style.cellBorderWidth < x &&\n        entitiy.x + entitiy.width + self.style.cellBorderWidth > x &&\n        entitiy.y - self.style.cellBorderWidth < y &&\n        entitiy.y + entitiy.height + self.style.cellBorderWidth > y\n      ) {\n        if (/frozen-row-marker/.test(cell.style)) {\n          cell.dragContext = cell.style;\n          cell.context = 'row-resize';\n          return cell;\n        }\n        if (/frozen-column-marker/.test(cell.style)) {\n          cell.dragContext = cell.style;\n          cell.context = 'col-resize';\n          return cell;\n        }\n        if (/selection-handle-/.test(cell.style)) {\n          cell.dragContext = cell.style;\n          cell.context = 'crosshair';\n          return cell;\n        }\n        if (/vertical-scroll-(bar|box)/.test(cell.style)) {\n          cell.dragContext = 'vertical-scroll-box';\n          cell.context = 'vertical-scroll-box';\n          cell.isScrollBar = true;\n          cell.isVerticalScrollBar = true;\n          if (y > self.scrollBox.box.v.y + self.scrollBox.scrollBoxHeight) {\n            cell.dragContext = 'vertical-scroll-bottom';\n            cell.context = 'vertical-scroll-bottom';\n          } else if (y < self.scrollBox.box.v.y) {\n            cell.dragContext = 'vertical-scroll-top';\n            cell.context = 'vertical-scroll-top';\n          }\n          self.cursor = 'default';\n          return cell;\n        }\n        if (/horizontal-scroll-(bar|box)/.test(cell.style)) {\n          cell.dragContext = 'horizontal-scroll-box';\n          cell.context = 'horizontal-scroll-box';\n          cell.isScrollBar = true;\n          cell.isHorizontalScrollBar = true;\n          if (x > self.scrollBox.box.h.x + self.scrollBox.scrollBoxWidth) {\n            cell.dragContext = 'horizontal-scroll-right';\n            cell.context = 'horizontal-scroll-right';\n          } else if (x < self.scrollBox.box.h.x) {\n            cell.dragContext = 'horizontal-scroll-left';\n            cell.context = 'horizontal-scroll-left';\n          }\n          self.cursor = 'default';\n          return cell;\n        }\n        border = getBorder(entitiy);\n        // check if the border of this cell is the border of the selection and if so show move cursor in move mode\n        moveBorder =\n          moveMode &&\n          cell.selectionBorder &&\n          cell.selectionBorder.indexOf(border) !== -1;\n        if (\n          ['l', 'r'].indexOf(border) !== -1 &&\n          (self.attributes.allowColumnResize || moveBorder) &&\n          ((self.attributes.allowColumnResizeFromCell && cell.isNormal) ||\n            !cell.isNormal ||\n            moveBorder) &&\n          ((self.attributes.allowRowHeaderResize &&\n            (cell.isRowHeader || cell.isCorner)) ||\n            !(cell.isRowHeader && cell.isCorner))\n        ) {\n          if (\n            (cell.isColumnHeader ||\n              cell.isCorner ||\n              (self.attributes.allowColumnResizeFromCell && cell.isNormal)) &&\n            border === 'r'\n          ) {\n            cell.context = 'ew-resize';\n            cell.dragContext = 'ew-resize';\n            return cell;\n          }\n          if (!(cell.isColumnHeader || cell.isCorner) && moveBorder) {\n            cell.context = xBorderBehavior;\n            cell.dragContext = border + '-move';\n            return cell;\n          }\n        }\n        if (\n          ['t', 'b'].indexOf(border) !== -1 &&\n          cell.rowIndex > -1 &&\n          (self.attributes.allowRowResize || moveBorder) &&\n          ((self.attributes.allowRowResizeFromCell && cell.isNormal) ||\n            !cell.isNormal ||\n            moveBorder) &&\n          !cell.isColumnHeader\n        ) {\n          if (\n            (cell.isRowHeader ||\n              cell.isCorner ||\n              (self.attributes.allowRowResizeFromCell && cell.isNormal)) &&\n            border === 'b'\n          ) {\n            cell.context = 'ns-resize';\n            cell.dragContext = 'ns-resize';\n            return cell;\n          }\n          if (!(cell.isRowHeader || cell.isCorner) && moveBorder) {\n            cell.context = yBorderBehavior;\n            cell.dragContext = border + '-move';\n            return cell;\n          }\n        }\n        if (cell.style === 'columnHeaderCell') {\n          cell.context = 'cell';\n          cell.dragContext = 'column-reorder';\n          return cell;\n        }\n        if (cell.style === 'rowHeaderCell') {\n          if (\n            self.attributes.rowGrabZoneSize +\n              (cell.y - self.style.cellBorderWidth) <\n              y ||\n            !self.attributes.allowRowReordering\n          ) {\n            cell.dragContext = 'cell';\n            cell.context = 'cell';\n          } else {\n            cell.context = self.cursorGrab;\n            cell.dragContext = 'row-reorder';\n          }\n          return cell;\n        }\n        if (cell.isGrid) {\n          self.hasFocus = false;\n          cell.dragContext = 'cell-grid';\n          cell.context = 'cell-grid';\n          return cell;\n        }\n        if (cell.style === 'tree-grid') {\n          self.hasFocus = false;\n          cell.dragContext = 'tree';\n          cell.context = 'tree';\n          return cell;\n        }\n        cell.dragContext = 'cell';\n        cell.context = 'cell';\n        return cell;\n      }\n    }\n    self.hasFocus = true;\n    self.cursor = 'default';\n    return {\n      dragContext: 'background',\n      context: 'background',\n      style: 'background',\n      isBackground: true,\n    };\n  };\n  /**\n   * Gets the bounds of current selection.\n   * @returns {rect} selection.\n   * @memberof canvasDatagrid\n   * @name getSelectionBounds\n   * @method\n   */\n  self.getSelectionBounds = function () {\n    var low = { x: Infinity, y: Infinity },\n      high = { x: -Infinity, y: -Infinity };\n    self.selections.forEach(function (row, rowIndex) {\n      var maxCol, minCol;\n      low.y = rowIndex < low.y ? rowIndex : low.y;\n      high.y = rowIndex > high.y ? rowIndex : high.y;\n      maxCol = Math.max.apply(null, row);\n      minCol = Math.min.apply(null, row);\n      low.x = minCol < low.x ? minCol : low.x;\n      high.x = maxCol > high.x ? maxCol : high.x;\n    });\n    return {\n      top: low.y,\n      left: low.x,\n      bottom: high.y,\n      right: high.x,\n    };\n  };\n  /**\n   * Returns an auto generated schema based on data structure.\n   * @memberof canvasDatagrid\n   * @name getSchemaFromData\n   * @method\n   * @tutorial schema\n   * @returns {schema} schema A schema based on the first item in the data array.\n   */\n  self.getSchemaFromData = function (d) {\n    d = d || self.data;\n    return Object.keys(d[0] || { ' ': '' }).map(function mapEachSchemaColumn(\n      key,\n      index,\n    ) {\n      var type = self.getBestGuessDataType(key, d),\n        i = {\n          name: key,\n          title: isNaN(parseInt(key, 10))\n            ? key\n            : self.integerToAlpha(key).toUpperCase(),\n          index: index,\n          columnIndex: index,\n          type: type,\n          filter: self.filter(type),\n        };\n      if (\n        self.storedSettings &&\n        self.storedSettings.visibility &&\n        self.storedSettings.visibility[i.name] !== undefined\n      ) {\n        i.hidden = !self.storedSettings.visibility[i.name];\n      }\n      return i;\n    });\n  };\n  /**\n   * Clears the change log grid.changes that keeps track of changes to the data set.\n   * This does not undo changes or alter data it is simply a convince array to keep\n   * track of changes made to the data since last this method was called.\n   * @memberof canvasDatagrid\n   * @name clearChangeLog\n   * @method\n   */\n  self.clearChangeLog = function () {\n    self.changes = [];\n  };\n  /**\n   * Selects an area of the grid.\n   * @memberof canvasDatagrid\n   * @name selectArea\n   * @method\n   * @param {rect} bounds A rect object representing the selected values.\n   */\n  self.selectArea = function (bounds, ctrl) {\n    self.selectionBounds = bounds || self.selectionBounds;\n    var ev,\n      x,\n      y,\n      s = self.getSchema();\n    if (!ctrl) {\n      self.selections = [];\n    }\n    if (\n      self.selectionBounds.top < -1 ||\n      self.selectionBounds.bottom > self.data.length ||\n      self.selectionBounds.left < -1 ||\n      self.selectionBounds.right > s.length\n    ) {\n      throw new Error('Impossible selection area');\n    }\n    for (\n      x = self.selectionBounds.top;\n      x <= self.selectionBounds.bottom;\n      x += 1\n    ) {\n      self.selections[x] = [];\n      for (\n        y = self.selectionBounds.left;\n        y <= self.selectionBounds.right;\n        y += 1\n      ) {\n        if (self.selections[x].indexOf(y) === -1) {\n          self.selections[x].push(y);\n        }\n      }\n    }\n    ev = {\n      selections: self.selections,\n      selectionBounds: self.selectionBounds,\n    };\n    Object.defineProperty(ev, 'selectedData', {\n      get: function () {\n        return self.getSelectedData();\n      },\n    });\n    self.dispatchEvent('selectionchanged', ev);\n  };\n  /**\n   * Returns the maximum text width for a given column by column name.\n   * @memberof canvasDatagrid\n   * @name findColumnMaxTextLength\n   * @method\n   * @returns {number} The number of pixels wide the maximum width value in the selected column.\n   * @param {string} name The name of the column to calculate the value's width of.\n   */\n  self.findColumnMaxTextLength = function (name) {\n    var m = -Infinity;\n    if (name === 'cornerCell') {\n      self.ctx.font = self.style.rowHeaderCellFont;\n      return (\n        self.ctx.measureText(\n          (self.data.length + (self.attributes.showNewRow ? 1 : 0)).toString(),\n        ).width +\n        self.style.autosizePadding +\n        self.style.autosizeHeaderCellPadding +\n        self.style.rowHeaderCellPaddingRight +\n        self.style.rowHeaderCellPaddingLeft +\n        (self.attributes.tree\n          ? self.style.treeArrowWidth +\n            self.style.treeArrowMarginLeft +\n            self.style.treeArrowMarginRight\n          : 0)\n      );\n    }\n    var formatter = null;\n    self.getSchema().forEach(function (col) {\n      if (col.name !== name) {\n        return;\n      }\n      self.ctx.font = self.style.columnHeaderCellFont;\n      var t =\n        self.ctx.measureText(col.title || col.name).width +\n        self.style.headerCellPaddingRight +\n        self.style.headerCellPaddingLeft;\n      m = t > m ? t : m;\n      formatter = self.formatters[col.type];\n    });\n    self.data.forEach(function (row) {\n      var text = row[name];\n      if (formatter) {\n        text = formatter({ cell: { value: text } });\n      }\n      self.ctx.font = self.style.cellFont;\n      var t =\n        self.ctx.measureText(text).width +\n        self.style.cellPaddingRight +\n        self.style.cellPaddingLeft +\n        self.style.cellAutoResizePadding;\n      m = t > m ? t : m;\n    });\n    return m;\n  };\n  /**\n   * Gets the total width of all header columns.\n   * @memberof canvasDatagrid\n   * @name getHeaderWidth\n   * @method\n   */\n  self.getHeaderWidth = function () {\n    return self.getVisibleSchema().reduce(function (total, header) {\n      return total + parseInt(header.width || self.style.cellWidth, 10);\n    }, 0);\n  };\n  /**\n   * Gets the height of a row by index.\n   * @memberof canvasDatagrid\n   * @name getRowHeight\n   * @method\n   * @param {number} rowIndex The row index to lookup.\n   */\n  self.getRowHeight = function (rowIndex) {\n    return (self.sizes.rows[rowIndex] || self.style.cellHeight) * self.scale;\n  };\n  /**\n   * Gets the width of a column by index.\n   * @memberof canvasDatagrid\n   * @name getColummnWidth\n   * @method\n   * @param {number} columnIndex The column index to lookup.\n   */\n  self.getColummnWidth = function (columnIndex) {\n    return (\n      (self.sizes.columns[columnIndex] ||\n        self.getSchema()[columnIndex].width ||\n        self.style.cellWidth) * self.scale\n    );\n  };\n  self.formatters.string = function cellFormatterString(e) {\n    return e.cell.value !== undefined ? e.cell.value : '';\n  };\n  self.formatters.rowHeaderCell = self.formatters.string;\n  self.formatters.headerCell = self.formatters.string;\n  self.formatters.number = self.formatters.string;\n  self.formatters.int = self.formatters.string;\n  self.formatters.html = self.formatters.string;\n  self.sorters.string = function (columnName, direction) {\n    var asc = direction === 'asc';\n    return function (a, b) {\n      if (a[columnName] === undefined || a[columnName] === null) {\n        return 1;\n      }\n      if (b[columnName] === undefined || b[columnName] === null) {\n        return 0;\n      }\n      if (asc) {\n        if (!a[columnName].localeCompare) {\n          return 1;\n        }\n        return a[columnName].localeCompare(b[columnName]);\n      }\n      if (!b[columnName].localeCompare) {\n        return 1;\n      }\n      return b[columnName].localeCompare(a[columnName]);\n    };\n  };\n  self.sorters.number = function (columnName, direction) {\n    var asc = direction === 'asc';\n    return function (a, b) {\n      if (asc) {\n        return a[columnName] - b[columnName];\n      }\n      return b[columnName] - a[columnName];\n    };\n  };\n  self.sorters.date = function (columnName, direction) {\n    var asc = direction === 'asc';\n    return function (a, b) {\n      if (asc) {\n        return (\n          new Date(a[columnName]).getTime() - new Date(b[columnName]).getTime()\n        );\n      }\n      return (\n        new Date(b[columnName]).getTime() - new Date(a[columnName]).getTime()\n      );\n    };\n  };\n}\n","/*jslint browser: true, unparam: true, todo: true, evil: true*/\n/*globals Reflect: false, HTMLElement: true, define: true, MutationObserver: false, requestAnimationFrame: false, performance: false, btoa: false*/\n'use strict';\n\nimport component from './component';\nimport defaults from './defaults';\nimport draw from './draw';\nimport events from './events';\nimport touch from './touch';\nimport intf from './intf';\nimport contextMenu from './contextMenu';\nimport dom from './dom';\nimport publicMethods from './publicMethods';\n\nvar webComponent = component();\n\nvar modules = [\n  defaults,\n  draw,\n  events,\n  touch,\n  intf,\n  contextMenu,\n  dom,\n  publicMethods,\n];\n\nfunction Grid(args) {\n  args = args || {};\n  var self = {};\n  self.isComponent = args.component === undefined;\n  self.isChildGrid =\n    args.parentNode &&\n    /canvas-datagrid-(cell|tree)/.test(args.parentNode.nodeType);\n  if (self.isChildGrid) {\n    self.intf = {};\n  } else {\n    self.intf = self.isComponent\n      ? eval('Reflect.construct(HTMLElement, [], new.target)')\n      : document.createElement('canvas');\n  }\n  self.args = args;\n  self.intf.args = args;\n  self.applyComponentStyle = webComponent.applyComponentStyle;\n  self.hyphenateProperty = webComponent.hyphenateProperty;\n  self.dehyphenateProperty = webComponent.dehyphenateProperty;\n  self.createGrid = function grid(args) {\n    args.component = false;\n    return new Grid(args);\n  };\n\n  modules.forEach(function (module) {\n    module(self);\n  });\n\n  if (self.isChildGrid) {\n    self.shadowRoot = args.parentNode.shadowRoot;\n    self.parentNode = args.parentNode;\n  } else {\n    self.shadowRoot = self.intf.attachShadow({ mode: 'open' });\n    self.parentNode = self.shadowRoot;\n  }\n  self.init();\n  return self.intf;\n}\nif (window.HTMLElement) {\n  Grid.prototype = Object.create(window.HTMLElement.prototype);\n}\n// export web component\nif (window.customElements) {\n  Grid.observedAttributes = webComponent.getObservableAttributes();\n  Grid.prototype.disconnectedCallback = webComponent.disconnectedCallback;\n  Grid.prototype.attributeChangedCallback =\n    webComponent.attributeChangedCallback;\n  Grid.prototype.connectedCallback = webComponent.connectedCallback;\n  Grid.prototype.adoptedCallback = webComponent.adoptedCallback;\n  window.customElements.define('canvas-datagrid', Grid);\n}\n\n// export global\nif (\n  window &&\n  !window.canvasDatagrid &&\n  !window.require &&\n  // Present to exclude global declarations from ES Module bundles\n  !window.EXCLUDE_GLOBAL\n) {\n  window.canvasDatagrid = function (args) {\n    return new Grid(args);\n  };\n}\n\n// export amd loader\nexport default function canvasDatagrid(args) {\n  args = args || {};\n  var i,\n    tKeys = [\n      'style',\n      'formatters',\n      'sorters',\n      'filters',\n      'treeGridAttributes',\n      'cellGridAttributes',\n      'data',\n      'schema',\n    ];\n  if (window.customElements) {\n    i = document.createElement('canvas-datagrid');\n    Object.keys(args).forEach(function (argKey) {\n      // set data and parentNode after everything else\n      if (argKey === 'data') {\n        return;\n      }\n      if (argKey === 'parentNode') {\n        return;\n      }\n      // top level keys in args\n      if (tKeys.indexOf(argKey) !== -1) {\n        tKeys.forEach(function (tKey) {\n          if (args[tKey] === undefined || tKey !== argKey) {\n            return;\n          }\n          if (['formatters', 'sorters', 'filters'].indexOf(argKey) !== -1) {\n            if (typeof args[tKey] === 'object' && args[tKey] !== null) {\n              Object.keys(args[tKey]).forEach(function (sKey) {\n                i[tKey][sKey] = args[tKey][sKey];\n              });\n            }\n          } else {\n            i[tKey] = args[tKey];\n          }\n        });\n        return;\n      }\n      // all others are attribute level keys\n      i.attributes[argKey] = args[argKey];\n    });\n    if (args.data) {\n      i.data = args.data;\n    }\n    // add to the dom very last to avoid redraws\n    if (args.parentNode) {\n      args.parentNode.appendChild(i);\n    }\n    return i;\n  }\n  args.component = false;\n  i = new Grid(args);\n  if (args.parentNode && args.parentNode.appendChild) {\n    args.parentNode.appendChild(i);\n  }\n  return i;\n}\n"],"names":["self","defaults","attributes","styles","typeMap","component","dehyphenateProperty","prop","replace","nextLetterCap","p","Array","prototype","forEach","call","char","toUpperCase","hyphenateProperty","cust","toLowerCase","applyComponentStyle","supressChangeAndDrawEvents","intf","isComponent","cStyle","window","getComputedStyle","tagName","canvas","defs","computedStyle","def","val","getPropertyValue","setStyleProperty","dispatchEvent","requestAnimationFrame","resize","style","data","strData","JSON","parse","e","Error","schema","strSchema","number","strNum","n","parseInt","isNaN","boolean","strBool","test","string","str","getObservableAttributes","i","attrs","attr","push","disconnectedCallback","connected","connectedCallback","this","parentDOMNode","innerHTML","appendChild","observe","adoptedCallback","attributeChangedCallback","attrName","oldVal","newVal","tfn","dataType","base","item","filter","addEventListener","Function","name","observer","MutationObserver","mutations","checkInnerHTML","checkStyle","mutation","attributeName","target","nodeName","parentNode","addedNodes","length","type","characterData","childList","subtree","document","querySelectorAll","el","perfCounters","cachedImagesDrawn","drawCount","perfWindowSize","entityCount","scrollDebugCounters","touchPPSCounters","fillArray","low","high","step","x","undefined","drawHtml","cell","img","v","formattedValue","cacheKey","toString","rowIndex","columnIndex","Math","round","canvasOffsetLeft","y","canvasOffsetTop","htmlImageCache","height","width","complete","ctx","drawImage","Image","onload","loaded","Object","keys","html","draw","src","btoa","radiusRect","w","h","radius","r","b","beginPath","moveTo","lineTo","quadraticCurveTo","fillRect","strokeRect","fillText","text","clipFrozenArea","mode","lastFrozenColumnPixel","lastFrozenRowPixel","clip","fillHandle","selectionHandleType","arc","PI","fill","fillCircle","strokeHandle","stroke","strokeCircle","addBorderLine","c","pos","t","l","internal","isChildGrid","parentGrid","visible","checkScrollHeight","rowHeaderCell","cx","cy","treeGrid","rowOpen","rowHeight","cornerCell","s","rd","aCell","my","mx","xHover","yHover","drawCorner","en","m","d","bc","gridBorderCollapse","selectionBorders","moveBorders","selectionHandles","rowHeaders","u","currentCell","columnHeaderCellHeight","getColumnHeaderCellHeight","rowHeaderCellWidth","getRowHeaderCellWidth","cellHeight","performance","now","visibleRowHeights","orders","rows","createRowOrders","save","visibleRows","getSchema","visibleCells","offsetTop","offsetLeft","fillStyle","gridBackgroundColor","ln","min","frozenRow","scrollBox","scrollLeft","scrollPixelLeft","cellBorderWidth","drawRow","allowFreezingRows","frozenMarkerBorderWidth","frozenMarkerWidth","drawFrozenRows","o","g","snapToRow","scrollTop","scrollPixelTop","scrollIndexTop","scrollIndexBottom","scrollPixelBottom","showNewRow","showRowHeaders","scrollIndexLeft","columns","drawCell","newRow","restore","drawRows","cl","activeCell","frozenColumn","selectionMode","lineWidth","activeCellOverlayBorderWidth","strokeStyle","activeCellOverlayBorderColor","getHeaderWidth","drawActiveCell","columnHeaderCell","header","nonFrozenHeaderWidth","drawHeaderColumnRange","start","end","hidden","title","cellWidth","index","order","rArgs","rhIndex","rowData","rowOrderIndex","a","sizes","openChildren","drawRowHeader","showColumnHeaders","columnHeaderCellBorderWidth","scrollBarWidth","isColumnHeaderCell","isColumnHeaderCellCap","endCap","drawHeaders","allowFreezingColumns","frozenMarkerHoverColor","frozenMarkerColor","frozenMarkerHoverBorderColor","frozenMarkerBorderColor","unshift","freezeMarkerPosition","frozenMarkerActiveColor","frozenMarkerActiveBorderColor","dragMode","mobile","allowMovingSelection","selectionHandleBorderWidth","selectionHandleBorderColor","selectionHandleColor","hw","selectionHandleSize","tr","br","tl","bl","addselectionHandle","az","touchSelectHandleZone","ax","ay","reorderObject","dragOffset","reorderMarkerBackgroundColor","reorderMarkerBorderWidth","reorderMarkerBorderColor","reorderMarkerIndexBorderWidth","reorderMarkerIndexBorderColor","reorderTarget","sortRowIndex","sortColumnIndex","drawReorderMarkers","movingSelection","moveOverlayBorderWidth","moveOverlayBorderColor","setLineDash","moveOverlayBorderSegments","gridBorderWidth","gridBorderColor","dsb","selectionOverlayBorderWidth","selectionOverlayBorderColor","drawSelectionBorders","entities","scrollBarBoxMargin","scrollBarBorderColor","scrollBarBorderWidth","horizontalBox","horizontalBar","scrollBoxWidth","scrollWidth","verticalBox","verticalBar","scrollBoxHeight","scrollHeight","horizontalBarVisible","scrollBarBackgroundColor","scrollBarBoxColor","horizontalBoxVisible","context","scrollBarActiveColor","scrollBarBoxBorderRadius","verticalBarVisible","verticalBoxVisible","scrollBarCornerBorderColor","scrollBarCornerBackgroundColor","corner","showPerformance","debug","pop","font","debugFont","perf","reduce","toFixed","perfDelta","frozenColumnsWidth","getColummnWidth","getFrozenColumnsWidth","htmlImages","scale","startScale","scaleDelta","zoomDeltaStart","touchLength","touches","touchPosition","touchPosition1","scrollIndex","scrollPixel","canvasOffset","touchDelta","touchAnimateTo","scrollAnimation","touchPPS","xPPS","yPPS","touchPPST","xPPST","yPPST","touchDuration","pointerLockPosition","size","mouse","touch","touchStart","hasFocus","dragContext","textAlign","debugBackgroundColor","key","debugColor","px","py","debugPerfChartBackground","debugScrollHeightColor","debugScrollWidthColor","debugPerformanceColor","debugEntitiesColor","debugTouchPPSXColor","debugTouchPPSYColor","dpl","apply","perfArr","arrIndex","max","color","useAbs","abs","drawPerfLine","debugPerfChartTextColor","drawPerfLines","createBorderOverlayArray","drawArray","propPrefix","offsetPoint","selectionBorder","isRowHeader","selections","indexOf","isHeader","headerIndex","columnOrderIndex","cellGridAttributes","cellStyle","isCorner","isColumnHeader","wrap","cellWhiteSpace","selected","hovered","hovers","active","rawValue","isGrid","activeHeader","f","formatters","orderByArrowSize","treeArrowSize","ev","value","row","nodeType","fontHeight","horizontalAlignment","verticalAlignment","paddingLeft","paddingTop","paddingRight","paddingBottom","whiteSpace","lineHeight","cellLineHeight","lineSpacing","cellLineSpacing","offsetWidth","offsetHeight","offsetParent","isNormal","gridId","calculatedLineHeight","paddedWidth","paddedHeight","userHeight","userWidth","cellHeightWithChildGrid","cellWidthWithChildGrid","tree","mt","treeArrowMarginTop","mr","treeArrowMarginRight","ml","treeArrowMarginLeft","aw","treeArrowWidth","ah","treeArrowHeight","treeArrowColor","treeArrowBorderColor","drawTreeArrow","showRowNumbers","childGrids","saveAppearance","createGrid","cellGridHeight","grid","orderBy","columnHeaderOrderByArrowMarginTop","columnHeaderOrderByArrowMarginLeft","columnHeaderOrderByArrowMarginRight","columnHeaderOrderByArrowWidth","columnHeaderOrderByArrowHeight","columnHeaderOrderByArrowColor","columnHeaderOrderByArrowBorderColor","orderDirection","drawOrderByArrow","orderByArrowWidth","console","warn","columnFilters","filterTextPrefix","splitChar","lines","word","elWidth","plWidth","clippedVal","previousLine","words","split","textHeight","autoResize","autoResizeRows","et","ellipsisText","line","cHeight","measureText","measure","splice","originText","stepLength","direction","substr","wrapText","vPos","hPos","stringify","pw","idx","idx_ord","map","drawText","selectionBorderTop","selectionBorderRight","selectionHandle","selectionBorderLeft","selectionBorderBottom","selectionHandleBehavior","createHandlesOverlayArray","moveOffset","treeHeight","rowSansTreeHeight","trees","scrollIndexRight","scrollPixelRight","module","exports","defineProperty","enumerable","get","Symbol","toStringTag","__esModule","create","bind","default","hasOwnProperty","concat","modifier","legacyModifier","navigation","editing","ui","device","imeCompositionKeys","koreanSpecific","japaneseSpecific","commonFunction","multimedia","multimediaNumpad","audio","speech","application","browser","mobilePhone","tv","mediaControls","wheeling","stopPropagation","fn","events","removeEventListener","sfn","defaultPrevented","preventDefault","getRatio","maxPixelRatio","devicePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","drawAfterResize","dims","vb","nb","co","isScrollBoxCorner","sbw","ratio","bm","cellBorder","columnHeaderCellBorder","dataHeight","dataWidth","ch","scrollCache","accumulator","column","va","setCanvasSize","args","top","left","setScrollBoxSize","checkScrollBoxVisibility","widthBoxRatio","heightBoxRatio","scrollBarBoxMinSize","scrollBarBoxWidth","bar","box","page","pageUpDownOverlap","resizeEditInput","scroll","overflowX","overflowY","dim","appliedInlineStyles","parentNodeStyle","isComponet","dontDraw","floor","ellipsisCache","mousemove","overridePos","contextMenu","input","getLayerPos","dragBounds","sBounds","delta","ctrl","ctrlKey","metaKey","persistantSelectionMode","singleSelectionMode","getCellAt","NativeEvent","previousCell","clearTimeout","scrollTimer","isInGrid","rowBoundaryCrossed","columnBoundaryCrossed","cellBoundaryCrossed","prefix","draggingItem","scrollModes","dragItem","cursor","selecting","dragStart","dragStartObject","shiftKey","bottom","right","getSelectionBounds","ignoreNextClick","dragAddToSelection","selectRow","selectionBounds","selectArea","autoScrollZone","click","startingBounds","endEdit","setActiveCell","selectAll","checkSelectionChange","columnHeaderClickBehavior","selectColumn","treeArrowClickRadius","toggleTree","sb","getSelectedData","dragResizeColumn","resizingStartingWidth","resizingStartingHeight","minColumnWidth","minRowHeight","resizeScrollZone","resizeChildGrids","globalRowResize","stopDragResize","body","setStorageData","scrollGrid","scrollPointerLock","scrollStartMode","movementX","movementY","scrollMode","scrollStart","setTimeout","scrollRepeatRate","selectionScrollIncrement","stopScrollGrid","exitPointerLock","dragReorder","columReorder","rowReorder","allowColumnReordering","allowRowReordering","source","reorderDeadZone","stopDragReorder","oIndex","tIndex","cr","dragMove","stopDragMove","moveSelection","freezeMove","stopFreezeMove","startFreezeMove","mousedown","lastMouseDownTarget","button","move","freeze","requestPointerLock","dragging","mouseup","controlInput","focus","getAdjacentCells","first","last","keydown","adjacentCells","cols","isPrintableKeyEvent","beginEditAt","Number","isArrowKey","includes","scrollIntoView","selectionFollowsActiveCell","selectedData","keyup","keypress","dblclick","fitColumnToValues","autosize","scrollWheel","deltaX","deltaY","deltaMode","touchHaltAnimation","scrollTo","pasteData","pasteValue","mimeType","startRowIndex","startColIndex","getVisibleSchema","isSupportedHtmlTable","htmlString","substring","match","parseData","cellData","forEachSelectedCell","colName","realRowIndex","cells","existingRowData","newRowData","assign","colIndex","columnName","affectedCells","getNextVisibleColumnIndex","visibleColumnIndex","getVisibleColumnIndexOf","paste","event","editable","clipboardItems","Map","from","clipboardData","items","supportedMimeTypes","pasteableItems","itemToPaste","pasteType","getAsString","join","cut","copy","outputHeaderKeys","tableRows","textRows","outputHeaders","sData","rowKeys","trRow","textRow","sSorted","fCopyCell","addCellValue","addHeaders","setData","htmlSafe","headers","useHtml","hVal","touchMoving","touchScrollTimeout","animationFrames","getTouchPos","touchIndex","rect","getBoundingClientRect","clientX","clientY","easingFunctions","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easing","touchEasingMethod","calculatePPSTimed","touchSigmaTimed","calculatePPS","touchSigma","touchEndAnimation","touchReleaseAnimationDurationMs","stopAnimation","touchEditCell","touchCell","clearInterval","calculatePPSTimer","touchDeadZone","touchingCell","editCell","touchstart","changedTouches","startingCell","disposeContextMenu","touchContextTimeout","touchStartEvent","zoomAltered","touchStart1","touchScrollStart","contextmenuEvent","touchContextMenuTimeMs","setInterval","touchEndEvents","touchmove","passive","touchend","touchcancel","touchSelect","handleType","touchSelecting","bounds","rw","rScrollZone","lScrollZone","bScrollZone","tScrollZone","t1","t2","touchZoomSensitivity","touchZoomMin","touchZoomMax","selectionScrollZone","touchScroll","touchMove","dz","touchReleaseAcceleration","scrollAnimationPPSThreshold","ctor","treeGridAttributes","storageName","invalidSearchExpClass","localStyleLibraryStorageKey","orderings","add","sortFunction","col","sort","filters","currentFilter","sorters","parsers","schemaHashes","changes","componentL1Events","eventNames","expandToRow","orderedIndex","visibility","localStorage","setItem","tempSchema","createColumnOrders","applyDefaultValue","defaultValue","createNewRowData","getSchemaNameHash","applyFilter","refreshFromOrigialData","getHeaderByName","applyDataTransforms","getBestGuessDataType","drawChildGrids","gridKey","setTimer","originalData","validateColumn","setDefaults","obj1","obj2","setAttributes","setStyle","findColumnMaxTextLength","dispose","removeChild","eventParent","contextmenu","disconnect","tryLoadStoredSettings","reloadStoredValues","storedSettings","_typeof","getDomRoot","shadowRoot","host","getFontName","fontStyle","getFontHeight","parseFloat","parseStyleValue","initProp","propName","getStyleProperty","styleKeys","supressDrawAndEvent","isDim","getItem","message","init","initialized","publicStyleKeyIntf","initScrollBox","setDom","ie","navigator","userAgent","edge","webKit","moz","blankValues","cursorGrab","cursorGrabing","cursorGrabbing","appendTo","getVisibleCellByIndex","clearChangeLog","gotoCell","gotoRow","findColumnScrollLeft","findRowScrollTop","isCellVisible","isRowVisible","isColumnVisible","clipElement","getSchemaFromData","setFilter","expandTree","collapseTree","insertRow","deleteRow","addRow","insertColumn","deleteColumn","addColumn","getClippingRect","setRowHeight","setColumnWidth","resetColumnWidths","resetRowHeights","selectNone","assertPxColor","clearPxColorAssertions","integerToAlpha","addStyleKeyIfNoneExists","DOMStyles","set","valueObject","filterFor","blanksText","String","trim","filterRegExp","pattern","exec","flags","flagLength","invalidFilterRegEx","RegExp","toLocaleUpperCase","innerText","textContent","blur","TypeError","currentCursor","find","eventName","RangeError","isArray","getTypes","parseInnerHtml","callback","etl","autoGenerateSchema","autoResizeColumns","sHeight","sWidth","setScrollTop","preventScrollEvent","setScrollLeft","supressDrawEvent","zIndexTop","hoverScrollTimeout","autoCompleteContext","applyContextItemStyle","contextItemContainer","createInlineStyle","createContextMenu","parentContextMenu","loc","container","createElement","upArrow","downArrow","children","selectedIndex","checkArrowVisibility","startHoverScroll","contextHoverScrollAmount","contextHoverScrollRateMs","endHoverScroll","scrollOffset","contextMenuZIndex","childMenuArrow","removeChildContext","relatedTarget","contains","setAttribute","contextAddCallback","getAttribute","cPos","childContextMenuMarginLeft","childContextMenuMarginTop","createChildContext","addContent","content","childContextMenuArrowHTML","addItem","position","contextMenuArrowColor","zIndex","inputDropdown","maxHeight","innerHeight","autocompleteBottomMargin","minWidth","contextMenuArrowUpHTML","contextMenuArrowDownHTML","contextMenuWindowMargin","innerWidth","clickIndex","Event","isFinite","createFilterContextMenuItems","iRect","filterContainer","filterLabel","filterAutoCompleteButton","filterInput","checkRegExpErrorState","background","contextFilterInputBackground","contextFilterInputColor","contextFilterInvalidRegExpBackground","contextFilterInvalidRegExpColor","createAutoCompleteContext","count","blanksItem","autoCompleteItems","cellValue","maxAutoCompleteItems","disposeAutocomplete","onclick","filterOptionText","contextFilterButtonHTML","cf","removeFilterOptionText","contextPosition","isNormalCell","isBackground","isScrollBar","showFilter","showCopy","copyText","execCommand","showPaste","clipBoardData","pasteText","showColumnSelector","columnSelectorText","toggleColumnVisibility","columnSelectorHiddenText","columnSelectorVisibleText","hideColumnText","showClearSettingsOption","clearSettingsOptionText","columnWidth","allowSorting","showOrderByOption","showOrderByOptionTextAsc","showOrderByOptionTextDesc","addDefaultContextMenuItem","contextMenuMarginLeft","contextMenuMarginTop","mobileContextMenuMargin","createDiposeEvent","ele","boundingRect","eleRect","clipRect","parentRect","Infinity","scrollingElement","borderWidth","mobileEditInputHeight","cellPaddingLeft","ignoreScrollOffset","abort","newValue","oldValue","aborted","inEnterMode","enumItems","enu","option","valueInEnum","multiLine","editCellZIndex","fontSize","editCellFontSize","cellValueIsEmpty","shouldClearCellValue","nx","ny","altKey","nextRowIndex","className","css","verticalAlign","marginLeft","padding","border","contextFilterInputBorder","borderRadius","contextFilterInputBorderRadius","fontWeight","fontFamily","contextFilterInputFontFamily","contextFilterInputFontSize","contextMenuBackground","contextMenuColor","contextFilterButtonBorder","contextFilterButtonBorderRadius","contextMenuFilterButtonFontFamily","contextMenuFilterButtonFontSize","cssFloat","childContextMenuArrowColor","contextMenuChildArrowFontSize","contextMenuFontFamily","contextMenuFontSize","contextMenuBorder","contextMenuPadding","contextMenuBorderRadius","opacity","contextMenuOpacity","overflow","contextMenuHoverBackground","contextMenuHoverColor","display","boxSizing","outline","margin","mobileEditFontFamily","mobileEditFontSize","editCellBorder","editCellColor","editCellBackgroundColor","appearance","webkitAppearance","mozAppearance","editCellPaddingLeft","editCellFontFamily","boxShadow","editCellBoxShadow","contextMenuItemMargin","contextMenuItemBorderRadius","contextMenuLabelMargin","contextMenuLabelDisplay","contextMenuLabelMinWidth","maxWidth","contextMenuLabelMaxWidth","contextMenuCursor","contextMenuFilterInvalidExpresion","onblur","parentIsCanvas","getContext","textBaseline","ordA","charCodeAt","len","fromCharCode","offsetX","offsetY","targetX","targetY","sbh","isColumnSelected","colIsSelected","shift","supressEvent","addCol","st","de","ri","dragObject","childGrid","trArgs","treeGridHeight","dontSetStorageData","sorter","sel","xi","maxRowLength","minXi","yi","lastSourceIndex","cidx","useTouchScrollZones","getBorder","entitiy","borderResizeZone","moveBorder","tsz","touchScrollZone","moveMode","borderDragBehavior","xBorderBehavior","yBorderBehavior","isVerticalScrollBar","isHorizontalScrollBar","allowColumnResize","allowColumnResizeFromCell","allowRowHeaderResize","allowRowResize","allowRowResizeFromCell","rowGrabZoneSize","maxCol","minCol","rowHeaderCellFont","autosizePadding","autosizeHeaderCellPadding","rowHeaderCellPaddingRight","rowHeaderCellPaddingLeft","formatter","columnHeaderCellFont","headerCellPaddingRight","headerCellPaddingLeft","cellFont","cellPaddingRight","cellAutoResizePadding","total","getRowHeight","headerCell","int","asc","localeCompare","date","Date","getTime","webComponent","modules","dom","publicMethods","Grid","eval","attachShadow","canvasDatagrid","tKeys","customElements","argKey","tKey","sKey","HTMLElement","observedAttributes","define","require"],"mappings":"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"}