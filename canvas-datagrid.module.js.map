{"version":3,"file":"canvas-datagrid.module.js","sources":["../lib/defaults.js","../lib/component.js","../lib/draw.js","../node_modules/is-printable-key-event/dist/index.js","../lib/events.js","../lib/touch.js","../lib/intf.js","../lib/contextMenu.js","../lib/dom.js","../lib/publicMethods.js","../lib/main.js"],"sourcesContent":["/*jslint browser: true, unparam: true, todo: true*/\n/*globals define: true, MutationObserver: false, requestAnimationFrame: false, performance: false, btoa: false*/\n\n'use strict';\nexport default function (self) {\n  self.defaults = {\n    attributes: [\n      ['allowColumnReordering', true],\n      ['allowColumnResize', true],\n      ['allowColumnResizeFromCell', false],\n      ['allowFreezingRows', false],\n      ['allowFreezingColumns', false],\n      ['allowMovingSelection', true],\n      ['allowRowHeaderResize', true],\n      ['allowRowReordering', false],\n      ['allowRowResize', true],\n      ['allowRowResizeFromCell', false],\n      ['allowSorting', true],\n      ['autoGenerateSchema', false],\n      ['autoResizeColumns', false],\n      ['autoResizeRows', false],\n      ['blanksText', '(Blanks)'],\n      ['borderDragBehavior', 'none'],\n      ['borderResizeZone', 10],\n      ['clearSettingsOptionText', 'Clear saved settings'],\n      ['columnHeaderClickBehavior', 'sort'],\n      ['columnSelectorHiddenText', '&nbsp;&nbsp;&nbsp;'],\n      ['columnSelectorText', 'Add/Remove columns'],\n      ['columnSelectorVisibleText', '\\u2713'],\n      ['contextHoverScrollAmount', 2],\n      ['contextHoverScrollRateMs', 5],\n      ['copyHeadersOnSelectAll', true],\n      ['copyText', 'Copy'],\n      ['debug', false],\n      ['editable', true],\n      ['ellipsisText', '...'],\n      ['filterOptionText', 'Filter %s'],\n      ['filterTextPrefix', '(filtered) '],\n      ['globalRowResize', false],\n      ['hideColumnText', 'Hide %s'],\n      ['maxAutoCompleteItems', 200],\n      ['multiLine', false],\n      ['name', ''],\n      ['pageUpDownOverlap', 1],\n      ['pasteText', 'Paste'],\n      ['persistantSelectionMode', false],\n      ['removeFilterOptionText', 'Remove filter on %s'],\n      ['reorderDeadZone', 3],\n      ['resizeScrollZone', 20],\n      ['rowGrabZoneSize', 5],\n      ['saveAppearance', true],\n      ['scrollAnimationPPSThreshold', 0.75],\n      ['scrollPointerLock', false],\n      ['scrollRepeatRate', 75],\n      ['selectionFollowsActiveCell', false],\n      ['selectionHandleBehavior', 'none'],\n      ['selectionMode', 'cell'],\n      ['selectionScrollIncrement', 20],\n      ['selectionScrollZone', 20],\n      ['showClearSettingsOption', true],\n      ['showColumnHeaders', true],\n      ['showColumnSelector', true],\n      ['showCopy', false],\n      ['showFilter', true],\n      ['showNewRow', false],\n      ['showOrderByOption', true],\n      ['showOrderByOptionTextAsc', 'Order by %s ascending'],\n      ['showOrderByOptionTextDesc', 'Order by %s descending'],\n      ['showPaste', false],\n      ['showPerformance', false],\n      ['showRowHeaders', true],\n      ['showRowNumbers', true],\n      ['singleSelectionMode', false],\n      ['snapToRow', false],\n      ['touchContextMenuTimeMs', 800],\n      ['touchDeadZone', 3],\n      ['touchEasingMethod', 'easeOutQuad'],\n      ['touchReleaseAcceleration', 1000],\n      ['touchReleaseAnimationDurationMs', 2000],\n      ['touchScrollZone', 20],\n      ['touchSelectHandleZone', 20],\n      ['touchZoomSensitivity', 0.005],\n      ['touchZoomMin', 0.5],\n      ['touchZoomMax', 1.75],\n      ['maxPixelRatio', 2],\n      ['tree', false],\n      ['treeHorizontalScroll', false],\n    ],\n    styles: [\n      ['activeCellBackgroundColor', 'rgba(255, 255, 255, 1)'],\n      ['activeCellBorderColor', 'rgba(110, 168, 255, 1)'],\n      ['activeCellBorderWidth', 1],\n      ['activeCellColor', 'rgba(0, 0, 0, 1)'],\n      ['activeCellFont', '16px sans-serif'],\n      ['activeCellHoverBackgroundColor', 'rgba(255, 255, 255, 1)'],\n      ['activeCellHorizontalAlignment', 'left'],\n      ['activeCellHoverColor', 'rgba(0, 0, 0, 1)'],\n      ['activeCellOverlayBorderColor', 'rgba(66, 133, 244, 1)'],\n      ['activeCellOverlayBorderWidth', 1],\n      ['activeCellPaddingBottom', 5],\n      ['activeCellPaddingLeft', 5],\n      ['activeCellPaddingRight', 5],\n      ['activeCellPaddingTop', 5],\n      ['activeCellSelectedBackgroundColor', 'rgba(236, 243, 255, 1)'],\n      ['activeCellSelectedColor', 'rgba(0, 0, 0, 1)'],\n      ['activeCellVerticalAlignment', 'center'],\n      ['activeColumnHeaderCellBackgroundColor', 'rgba(225, 225, 225, 1)'],\n      ['activeColumnHeaderCellColor', 'rgba(0, 0, 0, 1)'],\n      ['activeRowHeaderCellBackgroundColor', 'rgba(225, 225, 225, 1)'],\n      ['activeRowHeaderCellColor', 'rgba(0, 0, 0, 1)'],\n      ['autocompleteBottomMargin', 60],\n      ['autosizeHeaderCellPadding', 8],\n      ['autosizePadding', 5],\n      ['cellAutoResizePadding', 13],\n      ['cellBackgroundColor', 'rgba(255, 255, 255, 1)'],\n      ['cellBorderColor', 'rgba(195, 199, 202, 1)'],\n      ['cellBorderWidth', 1],\n      ['cellColor', 'rgba(0, 0, 0, 1)'],\n      ['cellFont', '16px sans-serif'],\n      ['cellGridHeight', 250],\n      ['cellHeight', 24],\n      ['cellHeightWithChildGrid', 150],\n      ['cellHorizontalAlignment', 'left'],\n      ['cellHoverBackgroundColor', 'rgba(255, 255, 255, 1)'],\n      ['cellHoverColor', 'rgba(0, 0, 0, 1)'],\n      ['cellPaddingBottom', 5],\n      ['cellPaddingLeft', 5],\n      ['cellPaddingRight', 5],\n      ['cellPaddingTop', 5],\n      ['cellSelectedBackgroundColor', 'rgba(236, 243, 255, 1)'],\n      ['cellSelectedColor', 'rgba(0, 0, 0, 1)'],\n      ['cellVerticalAlignment', 'center'],\n      ['cellWidth', 250],\n      ['cellWidthWithChildGrid', 250],\n      ['cellWhiteSpace', 'nowrap'],\n      ['cellLineHeight', 1],\n      ['cellLineSpacing', 3],\n      ['childContextMenuArrowColor', 'rgba(43, 48, 43, 1)'],\n      ['childContextMenuArrowHTML', '&#x25BA;'],\n      ['childContextMenuMarginLeft', -11],\n      ['childContextMenuMarginTop', -6],\n      ['columnHeaderCellBackgroundColor', 'rgba(240, 240, 240, 1)'],\n      ['columnHeaderCellBorderColor', 'rgba(172, 172, 172, 1)'],\n      ['columnHeaderCellBorderWidth', 1],\n      ['columnHeaderCellCapBackgroundColor', 'rgba(240, 240, 240, 1)'],\n      ['columnHeaderCellCapBorderColor', 'rgba(172, 172, 172, 1)'],\n      ['columnHeaderCellCapBorderWidth', 1],\n      ['columnHeaderCellColor', 'rgba(50, 50, 50, 1)'],\n      ['columnHeaderCellFont', '16px sans-serif'],\n      ['columnHeaderCellHeight', 25],\n      ['columnHeaderCellHorizontalAlignment', 'left'],\n      ['columnHeaderCellHoverBackgroundColor', 'rgba(235, 235, 235, 1)'],\n      ['columnHeaderCellHoverColor', 'rgba(0, 0, 0, 1)'],\n      ['columnHeaderCellPaddingBottom', 5],\n      ['columnHeaderCellPaddingLeft', 5],\n      ['columnHeaderCellPaddingRight', 5],\n      ['columnHeaderCellPaddingTop', 5],\n      ['columnHeaderCellVerticalAlignment', 'center'],\n      ['columnHeaderOrderByArrowBorderColor', 'rgba(195, 199, 202, 1)'],\n      ['columnHeaderOrderByArrowBorderWidth', 1],\n      ['columnHeaderOrderByArrowColor', 'rgba(155, 155, 155, 1)'],\n      ['columnHeaderOrderByArrowHeight', 8],\n      ['columnHeaderOrderByArrowMarginLeft', 0],\n      ['columnHeaderOrderByArrowMarginRight', 5],\n      ['columnHeaderOrderByArrowMarginTop', 6],\n      ['columnHeaderOrderByArrowWidth', 13],\n      ['contextFilterButtonBorder', 'solid 1px rgba(158, 163, 169, 1)'],\n      ['contextFilterButtonBorderRadius', '3px'],\n      ['contextFilterButtonHTML', '&#x25BC;'],\n      ['contextFilterInputBackground', 'rgba(255,255,255,1)'],\n      ['contextFilterInputBorder', 'solid 1px rgba(158, 163, 169, 1)'],\n      ['contextFilterInputBorderRadius', '0'],\n      ['contextFilterInputColor', 'rgba(0,0,0,1)'],\n      ['contextFilterInputFontFamily', 'sans-serif'],\n      ['contextFilterInputFontSize', '14px'],\n      ['contextFilterInvalidRegExpBackground', 'rgba(180, 6, 1, 1)'],\n      ['contextFilterInvalidRegExpColor', 'rgba(255, 255, 255, 1)'],\n      ['contextMenuArrowColor', 'rgba(43, 48, 43, 1)'],\n      ['contextMenuArrowDownHTML', '&#x25BC;'],\n      ['contextMenuArrowUpHTML', '&#x25B2;'],\n      ['contextMenuBackground', 'rgba(240, 240, 240, 1)'],\n      ['contextMenuBorder', 'solid 1px rgba(158, 163, 169, 1)'],\n      ['contextMenuBorderRadius', '3px'],\n      ['contextMenuChildArrowFontSize', '12px'],\n      ['contextMenuColor', 'rgba(43, 48, 43, 1)'],\n      ['contextMenuCursor', 'default'],\n      ['contextMenuFilterButtonFontFamily', 'sans-serif'],\n      ['contextMenuFilterButtonFontSize', '10px'],\n      ['contextMenuFilterInvalidExpresion', 'rgba(237, 155, 156, 1)'],\n      ['contextMenuFontFamily', 'sans-serif'],\n      ['contextMenuFontSize', '16px'],\n      ['contextMenuHoverBackground', 'rgba(182, 205, 250, 1)'],\n      ['contextMenuHoverColor', 'rgba(43, 48, 153, 1)'],\n      ['contextMenuItemBorderRadius', '3px'],\n      ['contextMenuItemMargin', '2px'],\n      ['contextMenuLabelDisplay', 'inline-block'],\n      ['contextMenuLabelMargin', '0 3px 0 0'],\n      ['contextMenuLabelMaxWidth', '700px'],\n      ['contextMenuLabelMinWidth', '75px'],\n      ['contextMenuMarginLeft', 3],\n      ['contextMenuMarginTop', -3],\n      ['contextMenuOpacity', '0.98'],\n      ['contextMenuPadding', '2px'],\n      ['contextMenuWindowMargin', 30],\n      ['contextMenuZIndex', 10000],\n      ['cornerCellBackgroundColor', 'rgba(240, 240, 240, 1)'],\n      ['cornerCellBorderColor', 'rgba(202, 202, 202, 1)'],\n      ['debugBackgroundColor', 'rgba(0, 0, 0, .0)'],\n      ['debugColor', 'rgba(255, 15, 24, 1)'],\n      ['debugEntitiesColor', 'rgba(76, 231, 239, 1.00)'],\n      ['debugFont', '11px sans-serif'],\n      ['debugPerfChartBackground', 'rgba(29, 25, 26, 1.00)'],\n      ['debugPerfChartTextColor', 'rgba(255, 255, 255, 0.8)'],\n      ['debugPerformanceColor', 'rgba(252, 255, 37, 1.00)'],\n      ['debugScrollHeightColor', 'rgba(248, 33, 103, 1.00)'],\n      ['debugScrollWidthColor', 'rgba(66, 255, 27, 1.00)'],\n      ['debugTouchPPSXColor', 'rgba(246, 102, 24, 1.00)'],\n      ['debugTouchPPSYColor', 'rgba(186, 0, 255, 1.00)'],\n      ['display', 'inline-block'],\n      ['editCellBackgroundColor', 'white'],\n      ['editCellBorder', 'solid 1px rgba(110, 168, 255, 1)'],\n      ['editCellBoxShadow', '0 2px 5px rgba(0,0,0,0.4)'],\n      ['editCellColor', 'black'],\n      ['editCellFontFamily', 'sans-serif'],\n      ['editCellFontSize', '16px'],\n      ['editCellPaddingLeft', 4],\n      ['editCellZIndex', 10000],\n      ['frozenMarkerHoverColor', 'rgba(236, 243, 255, 1)'],\n      ['frozenMarkerHoverBorderColor', 'rgba(110, 168, 255, 1)'],\n      ['frozenMarkerActiveColor', 'rgba(236, 243, 255, 1)'],\n      ['frozenMarkerActiveBorderColor', 'rgba(110, 168, 255, 1)'],\n      ['frozenMarkerColor', 'rgba(222, 222, 222, 1)'],\n      ['frozenMarkerBorderColor', 'rgba(168, 168, 168, 1)'],\n      ['frozenMarkerBorderWidth', 1],\n      ['frozenMarkerWidth', 2],\n      ['gridBackgroundColor', 'rgba(240, 240, 240, 1)'],\n      ['gridBorderCollapse', 'collapse'],\n      ['gridBorderColor', 'rgba(202, 202, 202, 1)'],\n      ['gridBorderWidth', 1],\n      ['height', 'auto'],\n      ['maxHeight', 'inherit'],\n      ['maxWidth', 'inherit'],\n      ['minColumnWidth', 45],\n      ['minHeight', 'inherit'],\n      ['minRowHeight', 24],\n      ['minWidth', 'inherit'],\n      ['mobileContextMenuMargin', 10],\n      ['mobileEditInputHeight', 30],\n      ['mobileEditFontFamily', 'sans-serif'],\n      ['mobileEditFontSize', '16px'],\n      ['moveOverlayBorderWidth', 1],\n      ['moveOverlayBorderColor', 'rgba(66, 133, 244, 1)'],\n      ['moveOverlayBorderSegments', '12, 7'],\n      ['name', 'default'],\n      ['overflowY', 'auto'],\n      ['overflowX', 'auto'],\n      ['reorderMarkerBackgroundColor', 'rgba(0, 0, 0, 0.1)'],\n      ['reorderMarkerBorderColor', 'rgba(0, 0, 0, 0.2)'],\n      ['reorderMarkerBorderWidth', 1.25],\n      ['reorderMarkerIndexBorderColor', 'rgba(66, 133, 244, 1)'],\n      ['reorderMarkerIndexBorderWidth', 2.75],\n      ['rowHeaderCellBackgroundColor', 'rgba(240, 240, 240, 1)'],\n      ['rowHeaderCellBorderColor', 'rgba(200, 200, 200, 1)'],\n      ['rowHeaderCellBorderWidth', 1],\n      ['rowHeaderCellColor', 'rgba(50, 50, 50, 1)'],\n      ['rowHeaderCellFont', '16px sans-serif'],\n      ['rowHeaderCellHeight', 25],\n      ['rowHeaderCellHorizontalAlignment', 'left'],\n      ['rowHeaderCellHoverBackgroundColor', 'rgba(235, 235, 235, 1)'],\n      ['rowHeaderCellHoverColor', 'rgba(0, 0, 0, 1)'],\n      ['rowHeaderCellPaddingBottom', 5],\n      ['rowHeaderCellPaddingLeft', 5],\n      ['rowHeaderCellPaddingRight', 5],\n      ['rowHeaderCellPaddingTop', 5],\n      ['rowHeaderCellSelectedBackgroundColor', 'rgba(217, 217, 217, 1)'],\n      ['rowHeaderCellSelectedColor', 'rgba(50, 50, 50, 1)'],\n      ['rowHeaderCellVerticalAlignment', 'center'],\n      ['rowHeaderCellWidth', 57],\n      ['scrollBarActiveColor', 'rgba(125, 125, 125, 1)'],\n      ['scrollBarBackgroundColor', 'rgba(240, 240, 240, 1)'],\n      ['scrollBarBorderColor', 'rgba(202, 202, 202, 1)'],\n      ['scrollBarBorderWidth', 0.5],\n      ['scrollBarBoxBorderRadius', 4.125],\n      ['scrollBarBoxColor', 'rgba(192, 192, 192, 1)'],\n      ['scrollBarBoxMargin', 2],\n      ['scrollBarBoxMinSize', 15],\n      ['scrollBarBoxWidth', 8],\n      ['scrollBarCornerBackgroundColor', 'rgba(240, 240, 240, 1)'],\n      ['scrollBarCornerBorderColor', 'rgba(202, 202, 202, 1)'],\n      ['scrollBarWidth', 11],\n      ['selectionHandleBorderColor', 'rgba(255, 255, 255, 1)'],\n      ['selectionHandleBorderWidth', 1.5],\n      ['selectionHandleColor', 'rgba(66, 133, 244, 1)'],\n      ['selectionHandleSize', 8],\n      ['selectionHandleType', 'square'],\n      ['selectionOverlayBorderColor', 'rgba(66, 133, 244, 1)'],\n      ['selectionOverlayBorderWidth', 1],\n      ['treeArrowBorderColor', 'rgba(195, 199, 202, 1)'],\n      ['treeArrowBorderWidth', 1],\n      ['treeArrowClickRadius', 5],\n      ['treeArrowColor', 'rgba(155, 155, 155, 1)'],\n      ['treeArrowHeight', 8],\n      ['treeArrowMarginLeft', 0],\n      ['treeArrowMarginRight', 5],\n      ['treeArrowMarginTop', 6],\n      ['treeArrowWidth', 13],\n      ['treeGridHeight', 250],\n      ['width', 'auto'],\n    ],\n  };\n}\n","/*jslint browser: true, unparam: true, todo: true*/\n/*globals define: true, MutationObserver: false, requestAnimationFrame: false, performance: false, btoa: false*/\n'use strict';\n\nimport defaults from './defaults';\n\nexport default function () {\n  var typeMap,\n    component = {};\n  component.dehyphenateProperty = function hyphenateProperty(prop) {\n    prop = prop.replace('--cdg-', '');\n    var p = '',\n      nextLetterCap;\n    Array.prototype.forEach.call(prop, function (char) {\n      if (nextLetterCap) {\n        nextLetterCap = false;\n        p += char.toUpperCase();\n        return;\n      }\n      if (char === '-') {\n        nextLetterCap = true;\n        return;\n      }\n      p += char;\n    });\n    return p;\n  };\n  component.hyphenateProperty = function hyphenateProperty(prop, cust) {\n    var p = '';\n    Array.prototype.forEach.call(prop, function (char) {\n      if (char === char.toUpperCase()) {\n        p += '-' + char.toLowerCase();\n        return;\n      }\n      p += char;\n    });\n    return (cust ? '--cdg-' : '') + p;\n  };\n  function getDefaultItem(base, item) {\n    var i = {},\n      r;\n    defaults(i);\n    r = i.defaults[base].filter(function (i) {\n      return (\n        i[0].toLowerCase() === item.toLowerCase() ||\n        component.hyphenateProperty(i[0]) === item.toLowerCase() ||\n        component.hyphenateProperty(i[0], true) === item.toLowerCase()\n      );\n    })[0];\n    return r;\n  }\n  component.applyComponentStyle = function (supressChangeAndDrawEvents, intf) {\n    if (!intf.isComponent) {\n      return;\n    }\n    var cStyle = window.getComputedStyle(\n        intf.tagName === 'CANVAS-DATAGRID' ? intf : intf.canvas,\n        null,\n      ),\n      defs = {};\n    intf.computedStyle = cStyle;\n    defaults(defs);\n    defs = defs.defaults.styles;\n    defs.forEach(function (def) {\n      var val;\n      val = cStyle.getPropertyValue(component.hyphenateProperty(def[0], true));\n      if (val === '') {\n        val = cStyle.getPropertyValue(\n          component.hyphenateProperty(def[0], false),\n        );\n      }\n      if (val !== '' && typeof val === 'string') {\n        intf.setStyleProperty(\n          def[0],\n          typeMap[typeof def[1]](\n            val.replace(/^\\s+/, '').replace(/\\s+$/, ''),\n            def[1],\n          ),\n          true,\n        );\n      }\n    });\n    if (!supressChangeAndDrawEvents && intf.dispatchEvent) {\n      requestAnimationFrame(function () {\n        intf.resize(true);\n      });\n      intf.dispatchEvent('stylechanged', intf.style);\n    }\n  };\n  typeMap = {\n    data: function (strData) {\n      try {\n        return JSON.parse(strData);\n      } catch (e) {\n        throw new Error('Cannot read JSON data in canvas-datagrid data.');\n      }\n    },\n    schema: function (strSchema) {\n      try {\n        return JSON.parse(strSchema);\n      } catch (e) {\n        throw new Error(\n          'Cannot read JSON data in canvas-datagrid schema attribute.',\n        );\n      }\n    },\n    number: function (strNum, def) {\n      var n = parseInt(strNum, 10);\n      return isNaN(n) ? def : n;\n    },\n    boolean: function (strBool) {\n      return /true/i.test(strBool);\n    },\n    string: function (str) {\n      return str;\n    },\n  };\n  component.getObservableAttributes = function () {\n    var i = {},\n      attrs = ['data', 'schema', 'style', 'className', 'name'];\n    defaults(i);\n    i.defaults.attributes.forEach(function (attr) {\n      attrs.push(attr[0].toLowerCase());\n    });\n    return attrs;\n  };\n  component.disconnectedCallback = function () {\n    this.connected = false;\n  };\n  component.connectedCallback = function () {\n    var intf = this;\n    intf.parentDOMNode.innerHTML = '';\n    intf.parentDOMNode.appendChild(intf.canvas);\n    intf.connected = true;\n    component.observe(intf);\n    component.applyComponentStyle(true, intf);\n    intf.resize(true);\n  };\n  component.adoptedCallback = function () {\n    this.resize();\n  };\n  component.attributeChangedCallback = function (attrName, oldVal, newVal) {\n    var tfn,\n      intf = this,\n      def;\n    if (attrName === 'style') {\n      component.applyComponentStyle(false, intf);\n      return;\n    }\n    if (attrName === 'data') {\n      if (intf.dataType === 'application/x-canvas-datagrid') {\n        intf.dataType = 'application/json+x-canvas-datagrid';\n      }\n      intf.data = newVal;\n      return;\n    }\n    if (attrName === 'schema') {\n      intf.schema = typeMap.schema(newVal);\n      return;\n    }\n    if (attrName === 'name') {\n      intf.name = newVal;\n      return;\n    }\n    if (attrName === 'class' || attrName === 'className') {\n      return;\n    }\n    def = getDefaultItem('attributes', attrName);\n    if (def) {\n      tfn = typeMap[typeof def[1]];\n      intf.attributes[def[0]] = tfn(newVal);\n      return;\n    }\n    if (/^on/.test(attrName)) {\n      intf.addEventListener('on' + attrName, Function('e', newVal));\n    }\n    return;\n  };\n  component.observe = function (intf) {\n    var observer;\n    if (!window.MutationObserver) {\n      return;\n    }\n    intf.applyComponentStyle = function () {\n      component.applyComponentStyle(false, intf);\n      intf.resize();\n    };\n    /**\n     * Applies the computed css styles to the grid.  In some browsers, changing directives in attached style sheets does not automatically update the styles in this component.  It is necessary to call this method to update in these cases.\n     * @memberof canvasDatagrid\n     * @name applyComponentStyle\n     * @method\n     */\n    observer = new window.MutationObserver(function (mutations) {\n      var checkInnerHTML, checkStyle;\n      Array.prototype.forEach.call(mutations, function (mutation) {\n        if (\n          mutation.attributeName === 'class' ||\n          mutation.attributeName === 'style'\n        ) {\n          checkStyle = true;\n          return;\n        }\n        if (mutation.target.nodeName === 'STYLE') {\n          checkStyle = true;\n          return;\n        }\n        if (\n          mutation.target.parentNode &&\n          mutation.target.parentNode.nodeName === 'STYLE'\n        ) {\n          checkStyle = true;\n          return;\n        }\n        if (\n          mutation.target === intf &&\n          (mutation.addedNodes.length > 0 || mutation.type === 'characterData')\n        ) {\n          checkInnerHTML = true;\n        }\n      });\n      if (checkStyle) {\n        intf.applyComponentStyle(false, intf);\n      }\n      if (checkInnerHTML) {\n        if (intf.dataType === 'application/x-canvas-datagrid') {\n          intf.dataType = 'application/json+x-canvas-datagrid';\n        }\n        intf.data = intf.innerHTML;\n      }\n    });\n    observer.observe(intf, {\n      characterData: true,\n      childList: true,\n      attributes: true,\n      subtree: true,\n    });\n    Array.prototype.forEach.call(\n      document.querySelectorAll('style'),\n      function (el) {\n        observer.observe(el, {\n          characterData: true,\n          childList: true,\n          attributes: true,\n          subtree: true,\n        });\n      },\n    );\n  };\n  return component;\n}\n","/*jslint browser: true, unparam: true, todo: true*/\n/*globals XMLSerializer: false, define: true, Blob: false, MutationObserver: false, requestAnimationFrame: false, performance: false, btoa: false*/\n'use strict';\n\nexport default function (self) {\n  var perfCounters = [],\n    cachedImagesDrawn = false,\n    drawCount = 0,\n    perfWindowSize = 300,\n    entityCount = [],\n    hiddenFrozenColumnCount = 0,\n    scrollDebugCounters = [],\n    touchPPSCounters = [];\n  self.htmlImageCache = {};\n  // more heavyweight version than fillArray defined in intf.js\n  function fillArray(low, high, step, def) {\n    step = step || 1;\n    var i = [],\n      x;\n    for (x = low; x <= high; x += step) {\n      i[x] = def === undefined ? x : typeof def === 'function' ? def(x) : def;\n    }\n    return i;\n  }\n  function drawPerfLine(w, h, x, y, perfArr, arrIndex, max, color, useAbs) {\n    var i = w / perfArr.length,\n      r = h / max;\n    x += self.canvasOffsetLeft;\n    y += self.canvasOffsetTop;\n    self.ctx.beginPath();\n    self.ctx.moveTo(x, y + h);\n    perfArr.forEach(function (n) {\n      var val = arrIndex === undefined ? n : n[arrIndex],\n        cx,\n        cy;\n      if (useAbs) {\n        val = Math.abs(val);\n      }\n      cx = x + i;\n      cy = y + h - val * r;\n      self.ctx.lineTo(cx, cy);\n      x += i;\n    });\n    self.ctx.moveTo(x + w, y + h);\n    self.ctx.strokeStyle = color;\n    self.ctx.stroke();\n  }\n  function drawOnAllImagesLoaded() {\n    var loaded = true;\n    Object.keys(self.htmlImageCache).forEach(function (html) {\n      if (!self.htmlImageCache[html].img.complete) {\n        loaded = false;\n      }\n    });\n    if (loaded && !cachedImagesDrawn) {\n      cachedImagesDrawn = true;\n      self.draw();\n    }\n  }\n  function drawHtml(cell) {\n    var img,\n      v = cell.innerHTML || cell.formattedValue,\n      cacheKey =\n        v.toString() + cell.rowIndex.toString() + cell.columnIndex.toString(),\n      x = Math.round(cell.x + self.canvasOffsetLeft),\n      y = Math.round(cell.y + self.canvasOffsetTop);\n    if (self.htmlImageCache[cacheKey]) {\n      img = self.htmlImageCache[cacheKey].img;\n      if (\n        self.htmlImageCache[cacheKey].height !== cell.height ||\n        self.htmlImageCache[cacheKey].width !== cell.width\n      ) {\n        // height and width of the cell has changed, invalidate cache\n        self.htmlImageCache[cacheKey] = undefined;\n      } else {\n        if (!img.complete) {\n          return;\n        }\n        return self.ctx.drawImage(img, x, y);\n      }\n    } else {\n      cachedImagesDrawn = false;\n    }\n    img = new Image(cell.width, cell.height);\n    self.htmlImageCache[cacheKey] = {\n      img,\n      width: cell.width,\n      height: cell.height,\n    };\n    img.onload = function () {\n      self.ctx.drawImage(img, x, y);\n      drawOnAllImagesLoaded();\n    };\n    img.src =\n      'data:image/svg+xml;base64,' +\n      btoa(\n        '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"' +\n          cell.width +\n          '\" height=\"' +\n          cell.height +\n          '\">\\n' +\n          '<foreignObject class=\"node\" x=\"0\" y=\"0\" width=\"100%\" height=\"100%\">\\n' +\n          '<body xmlns=\"http://www.w3.org/1999/xhtml\" style=\"margin:0;padding:0;\">\\n' +\n          v +\n          '\\n' +\n          '</body>' +\n          '</foreignObject>\\n' +\n          '</svg>\\n',\n      );\n  }\n  function drawOrderByArrow(x, y) {\n    var mt = self.style.columnHeaderOrderByArrowMarginTop * self.scale,\n      ml = self.style.columnHeaderOrderByArrowMarginLeft * self.scale,\n      mr = self.style.columnHeaderOrderByArrowMarginRight * self.scale,\n      aw = self.style.columnHeaderOrderByArrowWidth * self.scale,\n      ah = self.style.columnHeaderOrderByArrowHeight * self.scale;\n    x += self.canvasOffsetLeft;\n    y += self.canvasOffsetTop;\n    self.ctx.fillStyle = self.style.columnHeaderOrderByArrowColor;\n    self.ctx.strokeStyle = self.style.columnHeaderOrderByArrowBorderColor;\n    self.ctx.beginPath();\n    x = x + ml;\n    y = y + mt;\n    if (self.orderDirection === 'asc') {\n      self.ctx.moveTo(x, y);\n      self.ctx.lineTo(x + aw, y);\n      self.ctx.lineTo(x + aw * 0.5, y + ah);\n      self.ctx.moveTo(x, y);\n    } else {\n      self.ctx.lineTo(x, y + ah);\n      self.ctx.lineTo(x + aw, y + ah);\n      self.ctx.lineTo(x + aw * 0.5, y);\n      self.ctx.lineTo(x, y + ah);\n    }\n    self.ctx.stroke();\n    self.ctx.fill();\n    return ml + aw + mr;\n  }\n  function drawTreeArrow(cell, x, y) {\n    var mt = self.style.treeArrowMarginTop * self.scale,\n      mr = self.style.treeArrowMarginRight * self.scale,\n      ml = self.style.treeArrowMarginLeft * self.scale,\n      aw = self.style.treeArrowWidth * self.scale,\n      ah = self.style.treeArrowHeight * self.scale;\n    x += self.canvasOffsetLeft;\n    y += self.canvasOffsetTop;\n    self.ctx.fillStyle = self.style.treeArrowColor;\n    self.ctx.strokeStyle = self.style.treeArrowBorderColor;\n    self.ctx.beginPath();\n    x = x + ml;\n    y = y + mt;\n    if (self.openChildren[cell.rowIndex]) {\n      self.ctx.moveTo(x, y);\n      self.ctx.lineTo(x + aw, y);\n      self.ctx.lineTo(x + aw * 0.5, y + ah);\n      self.ctx.moveTo(x, y);\n    } else {\n      self.ctx.lineTo(x, y);\n      self.ctx.lineTo(x + ah, y + aw * 0.5);\n      self.ctx.lineTo(x, y + aw);\n      self.ctx.lineTo(x, y);\n    }\n    self.ctx.stroke();\n    self.ctx.fill();\n    return ml + aw + mr;\n  }\n  function radiusRect(x, y, w, h, radius) {\n    x += self.canvasOffsetLeft;\n    y += self.canvasOffsetTop;\n    var r = x + w,\n      b = y + h;\n    self.ctx.beginPath();\n    self.ctx.moveTo(x + radius, y);\n    self.ctx.lineTo(r - radius, y);\n    self.ctx.quadraticCurveTo(r, y, r, y + radius);\n    self.ctx.lineTo(r, y + h - radius);\n    self.ctx.quadraticCurveTo(r, b, r - radius, b);\n    self.ctx.lineTo(x + radius, b);\n    self.ctx.quadraticCurveTo(x, b, x, b - radius);\n    self.ctx.lineTo(x, y + radius);\n    self.ctx.quadraticCurveTo(x, y, x + radius, y);\n  }\n  function fillRect(x, y, w, h) {\n    x += self.canvasOffsetLeft;\n    y += self.canvasOffsetTop;\n    self.ctx.fillRect(x, y, w, h);\n  }\n  function strokeRect(x, y, w, h) {\n    x += self.canvasOffsetLeft;\n    y += self.canvasOffsetTop;\n    self.ctx.strokeRect(x, y, w, h);\n  }\n  function fillText(text, x, y) {\n    x += self.canvasOffsetLeft;\n    y += self.canvasOffsetTop;\n    self.ctx.fillText(text, x, y);\n  }\n  function fillCircle(x, y, r) {\n    x += self.canvasOffsetLeft;\n    y += self.canvasOffsetTop;\n    self.ctx.beginPath();\n    self.ctx.arc(x, y, r, 0, 2 * Math.PI);\n    self.ctx.fill();\n  }\n  function strokeCircle(x, y, r) {\n    x += self.canvasOffsetLeft;\n    y += self.canvasOffsetTop;\n    self.ctx.beginPath();\n    self.ctx.arc(x, y, r, 0, 2 * Math.PI);\n    self.ctx.stroke();\n  }\n  function clipFrozenArea(mode) {\n    // 0 both, 1 rows, 2 cols\n    // self.lastFrozenColumnPixel;\n    // self.lastFrozenRowPixel;\n    self.ctx.beginPath();\n    if (mode === 0) {\n      self.ctx.moveTo(self.lastFrozenColumnPixel, self.lastFrozenRowPixel);\n      self.ctx.lineTo(self.lastFrozenColumnPixel, self.height);\n      self.ctx.lineTo(self.width, self.height);\n      self.ctx.lineTo(self.width, self.lastFrozenRowPixel);\n    }\n    if (mode === 1) {\n      self.ctx.moveTo(0, self.lastFrozenRowPixel);\n      self.ctx.lineTo(0, self.height);\n      self.ctx.lineTo(self.width, self.height);\n      self.ctx.lineTo(self.width, self.lastFrozenRowPixel);\n    }\n    if (mode === 2) {\n      self.ctx.moveTo(self.lastFrozenColumnPixel, 0);\n      self.ctx.lineTo(self.width, 0);\n      self.ctx.lineTo(self.width, self.height);\n      self.ctx.lineTo(self.lastFrozenColumnPixel, self.height);\n    }\n    self.ctx.clip();\n  }\n  function fillHandle(x, y, r) {\n    if (self.style.selectionHandleType === 'circle') {\n      return fillCircle(x, y, r * 0.5);\n    }\n    fillRect(x - r * 0.5, y - r * 0.5, r, r);\n  }\n  function strokeHandle(x, y, r) {\n    if (self.style.selectionHandleType === 'circle') {\n      return strokeCircle(x, y, r * 0.5);\n    }\n    strokeRect(x - r * 0.5, y - r * 0.5, r, r);\n  }\n  function addselectionHandle(c, pos) {\n    var hw = self.style.selectionHandleSize,\n      p = {\n        tr: function () {\n          fillHandle(c.x + c.width, c.y, hw);\n          strokeHandle(c.x + c.width, c.y, hw);\n        },\n        br: function () {\n          fillHandle(c.x + c.width, c.y + c.height, hw);\n          strokeHandle(c.x + c.width, c.y + c.height, hw);\n        },\n        tl: function () {\n          fillHandle(c.x, c.y, hw);\n          strokeHandle(c.x, c.y, hw);\n        },\n        bl: function () {\n          fillHandle(c.x, c.y + c.height, hw);\n          strokeHandle(c.x, c.y + c.height, hw);\n        },\n      };\n    p[pos]();\n  }\n  function addBorderLine(c, pos) {\n    self.ctx.beginPath();\n    var p = {\n      t: function () {\n        self.ctx.moveTo(\n          c.x + self.canvasOffsetLeft,\n          c.y + self.canvasOffsetTop,\n        );\n        self.ctx.lineTo(\n          c.x + self.canvasOffsetLeft + c.width,\n          c.y + self.canvasOffsetTop,\n        );\n      },\n      r: function () {\n        self.ctx.moveTo(\n          c.x + self.canvasOffsetLeft + c.width,\n          c.y + self.canvasOffsetTop,\n        );\n        self.ctx.lineTo(\n          c.x + self.canvasOffsetLeft + c.width,\n          c.y + self.canvasOffsetTop + c.height,\n        );\n      },\n      b: function () {\n        self.ctx.moveTo(\n          c.x + self.canvasOffsetLeft,\n          c.y + self.canvasOffsetTop + c.height,\n        );\n        self.ctx.lineTo(\n          c.x + self.canvasOffsetLeft + c.width,\n          c.y + self.canvasOffsetTop + c.height,\n        );\n      },\n      l: function () {\n        self.ctx.moveTo(\n          c.x + self.canvasOffsetLeft,\n          c.y + self.canvasOffsetTop,\n        );\n        self.ctx.lineTo(\n          c.x + self.canvasOffsetLeft,\n          c.y + self.canvasOffsetTop + c.height,\n        );\n      },\n    };\n    p[pos]();\n    self.ctx.stroke();\n  }\n  function addEllipsis(text, width) {\n    var c,\n      w = 0;\n    if (self.ellipsisCache[text] && self.ellipsisCache[text][width]) {\n      return self.ellipsisCache[text][width];\n    }\n    //TODO Add ellipsis back when there is a fast way to do it\n    w = self.ctx.measureText(text).width;\n    self.ellipsisCache[text] = self.ellipsisCache[text] || {};\n    c = { value: text, width: w };\n    self.ellipsisCache[text][width] = c;\n    return c;\n  }\n  function wrapText(cell, splitChar) {\n    if (!cell.formattedValue) {\n      return {\n        lines: [{ width: 0, value: '' }],\n        width: 0,\n        height: cell.calculatedLineHeight,\n      };\n    }\n    var max = 0,\n      n = '\\n',\n      x,\n      word,\n      words = cell.formattedValue.split(splitChar),\n      textHeight = cell.calculatedLineHeight,\n      lines = [],\n      out = [],\n      wrap = self.style.cellWhiteSpace !== 'nowrap',\n      autoResize = self.attributes.autoResizeRows && wrap,\n      elWidth,\n      et = self.attributes.ellipsisText,\n      elClipLength,\n      plWidth,\n      clippedVal,\n      ogWordWidth,\n      previousLine,\n      line = {\n        width: 0,\n        value: '',\n      },\n      cHeight = wrap ? cell.paddedHeight : cell.calculatedLineHeight;\n    lines.push(line);\n    elWidth = self.ctx.measureText(' ' + et).width;\n    for (x = 0; x < words.length; x += 1) {\n      word = words[x];\n      var measure = self.ctx.measureText(word + splitChar);\n      if (line.width + measure.width + elWidth < cell.paddedWidth) {\n        line.value += word + splitChar;\n        line.width += measure.width;\n        continue;\n      }\n      // if there is a hyphenated word that is too long\n      // split it and add the split set to the array\n      // then back up and re-read new split set\n      // this behavior seems right, it might not be\n      if (/\\w-\\w/.test(word) && cell.paddedWidth < measure.width) {\n        words.splice(x, 1, word.split('-')[0] + '-', word.split('-')[1]);\n        x -= 1;\n        continue;\n      }\n      line = {\n        width: measure.width,\n        value: word + splitChar,\n      };\n      if (x === 0) {\n        lines = [];\n        lines.push(line);\n      }\n      textHeight += cell.calculatedLineHeight;\n      if (textHeight > cHeight && !autoResize) {\n        if (lines.length === 0) {\n          break;\n        }\n        elClipLength = 1;\n        previousLine = lines[lines.length - 1];\n        if (previousLine.width < cell.paddedWidth && words.length === 1) {\n          break;\n        }\n        clippedVal = previousLine.value + word;\n        plWidth = self.ctx.measureText(clippedVal + et).width;\n        var originText = clippedVal;\n        if (plWidth > cell.paddedWidth) {\n          var stepLength = parseInt(clippedVal.length / 2);\n          var direction = -1;\n          while (stepLength > 0) {\n            clippedVal = originText.substr(\n              0,\n              stepLength * direction + clippedVal.length,\n            );\n            plWidth = self.ctx.measureText(clippedVal + et).width;\n            direction = plWidth > cell.paddedWidth ? -1 : 1;\n            stepLength = parseInt(stepLength / 2);\n          }\n        }\n        clippedVal =\n          clippedVal + (originText.length != clippedVal.length ? et : '');\n        previousLine.value = clippedVal;\n        previousLine.width = plWidth;\n        break;\n      }\n      if (x > 0) {\n        lines.push(line);\n      }\n    }\n    return {\n      lines: lines,\n      width: max,\n      height: cell.calculatedLineHeight * lines.length,\n    };\n  }\n  function drawText(cell) {\n    var ll = cell.text.lines.length,\n      h = cell.fontHeight * cell.lineHeight,\n      x,\n      line,\n      wrap = self.style.cellWhiteSpace !== 'nowrap',\n      textHeight = 0;\n    for (x = 0; x < cell.text.lines.length; x += 1) {\n      line = cell.text.lines[x];\n      var vPos =\n          Math.max(\n            (cell.height -\n              (wrap ? cell.text.height : cell.calculatedLineHeight)) *\n              0.5,\n            0,\n          ) + h,\n        hPos = cell.paddingLeft + cell.treeArrowWidth + cell.orderByArrowWidth;\n      if (cell.horizontalAlignment === 'right') {\n        hPos = cell.paddingLeft + cell.paddedWidth - line.width;\n      } else if (cell.horizontalAlignment === 'center') {\n        hPos =\n          cell.paddingLeft +\n          (cell.paddedWidth + cell.paddingRight) / 2 -\n          line.width / 2;\n      }\n      if (cell.verticalAlignment === 'top') {\n        vPos = cell.calculatedLineHeight;\n      } else if (cell.verticalAlignment === 'bottom') {\n        vPos = cell.height - cell.paddingBottom - cell.text.height;\n      }\n      line.height = h + cell.lineSpacing;\n      line.offsetLeft = hPos;\n      line.offsetTop = vPos;\n      line.x = cell.x + hPos;\n      line.y = cell.y + textHeight + vPos;\n      textHeight += line.height;\n      fillText(line.value, line.x, line.y);\n    }\n    if (self.attributes.debug && cell.active) {\n      requestAnimationFrame(function () {\n        self.ctx.font = self.style.debugFont;\n        self.ctx.fillStyle = self.style.debugColor;\n        fillText(\n          JSON.stringify(\n            {\n              x: cell.x,\n              y: cell.y,\n              h: cell.height,\n              w: cell.width,\n              pw: cell.paddedWidth,\n              idx: cell.columnIndex,\n              idx_ord: cell.sortColumnIndex,\n            },\n            null,\n            '\\t',\n          ),\n          cell.x + 14,\n          cell.y + 14,\n        );\n        fillText(\n          JSON.stringify(\n            cell.text.lines.map(function (l) {\n              return { w: l.width, v: l.value.length };\n            }),\n            null,\n            '\\t',\n          ),\n          cell.x + 14,\n          cell.y + 30,\n        );\n      });\n    }\n  }\n  function getFrozenColumnsWidth() {\n    var w = 0,\n      s = self.getSchema(),\n      x = 0,\n      n = Math.min(self.frozenColumn, s.length),\n      column;\n    hiddenFrozenColumnCount = 0;\n    while (x < n) {\n      column = s[x];\n      if (column.hidden) {\n        hiddenFrozenColumnCount += 1;\n      } else {\n        w += self.getColummnWidth(x);\n      }\n      x += 1;\n    }\n    return w;\n  }\n  /**\n   * Redraws the grid. No matter what the change, this is the only method required to refresh everything.\n   * @memberof canvasDatagrid\n   * @name draw\n   * @method\n   */\n  // r = literal row index\n  // rd = row data array\n  // i = user order index\n  // o = literal data index\n  // y = y drawing cursor\n  // x = x drawing cursor\n  // s = visible schema array\n  // cx = current x drawing cursor sub calculation var\n  // cy = current y drawing cursor sub calculation var\n  // a = static cell (like corner cell)\n  // p = perf counter\n  // l = data length\n  // u = current cell\n  // h = current height\n  // w = current width\n  self.draw = function (internal) {\n    if (self.dispatchEvent('beforedraw', {})) {\n      return;\n    }\n    if (!self.isChildGrid && (!self.height || !self.width)) {\n      return;\n    }\n    if (self.isChildGrid && internal) {\n      requestAnimationFrame(self.parentGrid.draw);\n      return;\n    }\n    if (self.intf.visible === false) {\n      return;\n    }\n    // initial values\n    var checkScrollHeight,\n      rowHeaderCell,\n      p,\n      cx,\n      cy,\n      treeGrid,\n      rowOpen,\n      rowHeight,\n      cornerCell,\n      y,\n      x,\n      c,\n      h,\n      w,\n      schema,\n      rowIndex,\n      rowData,\n      aCell,\n      viewData = self.viewData || [],\n      bc = self.style.gridBorderCollapse === 'collapse',\n      selectionBorders = [],\n      moveBorders = [],\n      selectionHandles = [],\n      rowHeaders = [],\n      l = viewData.length,\n      u = self.currentCell || {},\n      columnHeaderCellHeight = self.getColumnHeaderCellHeight(),\n      rowHeaderCellWidth = self.getRowHeaderCellWidth(),\n      cellHeight = self.style.cellHeight;\n    drawCount += 1;\n    p = performance.now();\n    self.visibleRowHeights = [];\n    // if data length has changed, there is no way to know\n    if (viewData.length > self.orders.rows.length) {\n      self.createRowOrders();\n    }\n    function drawScrollBars() {\n      var drawCorner,\n        en = self.scrollBox.entities,\n        m = self.style.scrollBarBoxMargin * 2;\n      self.ctx.strokeStyle = self.style.scrollBarBorderColor;\n      self.ctx.lineWidth = self.style.scrollBarBorderWidth;\n      en.horizontalBox.x =\n        rowHeaderCellWidth +\n        self.style.scrollBarBoxMargin +\n        (en.horizontalBar.width - self.scrollBox.scrollBoxWidth) *\n          (self.scrollBox.scrollLeft / self.scrollBox.scrollWidth);\n      en.verticalBox.y =\n        columnHeaderCellHeight +\n        self.style.scrollBarBoxMargin +\n        (en.verticalBar.height - self.scrollBox.scrollBoxHeight) *\n          (self.scrollBox.scrollTop / self.scrollBox.scrollHeight);\n      if (self.scrollBox.horizontalBarVisible) {\n        self.ctx.fillStyle = self.style.scrollBarBackgroundColor;\n        fillRect(\n          en.horizontalBar.x,\n          en.horizontalBar.y,\n          en.horizontalBar.width + m,\n          en.horizontalBar.height,\n        );\n        strokeRect(\n          en.horizontalBar.x,\n          en.horizontalBar.y,\n          en.horizontalBar.width + m,\n          en.horizontalBar.height,\n        );\n        self.ctx.fillStyle = self.style.scrollBarBoxColor;\n        if (self.scrollBox.horizontalBoxVisible) {\n          if (/horizontal/.test(u.context)) {\n            self.ctx.fillStyle = self.style.scrollBarActiveColor;\n          }\n          radiusRect(\n            en.horizontalBox.x,\n            en.horizontalBox.y,\n            en.horizontalBox.width,\n            en.horizontalBox.height,\n            self.style.scrollBarBoxBorderRadius,\n          );\n          self.ctx.stroke();\n          self.ctx.fill();\n        }\n        drawCorner = true;\n        self.visibleCells.unshift(en.horizontalBar);\n        self.visibleCells.unshift(en.horizontalBox);\n      }\n      if (self.scrollBox.verticalBarVisible) {\n        self.ctx.fillStyle = self.style.scrollBarBackgroundColor;\n        fillRect(\n          en.verticalBar.x,\n          en.verticalBar.y,\n          en.verticalBar.width,\n          en.verticalBar.height + m,\n        );\n        strokeRect(\n          en.verticalBar.x,\n          en.verticalBar.y,\n          en.verticalBar.width,\n          en.verticalBar.height + m,\n        );\n        if (self.scrollBox.verticalBoxVisible) {\n          self.ctx.fillStyle = self.style.scrollBarBoxColor;\n          if (/vertical/.test(u.context)) {\n            self.ctx.fillStyle = self.style.scrollBarActiveColor;\n          }\n          radiusRect(\n            en.verticalBox.x,\n            en.verticalBox.y,\n            en.verticalBox.width,\n            en.verticalBox.height,\n            self.style.scrollBarBoxBorderRadius,\n          );\n          self.ctx.stroke();\n          self.ctx.fill();\n        }\n        drawCorner = true;\n        self.visibleCells.unshift(en.verticalBar);\n        self.visibleCells.unshift(en.verticalBox);\n      }\n      if (drawCorner) {\n        //corner\n        self.ctx.strokeStyle = self.style.scrollBarCornerBorderColor;\n        self.ctx.fillStyle = self.style.scrollBarCornerBackgroundColor;\n        radiusRect(\n          en.corner.x,\n          en.corner.y,\n          en.corner.width,\n          en.corner.height,\n          0,\n        );\n        self.ctx.stroke();\n        self.ctx.fill();\n        self.visibleCells.unshift(en.corner);\n      }\n    }\n    function createHandlesOverlayArray(cell) {\n      if (self.attributes.allowMovingSelection || self.mobile) {\n        if (\n          cell.selectionBorderTop &&\n          cell.selectionBorderRight &&\n          self.mobile\n        ) {\n          selectionHandles.push([cell, 'tr']);\n          cell.selectionHandle = 'tr';\n        }\n        if (\n          cell.selectionBorderTop &&\n          cell.selectionBorderLeft &&\n          self.mobile\n        ) {\n          selectionHandles.push([cell, 'tl']);\n          cell.selectionHandle = 'tl';\n        }\n        if (\n          cell.selectionBorderBottom &&\n          cell.selectionBorderLeft &&\n          self.mobile\n        ) {\n          selectionHandles.push([cell, 'bl']);\n          cell.selectionHandle = 'bl';\n        }\n        if (\n          cell.selectionBorderBottom &&\n          cell.selectionBorderRight &&\n          (self.attributes.selectionHandleBehavior !== 'none' || self.mobile)\n        ) {\n          selectionHandles.push([cell, 'br']);\n          cell.selectionHandle = 'br';\n        }\n      }\n    }\n    function createBorderOverlayArray(\n      cell,\n      drawArray,\n      propPrefix,\n      offsetPoint,\n    ) {\n      offsetPoint = offsetPoint || { x: 0, y: 0 };\n      cell.selectionBorder = '';\n      if (\n        !cell.isRowHeader &&\n        self.selections[cell.rowIndex + -offsetPoint.y] &&\n        self.selections[cell.rowIndex + -offsetPoint.y].indexOf(\n          cell.columnIndex + -offsetPoint.x,\n        ) !== -1\n      ) {\n        if (\n          (!self.selections[cell.rowIndex - 1 + -offsetPoint.y] ||\n            self.selections[cell.rowIndex - 1 + -offsetPoint.y].indexOf(\n              cell.columnIndex + -offsetPoint.x,\n            ) === -1 ||\n            cell.rowIndex === 0) &&\n          !cell.isHeader\n        ) {\n          drawArray.push([cell, 't']);\n          cell[propPrefix + 'BorderTop'] = true;\n          cell[propPrefix + 'Border'] += 't';\n        }\n        if (\n          !self.selections[cell.rowIndex + 1 + -offsetPoint.y] ||\n          self.selections[cell.rowIndex + 1 + -offsetPoint.y].indexOf(\n            cell.columnIndex + -offsetPoint.x,\n          ) === -1\n        ) {\n          drawArray.push([cell, 'b']);\n          cell[propPrefix + 'BorderBottom'] = true;\n          cell[propPrefix + 'Border'] += 'b';\n        }\n        if (\n          !self.selections[cell.rowIndex + -offsetPoint.y] ||\n          cell.columnIndex === 0 ||\n          self.selections[cell.rowIndex + -offsetPoint.y].indexOf(\n            cell.columnIndex - 1 + -offsetPoint.x,\n          ) === -1\n        ) {\n          drawArray.push([cell, 'l']);\n          cell[propPrefix + 'BorderLeft'] = true;\n          cell[propPrefix + 'Border'] += 'l';\n        }\n        if (\n          !self.selections[cell.rowIndex + -offsetPoint.y] ||\n          cell.columnIndex === schema.length ||\n          self.selections[cell.rowIndex + -offsetPoint.y].indexOf(\n            cell.columnIndex + 1 + -offsetPoint.x,\n          ) === -1\n        ) {\n          drawArray.push([cell, 'r']);\n          cell[propPrefix + 'BorderRight'] = true;\n          cell[propPrefix + 'Border'] += 'r';\n        }\n      }\n    }\n    function drawCell(rowData, rowOrderIndex, rowIndex) {\n      return function drawEach(header, headerIndex, columnOrderIndex) {\n        if (header.hidden) {\n          return 0;\n        }\n        var cellStyle = header.style || 'cell',\n          cellGridAttributes,\n          cell,\n          isHeader = /HeaderCell/.test(cellStyle),\n          isCorner = /cornerCell/.test(cellStyle),\n          isRowHeader = 'rowHeaderCell' === cellStyle,\n          isColumnHeader = 'columnHeaderCell' === cellStyle,\n          wrap = self.style.cellWhiteSpace !== 'nowrap',\n          selected =\n            self.selections[rowOrderIndex] &&\n            self.selections[rowOrderIndex].indexOf(columnOrderIndex) !== -1,\n          hovered =\n            self.hovers.rowIndex === rowOrderIndex &&\n            self.hovers.columnIndex === columnOrderIndex,\n          active =\n            self.activeCell.rowIndex === rowOrderIndex &&\n            self.activeCell.columnIndex === columnOrderIndex,\n          isColumnHeaderCellCap = cellStyle === 'columnHeaderCellCap',\n          rawValue = rowData ? rowData[header.name] : undefined,\n          isGrid = header.type === 'canvas-datagrid',\n          activeHeader =\n            (self.orders.rows[self.activeCell.rowIndex] === rowOrderIndex ||\n              self.orders.columns[self.activeCell.columnIndex] ===\n                headerIndex) &&\n            (columnOrderIndex === -1 || rowOrderIndex === -1)\n              ? isRowHeader\n                ? 'activeRowHeaderCell'\n                : 'activeColumnHeaderCell'\n              : false,\n          val,\n          f = self.formatters[header.type || 'string'],\n          orderByArrowSize = 0,\n          treeArrowSize = 0,\n          cellWidth = self.sizes.columns[headerIndex] || header.width,\n          ev = {\n            value: rawValue,\n            row: rowData,\n            header: header,\n          };\n        if (isColumnHeaderCellCap) {\n          cellWidth = w - x;\n        }\n        // if no data or schema are defined, a width is provided to the stub column\n        if (cellWidth === undefined) {\n          cellWidth = self.style.cellWidth;\n        }\n        cellWidth = cellWidth * self.scale;\n        if (x + cellWidth + self.style.cellBorderWidth < 0) {\n          x += cellWidth + self.style.cellBorderWidth;\n        }\n        if (active && cellStyle !== 'cornerCell') {\n          cellStyle = 'activeCell';\n        }\n        if (self.visibleRows.indexOf(rowIndex) === -1 && !isHeader) {\n          self.visibleRows.push(rowIndex);\n        }\n        val = self.dispatchEvent('formatcellvalue', ev);\n        cx = x;\n        cy = y;\n        if (cellStyle === 'cornerCell') {\n          cx = 0;\n          cy = 0;\n        } else if (isRowHeader) {\n          cx = 0;\n        } else if (isHeader) {\n          cy = 0;\n        }\n        cell = {\n          type: isGrid ? 'canvas-datagrid-cell' : header.type,\n          style: cellStyle,\n          nodeType: 'canvas-datagrid-cell',\n          x: cx,\n          y: cy,\n          fontHeight: (self.style[cellStyle + 'FontHeight'] || 0) * self.scale,\n          horizontalAlignment: self.style[cellStyle + 'HorizontalAlignment'],\n          verticalAlignment: self.style[cellStyle + 'VerticalAlignment'],\n          paddingLeft:\n            (self.style[cellStyle + 'PaddingLeft'] || 0) * self.scale,\n          paddingTop: (self.style[cellStyle + 'PaddingTop'] || 0) * self.scale,\n          paddingRight:\n            (self.style[cellStyle + 'PaddingRight'] || 0) * self.scale,\n          paddingBottom:\n            (self.style[cellStyle + 'PaddingBottom'] || 0) * self.scale,\n          whiteSpace: self.style.cellWhiteSpace,\n          lineHeight: self.style.cellLineHeight,\n          lineSpacing: self.style.cellLineSpacing,\n          offsetTop: self.canvasOffsetTop + cy,\n          offsetLeft: self.canvasOffsetLeft + cx,\n          scrollTop: self.scrollBox.scrollTop,\n          scrollLeft: self.scrollBox.scrollLeft,\n          active: active || activeHeader,\n          hovered: hovered,\n          selected: selected,\n          width: cellWidth,\n          height: cellHeight,\n          offsetWidth: cellWidth,\n          offsetHeight: cellHeight,\n          parentNode: self.intf.parentNode,\n          offsetParent: self.intf.parentNode,\n          data: rowData,\n          isCorner: isCorner,\n          isHeader: isHeader,\n          isColumnHeader: isColumnHeader,\n          isColumnHeaderCellCap: isColumnHeaderCellCap,\n          isRowHeader: isRowHeader,\n          rowOpen: rowOpen,\n          header: header,\n\n          columnIndex: columnOrderIndex,\n          rowIndex: rowOrderIndex,\n\n          viewRowIndex: rowOrderIndex,\n          viewColumnIndex: columnOrderIndex,\n\n          boundRowIndex: self.getBoundRowIndexFromViewRowIndex(rowOrderIndex),\n          boundColumnIndex: columnOrderIndex,\n\n          sortColumnIndex: headerIndex,\n          sortRowIndex: rowIndex,\n\n          isGrid: isGrid,\n          isNormal: !isGrid && !isCorner && !isHeader,\n          gridId: (self.attributes.name || '') + rowIndex + ':' + headerIndex,\n          parentGrid: self.intf,\n          innerHTML: '',\n          activeHeader: activeHeader,\n          value:\n            isHeader && !isRowHeader ? header.title || header.name : rawValue,\n        };\n        cell.calculatedLineHeight =\n          cell.fontHeight * cell.lineHeight + cell.lineSpacing;\n        cell.paddedWidth = cell.width - cell.paddingRight - cell.paddingLeft;\n        cell.paddedHeight = cell.height - cell.paddingTop - cell.paddingBottom;\n        ev.cell = cell;\n        cell.userHeight = cell.isHeader ? self.sizes.rows[-1] : rowHeight;\n        cell.userWidth = cell.isHeader\n          ? self.sizes.columns.cornerCell\n          : self.sizes.columns[headerIndex];\n        self.visibleCells.unshift(cell);\n        if (self.dispatchEvent('beforerendercell', ev)) {\n          return;\n        }\n        self.ctx.fillStyle = self.style[cellStyle + 'BackgroundColor'];\n        self.ctx.strokeStyle = self.style[cellStyle + 'BorderColor'];\n        self.ctx.lineWidth = self.style[cellStyle + 'BorderWidth'];\n        if (hovered) {\n          self.ctx.fillStyle = self.style[cellStyle + 'HoverBackgroundColor'];\n          self.ctx.strokeStyle = self.style[cellStyle + 'HoverBorderColor'];\n        }\n        if (selected) {\n          self.ctx.fillStyle =\n            self.style[cellStyle + 'SelectedBackgroundColor'];\n          self.ctx.strokeStyle = self.style[cellStyle + 'SelectedBorderColor'];\n        }\n        if (activeHeader) {\n          self.ctx.fillStyle = self.style[activeHeader + 'BackgroundColor'];\n        }\n        self.dispatchEvent('rendercell', ev);\n        if (cell.isGrid) {\n          if (cell.height !== rowHeight) {\n            cell.height = rowHeight || self.style.cellHeightWithChildGrid;\n            checkScrollHeight = true;\n          }\n          cell.width =\n            self.sizes.columns[headerIndex] ||\n            self.style.cellWidthWithChildGrid;\n        }\n        if (rowOpen && !cell.isRowHeader) {\n          cell.height = self.sizes.rows[rowIndex] || self.style.cellHeight;\n        }\n        if (!cell.isGrid) {\n          fillRect(cx, cy, cell.width, cell.height);\n          strokeRect(cx, cy, cell.width, cell.height);\n        }\n        self.ctx.save();\n        radiusRect(cell.x, cell.y, cell.width, cell.height, 0);\n        self.ctx.clip();\n        self.dispatchEvent('afterrendercell', ev);\n        if (cell.height !== cellHeight && !(rowOpen && !cell.isRowHeader)) {\n          self.sizes.rows[isHeader ? -1 : rowIndex] = cell.height;\n          checkScrollHeight = true;\n        }\n        if (cell.width !== cellWidth) {\n          self.sizes.columns[headerIndex] = cell.width;\n          checkScrollHeight = true;\n        }\n        if (isRowHeader && self.attributes.tree) {\n          if (!self.dispatchEvent('rendertreearrow', ev)) {\n            treeArrowSize = drawTreeArrow(\n              cell,\n              self.style[cellStyle + 'PaddingLeft'],\n              cy,\n              0,\n            );\n          }\n        }\n        if ((self.attributes.showRowNumbers && isRowHeader) || !isRowHeader) {\n          if (cell.isGrid && !self.dispatchEvent('beforerendercellgrid', ev)) {\n            if (!self.childGrids[cell.gridId]) {\n              // HACK: this only allows setting of the child grids styles if data is set _after_\n              // this is less than desirable.  An interface needs to be made to effect the\n              // style of all cell grids.  One for individual grids already exists.\n              cellGridAttributes = self.cellGridAttributes;\n              cellGridAttributes.name = self.attributes.saveAppearance\n                ? cell.gridId\n                : undefined;\n              cellGridAttributes.component = false;\n              cellGridAttributes.parentNode = cell;\n              cellGridAttributes.data = rawValue;\n              ev.cellGridAttributes = cellGridAttributes;\n              if (self.dispatchEvent('beforecreatecellgrid', ev)) {\n                return;\n              }\n              self.childGrids[cell.gridId] = self.createGrid(\n                cellGridAttributes,\n              );\n              self.sizes.rows[rowIndex] =\n                self.sizes.rows[rowIndex] || self.style.cellGridHeight;\n              checkScrollHeight = true;\n            }\n            cell.grid = self.childGrids[cell.gridId];\n            cell.grid.parentNode = cell;\n            cell.grid.visible = true;\n            cell.grid.draw();\n            self.dispatchEvent('rendercellgrid', ev);\n          } else if (!cell.isGrid) {\n            if (self.childGrids[cell.gridId]) {\n              self.childGrids[cell.gridId].parentNode.offsetHeight = 0;\n            }\n            if (isHeader && self.orderBy === header.name) {\n              if (!self.dispatchEvent('renderorderbyarrow', ev)) {\n                orderByArrowSize = drawOrderByArrow(\n                  cx + self.style[cellStyle + 'PaddingLeft'],\n                  0,\n                );\n              }\n            }\n            self.ctx.fillStyle = self.style[cellStyle + 'Color'];\n            if (hovered) {\n              self.ctx.fillStyle = self.style[cellStyle + 'HoverColor'];\n            }\n            if (selected) {\n              self.ctx.fillStyle = self.style[cellStyle + 'SelectedColor'];\n            }\n            if (activeHeader) {\n              self.ctx.fillStyle = self.style[activeHeader + 'Color'];\n            }\n            cell.treeArrowWidth = treeArrowSize;\n            cell.orderByArrowWidth = orderByArrowSize;\n            // create text ref to see if height needs to expand\n            val = val !== undefined ? val : f ? f(ev) : '';\n            if (val === undefined && !f) {\n              val = '';\n              console.warn(\n                'canvas-datagrid: Unknown format ' +\n                  header.type +\n                  ' add a cellFormater',\n              );\n            }\n            cell.formattedValue = (val !== undefined && val !== null\n              ? val\n              : ''\n            ).toString();\n            if (\n              self.columnFilters &&\n              self.columnFilters[val] !== undefined &&\n              isHeader\n            ) {\n              cell.formattedValue = self.attributes.filterTextPrefix + val;\n            }\n            self.ctx.font =\n              self.style[cellStyle + 'FontHeight'] * self.scale +\n              'px ' +\n              self.style[cellStyle + 'FontName'];\n            if (!self.dispatchEvent('formattext', ev)) {\n              cell.text = wrapText(cell, ' ');\n            }\n            if (!self.dispatchEvent('rendertext', ev)) {\n              if (cell.innerHTML || header.type === 'html') {\n                drawHtml(cell);\n              } else {\n                drawText(cell);\n              }\n\n              if (wrap && cell.text && cell.text.height > rowHeight) {\n                self.sizes.rows[isHeader ? -1 : rowIndex] = cell.text.height;\n                checkScrollHeight = true;\n              }\n            }\n          }\n        }\n        if (active) {\n          aCell = cell;\n        }\n        createBorderOverlayArray(cell, selectionBorders, 'selection');\n        // createBorderOverlayArray calculates data for createHandlesOverlayArray so it must go 2nd\n        createHandlesOverlayArray(cell);\n        if (self.movingSelection) {\n          createBorderOverlayArray(cell, moveBorders, 'move', self.moveOffset);\n        }\n        self.ctx.restore();\n        x += cell.width + (bc ? 0 : self.style.cellBorderWidth);\n        return cell.width;\n      };\n    }\n    function drawRowHeader(rowData, rowIndex, rowOrderIndex) {\n      if (self.attributes.showRowHeaders) {\n        x = 0;\n\n        // When filtering we'd like to display the actual row numbers,\n        // as it is in the unfiltered data, instead of simply the viewed\n        // row index + 1:\n        const filteredRowNumber =\n          self.getBoundRowIndexFromViewRowIndex(rowIndex) + 1;\n\n        const rowHeaderValue = self.hasActiveFilters()\n          ? filteredRowNumber\n          : rowIndex + 1;\n\n        const rowHeaderCell = { rowHeaderCell: rowHeaderValue };\n        const headerDescription = {\n          name: 'rowHeaderCell',\n          width: self.sizes.columns[-1] || self.style.rowHeaderCellWidth,\n          style: 'rowHeaderCell',\n          type: 'string',\n          data: rowHeaderValue,\n          index: -1,\n        };\n        rowOpen = self.openChildren[rowIndex];\n        drawCell(rowHeaderCell, rowOrderIndex, rowIndex)(\n          headerDescription,\n          -1,\n          -1,\n        );\n      }\n    }\n    function drawHeaders() {\n      var d,\n        g = schema.length,\n        i,\n        o,\n        columnHeaderCell,\n        header,\n        nonFrozenHeaderWidth;\n      function drawHeaderColumnRange(start, end) {\n        end = Math.min(end, g);\n        for (o = start; o < end; o += 1) {\n          i = self.orders.columns[o];\n          header = schema[i];\n          if (!header.hidden) {\n            d = {\n              title: header.title,\n              name: header.name,\n              width: header.width || self.style.cellWidth,\n              style: 'columnHeaderCell',\n              type: 'string',\n              index: o,\n              order: i,\n            };\n            columnHeaderCell = {\n              columnHeaderCell: header.title || header.name,\n            };\n            x += drawCell(columnHeaderCell, -1, -1)(d, i, o);\n            if (x > self.width + self.scrollBox.scrollLeft) {\n              break;\n            }\n          }\n        }\n      }\n      rowHeaders.forEach(function (rArgs, rhIndex) {\n        y = rArgs[3];\n        cellHeight = rArgs[4];\n        if (rhIndex === self.frozenRow) {\n          self.ctx.save();\n          radiusRect(\n            0,\n            self.lastFrozenRowPixel,\n            self.width,\n            self.height - self.lastFrozenRowPixel,\n            0,\n          );\n          self.ctx.clip();\n        }\n        drawRowHeader(rArgs[0], rArgs[1], rArgs[2]);\n      });\n      self.ctx.restore();\n      if (self.attributes.showColumnHeaders) {\n        x =\n          -self.scrollBox.scrollLeft +\n          self.scrollPixelLeft +\n          self.style.columnHeaderCellBorderWidth;\n        if (self.attributes.showRowHeaders) {\n          x += rowHeaderCellWidth;\n        }\n        y = 0;\n        // cell height might have changed during drawing\n        cellHeight = self.getColumnHeaderCellHeight();\n        drawHeaderColumnRange(self.scrollIndexLeft, g);\n        nonFrozenHeaderWidth = x;\n        x = self.style.columnHeaderCellBorderWidth;\n        if (self.attributes.showRowHeaders) {\n          x += rowHeaderCellWidth;\n        }\n        drawHeaderColumnRange(0, self.frozenColumn);\n        // fill in the space right of the headers\n        x = nonFrozenHeaderWidth;\n        if (x < w) {\n          c = {\n            name: '',\n            width: self.style.scrollBarWidth,\n            style: 'columnHeaderCellCap',\n            isColumnHeaderCell: true,\n            isColumnHeaderCellCap: true,\n            type: 'string',\n            index: schema.length,\n          };\n          drawCell({ endCap: '' }, -1, -1)(c, -1, -1);\n        }\n        // fill in the space right of the headers\n        if (self.attributes.showRowHeaders) {\n          cornerCell = { cornerCell: '' };\n          x = 0;\n          c = {\n            name: 'cornerCell',\n            width: self.style.rowHeaderCellWidth,\n            style: 'cornerCell',\n            type: 'string',\n            index: -1,\n          };\n          drawCell(cornerCell, -1, -1)(c, -1, -1);\n        }\n      }\n    }\n    function drawRow(rowOrderIndex, rowIndex) {\n      var headerIndex,\n        treeHeight,\n        rowSansTreeHeight,\n        columnOrderIndex,\n        g = schema.length;\n      if (y - cellHeight * 2 > h) {\n        return false;\n      }\n      rowData = viewData[rowOrderIndex];\n      rowOpen = self.openChildren[rowOrderIndex];\n      rowSansTreeHeight =\n        (self.sizes.rows[rowOrderIndex] || self.style.cellHeight) * self.scale;\n      treeHeight = (rowOpen ? self.sizes.trees[rowOrderIndex] : 0) * self.scale;\n      rowHeight = rowSansTreeHeight + treeHeight;\n      if (y < -rowHeight) {\n        return false;\n      }\n      if (self.attributes.showRowHeaders) {\n        x += rowHeaderCellWidth;\n      }\n      cellHeight = rowHeight;\n      //draw normal columns\n      for (\n        columnOrderIndex = self.scrollIndexLeft;\n        columnOrderIndex < g;\n        columnOrderIndex += 1\n      ) {\n        headerIndex = self.orders.columns[columnOrderIndex];\n        x += drawCell(rowData, rowOrderIndex, rowIndex)(\n          schema[headerIndex],\n          headerIndex,\n          columnOrderIndex,\n        );\n        if (x > self.width) {\n          self.scrollIndexRight = columnOrderIndex;\n          self.scrollPixelRight = x;\n          break;\n        }\n      }\n      //draw frozen columns\n      x = 0;\n      if (self.attributes.showRowHeaders) {\n        x += rowHeaderCellWidth;\n      }\n      for (\n        columnOrderIndex = 0;\n        columnOrderIndex < self.frozenColumn;\n        columnOrderIndex += 1\n      ) {\n        headerIndex = self.orders.columns[columnOrderIndex];\n        x += drawCell(rowData, rowOrderIndex, rowIndex)(\n          schema[headerIndex],\n          headerIndex,\n          columnOrderIndex,\n        );\n        if (x > self.width) {\n          break;\n        }\n      }\n      self.lastFrozenColumnPixel = x;\n      // cell height might have changed during drawing\n      cellHeight = rowHeight;\n      x =\n        -self.scrollBox.scrollLeft +\n        self.scrollPixelLeft +\n        self.style.cellBorderWidth;\n      // don't draw a tree for the new row\n      treeGrid = self.childGrids[rowOrderIndex];\n      if (rowOrderIndex !== viewData.length && rowOpen) {\n        treeGrid.visible = true;\n        treeGrid.parentNode = {\n          offsetTop: y + rowSansTreeHeight + self.canvasOffsetTop,\n          offsetLeft: rowHeaderCellWidth - 1 + self.canvasOffsetLeft,\n          offsetHeight: treeHeight,\n          offsetWidth:\n            self.width - rowHeaderCellWidth - self.style.scrollBarWidth - 1,\n          offsetParent: self.intf.parentNode,\n          parentNode: self.intf.parentNode,\n          style: self.style,\n          nodeType: 'canvas-datagrid-tree',\n          scrollTop: self.scrollBox.scrollTop,\n          scrollLeft: self.scrollBox.scrollLeft,\n          rowIndex: rowOrderIndex,\n        };\n        self.visibleCells.unshift({\n          rowIndex: rowOrderIndex,\n          columnIndex: 0,\n          y: treeGrid.parentNode.offsetTop,\n          x: treeGrid.parentNode.offsetLeft,\n          height: treeGrid.height,\n          width: treeGrid.width,\n          style: 'tree-grid',\n          type: treeGrid.parentNode.nodeType,\n        });\n        treeGrid.draw();\n      } else if (treeGrid) {\n        treeGrid.parentNode.offsetHeight = 0;\n        delete self.sizes.trees[rowOrderIndex];\n      }\n      rowHeaders.push([rowData, rowOrderIndex, rowIndex, y, rowHeight]);\n      self.visibleRowHeights[rowOrderIndex] = rowHeight;\n      y += cellHeight + (bc ? 0 : self.style.cellBorderWidth);\n      return true;\n    }\n    function initDraw() {\n      self.visibleRows = [];\n      schema = self.getSchema();\n      self.visibleCells = [];\n      self.canvasOffsetTop = self.isChildGrid ? self.parentNode.offsetTop : 0.5;\n      self.canvasOffsetLeft = self.isChildGrid\n        ? self.parentNode.offsetLeft\n        : -0.5;\n      h = self.height;\n      w = self.width;\n    }\n    function drawBackground() {\n      radiusRect(0, 0, w, h, 0);\n      self.ctx.clip();\n      self.ctx.fillStyle = self.style.gridBackgroundColor;\n      fillRect(0, 0, w, h);\n    }\n    function drawFrozenRows() {\n      var rowOrderIndex,\n        ln = Math.min(viewData.length, self.frozenRow);\n      x =\n        -self.scrollBox.scrollLeft +\n        self.scrollPixelLeft +\n        self.style.cellBorderWidth;\n      y = columnHeaderCellHeight;\n      for (rowIndex = 0; rowIndex < ln; rowIndex += 1) {\n        rowOrderIndex = self.orders.rows[rowIndex];\n        if (!drawRow(rowOrderIndex, rowIndex)) {\n          break;\n        }\n      }\n      if (self.attributes.allowFreezingRows) {\n        // HACK great, another stupid magic number.\n        // Background will appear as a 0.5px artifact behind the row freeze bar without this hack\n        y +=\n          self.style.frozenMarkerBorderWidth +\n          self.style.frozenMarkerWidth -\n          0.4999999999;\n      }\n      self.lastFrozenRowPixel = y;\n    }\n    function drawRows() {\n      self.ctx.save();\n      if (self.frozenRow > 0) {\n        radiusRect(\n          0,\n          self.lastFrozenRowPixel,\n          self.width,\n          self.height - self.lastFrozenRowPixel,\n          0,\n        );\n        self.ctx.clip();\n      }\n      var columnOrderIndex,\n        rowOrderIndex,\n        headerIndex,\n        g = schema.length;\n      x =\n        -self.scrollBox.scrollLeft +\n        self.scrollPixelLeft +\n        self.style.cellBorderWidth;\n      if (!self.attributes.snapToRow) {\n        y +=\n          -self.scrollBox.scrollTop +\n          self.scrollPixelTop +\n          self.style.cellBorderWidth;\n      }\n      for (\n        rowIndex = self.frozenRow + self.scrollIndexTop;\n        rowIndex < l;\n        rowIndex += 1\n      ) {\n        rowOrderIndex = self.orders.rows[rowIndex];\n        self.scrollIndexBottom = rowIndex;\n        self.scrollPixelBottom = y;\n        if (!drawRow(rowOrderIndex, rowIndex)) {\n          break;\n        }\n      }\n      if (self.attributes.showNewRow) {\n        if (self.attributes.showRowHeaders) {\n          x += rowHeaderCellWidth;\n        }\n        rowHeight = cellHeight = self.style.cellHeight;\n        rowOpen = false;\n        for (\n          columnOrderIndex = self.scrollIndexLeft;\n          columnOrderIndex < g;\n          columnOrderIndex += 1\n        ) {\n          headerIndex = self.orders.columns[columnOrderIndex];\n          x += drawCell(self.newRow, viewData.length, viewData.length)(\n            schema[headerIndex],\n            headerIndex,\n            columnOrderIndex,\n          );\n          if (x > self.width + self.scrollBox.scrollLeft) {\n            break;\n          }\n        }\n        rowHeaders.push([\n          self.newRow,\n          viewData.length,\n          viewData.length,\n          y,\n          rowHeight,\n        ]);\n      }\n      self.ctx.restore();\n    }\n    function drawMoveMarkers() {\n      if (!self.movingSelection) {\n        return;\n      }\n      self.ctx.lineWidth = self.style.moveOverlayBorderWidth;\n      self.ctx.strokeStyle = self.style.moveOverlayBorderColor;\n      self.ctx.setLineDash(self.style.moveOverlayBorderSegments);\n      moveBorders.forEach(function (c) {\n        addBorderLine(c[0], c[1]);\n      });\n      self.ctx.setLineDash([]);\n    }\n    function drawReorderMarkers() {\n      if (!self.reorderObject) {\n        return;\n      }\n      var b = {\n          height: self.reorderObject.height,\n          width: self.reorderObject.width,\n          x: self.reorderObject.x + self.reorderObject.dragOffset.x,\n          y: self.reorderObject.y + self.reorderObject.dragOffset.y,\n        },\n        m = {\n          width: w,\n          height: h,\n          x: 0,\n          y: 0,\n        };\n      self.ctx.fillStyle = self.style.reorderMarkerBackgroundColor;\n      self.ctx.lineWidth = self.style.reorderMarkerBorderWidth;\n      self.ctx.strokeStyle = self.style.reorderMarkerBorderColor;\n      if (self.dragMode === 'row-reorder') {\n        b.width = w;\n        b.x = 0;\n        m.width = w;\n        m.height = self.currentCell.height;\n        m.y = self.currentCell.y;\n        fillRect(b.x, b.y, b.width, b.height);\n        strokeRect(b.x, b.y, b.width, b.height);\n        self.ctx.lineWidth = self.style.reorderMarkerIndexBorderWidth;\n        self.ctx.strokeStyle = self.style.reorderMarkerIndexBorderColor;\n        if (\n          self.currentCell.rowIndex !== self.reorderObject.rowIndex &&\n          self.currentCell.rowIndex > -1 &&\n          self.currentCell.rowIndex < l\n        ) {\n          addBorderLine(\n            m,\n            self.reorderTarget.sortRowIndex > self.reorderObject.sortRowIndex\n              ? 'b'\n              : 't',\n          );\n        }\n      } else if (self.dragMode === 'column-reorder' && self.reorderObject) {\n        b.height = h;\n        b.y = 0;\n        m.height = h;\n        m.width = self.currentCell.width;\n        m.y = 0;\n        m.x = self.currentCell.x;\n        fillRect(b.x, b.y, b.width, b.height);\n        strokeRect(b.x, b.y, b.width, b.height);\n        self.ctx.lineWidth = self.style.reorderMarkerIndexBorderWidth;\n        self.ctx.strokeStyle = self.style.reorderMarkerIndexBorderColor;\n        if (\n          self.currentCell.sortColumnIndex !==\n            self.reorderObject.sortColumnIndex &&\n          self.currentCell.sortColumnIndex > -1 &&\n          self.currentCell.sortColumnIndex < schema.length\n        ) {\n          addBorderLine(\n            m,\n            self.reorderTarget.columnIndex > self.reorderObject.columnIndex\n              ? 'r'\n              : 'l',\n          );\n        }\n      }\n    }\n    function drawBorder() {\n      self.ctx.lineWidth = self.style.gridBorderWidth;\n      self.ctx.strokeStyle = self.style.gridBorderColor;\n      strokeRect(0, 0, self.width, self.height);\n    }\n    function drawSelectionBorders() {\n      self.ctx.lineWidth = self.style.selectionOverlayBorderWidth;\n      self.ctx.strokeStyle = self.style.selectionOverlayBorderColor;\n      function dsb(c) {\n        addBorderLine(c[0], c[1]);\n      }\n      selectionBorders\n        .filter(function (c) {\n          return (\n            c[0].rowIndex < self.frozenRow &&\n            c[0].columnIndex < self.frozenColumn\n          );\n        })\n        .forEach(dsb);\n      self.ctx.save();\n      clipFrozenArea(0);\n      selectionBorders\n        .filter(function (c) {\n          return (\n            c[0].rowIndex >= self.frozenRow &&\n            c[0].columnIndex >= self.frozenColumn\n          );\n        })\n        .forEach(dsb);\n      self.ctx.restore();\n      self.ctx.save();\n      clipFrozenArea(1);\n      selectionBorders\n        .filter(function (c) {\n          return (\n            c[0].rowIndex >= self.frozenRow &&\n            c[0].columnIndex < self.frozenColumn\n          );\n        })\n        .forEach(dsb);\n      self.ctx.restore();\n      self.ctx.save();\n      clipFrozenArea(2);\n      selectionBorders\n        .filter(function (c) {\n          return (\n            c[0].rowIndex < self.frozenRow &&\n            c[0].columnIndex >= self.frozenColumn\n          );\n        })\n        .forEach(dsb);\n      self.ctx.restore();\n    }\n    function drawSelectionHandles() {\n      if (self.mobile || self.attributes.allowMovingSelection) {\n        self.ctx.lineWidth = self.style.selectionHandleBorderWidth;\n        self.ctx.strokeStyle = self.style.selectionHandleBorderColor;\n        self.ctx.fillStyle = self.style.selectionHandleColor;\n        selectionHandles.forEach(function (c) {\n          addselectionHandle(c[0], c[1]);\n          var az = self.attributes.touchSelectHandleZone / 2,\n            ax =\n              c[0].x + (c[1] === 'tl' || c[1] === 'bl' ? 0 : c[0].width) - az,\n            ay =\n              c[0].y + (c[1] === 'bl' || c[1] === 'br' ? c[0].height : 0) - az;\n          self.visibleCells.unshift({\n            x: ax,\n            y: ay,\n            height: self.style.selectionHandleSize + az,\n            width: self.style.selectionHandleSize + az,\n            style: 'selection-handle-' + c[1],\n          });\n        });\n      }\n    }\n    function drawActiveCell() {\n      if (!aCell) {\n        return;\n      }\n      self.ctx.save();\n      var cl =\n          self.activeCell.columnIndex + 1 > self.frozenColumn ||\n          self.activeCell.rowIndex + 1 > self.frozenRow,\n        acx = cl ? self.lastFrozenColumnPixel : 0,\n        acy = cl ? self.lastFrozenRowPixel : 0,\n        acw = cl ? self.width - self.lastFrozenColumnPixel : self.width,\n        ach = cl ? self.height - self.lastFrozenRowPixel : self.height;\n      radiusRect(acx, acy, acw, ach, 0);\n      self.ctx.clip();\n      if (self.attributes.selectionMode === 'row') {\n        if (self.activeCell && self.activeCell.rowIndex === aCell.rowIndex) {\n          self.ctx.lineWidth = self.style.activeCellOverlayBorderWidth;\n          self.ctx.strokeStyle = self.style.activeCellOverlayBorderColor;\n          strokeRect(\n            1,\n            aCell.y,\n            self.getHeaderWidth() + rowHeaderCellWidth,\n            self.visibleRowHeights[aCell.rowIndex],\n          );\n        }\n      } else {\n        self.ctx.lineWidth = self.style.activeCellOverlayBorderWidth;\n        self.ctx.strokeStyle = self.style.activeCellOverlayBorderColor;\n        strokeRect(aCell.x, aCell.y, aCell.width, aCell.height);\n      }\n      self.ctx.restore();\n    }\n    function drawFrozenMarkers() {\n      var my = self.lastFrozenRowPixel - self.style.frozenMarkerWidth,\n        mx = self.lastFrozenColumnPixel - self.style.frozenMarkerBorderWidth,\n        xHover =\n          self.currentCell && self.currentCell.style === 'frozen-row-marker',\n        yHover =\n          self.currentCell && self.currentCell.style === 'frozen-column-marker';\n      self.ctx.lineWidth = self.style.frozenMarkerBorderWidth;\n      if (self.attributes.allowFreezingColumns) {\n        self.ctx.fillStyle = yHover\n          ? self.style.frozenMarkerHoverColor\n          : self.style.frozenMarkerColor;\n        self.ctx.strokeStyle = yHover\n          ? self.style.frozenMarkerHoverBorderColor\n          : self.style.frozenMarkerBorderColor;\n        fillRect(mx, 0, self.style.frozenMarkerWidth, self.height);\n        strokeRect(mx, 0, self.style.frozenMarkerWidth, self.height);\n        self.visibleCells.unshift({\n          x: mx,\n          y: 0,\n          height: self.height,\n          width:\n            self.style.frozenMarkerWidth + self.style.frozenMarkerBorderWidth,\n          style: 'frozen-column-marker',\n        });\n      }\n      if (self.attributes.allowFreezingRows) {\n        self.ctx.fillStyle = xHover\n          ? self.style.frozenMarkerHoverColor\n          : self.style.frozenMarkerColor;\n        self.ctx.strokeStyle = xHover\n          ? self.style.frozenMarkerHoverBorderColor\n          : self.style.frozenMarkerBorderColor;\n        fillRect(0, my, self.width, self.style.frozenMarkerWidth);\n        strokeRect(0, my, self.width, self.style.frozenMarkerWidth);\n        self.visibleCells.unshift({\n          x: 0,\n          y: my,\n          height:\n            self.style.frozenMarkerWidth + self.style.frozenMarkerBorderWidth,\n          width: self.width,\n          style: 'frozen-row-marker',\n        });\n      }\n      if (self.freezeMarkerPosition) {\n        self.ctx.fillStyle = self.style.frozenMarkerActiveColor;\n        self.ctx.strokeStyle = self.style.frozenMarkerActiveBorderColor;\n        if (self.dragMode === 'frozen-column-marker') {\n          fillRect(\n            self.freezeMarkerPosition.x,\n            0,\n            self.style.frozenMarkerWidth,\n            self.height,\n          );\n          strokeRect(\n            self.freezeMarkerPosition.x,\n            0,\n            self.style.frozenMarkerWidth,\n            self.height,\n          );\n        } else {\n          fillRect(\n            0,\n            self.freezeMarkerPosition.y,\n            self.width,\n            self.style.frozenMarkerWidth,\n          );\n          strokeRect(\n            0,\n            self.freezeMarkerPosition.y,\n            self.width,\n            self.style.frozenMarkerWidth,\n          );\n        }\n      }\n    }\n    function drawPerfLines() {\n      if (!self.attributes.showPerformance) {\n        return;\n      }\n      var pw = 250,\n        px =\n          self.width -\n          pw -\n          self.style.scrollBarWidth -\n          self.style.scrollBarBorderWidth * 2,\n        py = columnHeaderCellHeight,\n        ph = 100;\n      if (scrollDebugCounters.length === 0) {\n        scrollDebugCounters = fillArray(0, perfWindowSize, 1, function () {\n          return [0, 0];\n        });\n      }\n      if (touchPPSCounters.length === 0) {\n        touchPPSCounters = fillArray(0, perfWindowSize, 1, function () {\n          return [0, 0];\n        });\n      }\n      if (entityCount.length === 0) {\n        entityCount = fillArray(0, perfWindowSize, 1, 0);\n      }\n      self.ctx.lineWidth = 0.5;\n      function dpl(name, perfArr, arrIndex, max, color, useAbs, rowIndex) {\n        var v;\n        drawPerfLine(pw, ph, px, py, perfArr, arrIndex, max, color, useAbs);\n        self.ctx.fillStyle = color;\n        fillRect(3 + px, py + 9 + rowIndex * 11, 8, 8);\n        self.ctx.fillStyle = self.style.debugPerfChartTextColor;\n        v = arrIndex !== undefined ? perfArr[0][arrIndex] : perfArr[0];\n        fillText(\n          name + ' ' + (isNaN(v) ? 0 : v).toFixed(3),\n          14 + px,\n          py + 16 + rowIndex * 11,\n        );\n      }\n      self.ctx.textAlign = 'left';\n      self.ctx.font = self.style.debugFont;\n      self.ctx.fillStyle = self.style.debugPerfChartBackground;\n      fillRect(px, py, pw, ph);\n      [\n        [\n          'Scroll Height',\n          scrollDebugCounters,\n          0,\n          self.scrollBox.scrollHeight,\n          self.style.debugScrollHeightColor,\n          false,\n        ],\n        [\n          'Scroll Width',\n          scrollDebugCounters,\n          1,\n          self.scrollBox.scrollWidth,\n          self.style.debugScrollWidthColor,\n          false,\n        ],\n        [\n          'Performance',\n          perfCounters,\n          undefined,\n          200,\n          self.style.debugPerformanceColor,\n          false,\n        ],\n        [\n          'Entities',\n          entityCount,\n          undefined,\n          1500,\n          self.style.debugEntitiesColor,\n          false,\n        ],\n        [\n          'TouchPPSX',\n          touchPPSCounters,\n          0,\n          1000,\n          self.style.debugTouchPPSXColor,\n          true,\n        ],\n        [\n          'TouchPPSY',\n          touchPPSCounters,\n          1,\n          1000,\n          self.style.debugTouchPPSYColor,\n          true,\n        ],\n      ].forEach(function (i, index) {\n        i.push(index);\n        dpl.apply(null, i);\n      });\n      self.ctx.fillStyle = self.style.debugPerfChartBackground;\n      entityCount.pop();\n      entityCount.unshift(self.visibleCells.length);\n      scrollDebugCounters.pop();\n      scrollDebugCounters.unshift([\n        self.scrollBox.scrollTop,\n        self.scrollBox.scrollLeft,\n      ]);\n      touchPPSCounters.pop();\n      touchPPSCounters.unshift([self.yPPS, self.xPPS]);\n    }\n    function drawDebug() {\n      self.ctx.save();\n      var d;\n      if (self.attributes.showPerformance || self.attributes.debug) {\n        if (perfCounters.length === 0) {\n          perfCounters = fillArray(0, perfWindowSize, 1, 0);\n        }\n        perfCounters.pop();\n        perfCounters.unshift(performance.now() - p);\n      }\n      if (!self.attributes.debug) {\n        self.ctx.restore();\n        return;\n      }\n      self.ctx.font = self.style.debugFont;\n      d = {};\n      d.perf = (\n        perfCounters.reduce(function (a, b) {\n          return a + b;\n        }, 0) / Math.min(drawCount, perfCounters.length)\n      ).toFixed(1);\n      d.perfDelta = perfCounters[0].toFixed(1);\n      d.frozenColumnsWidth = getFrozenColumnsWidth();\n      d.htmlImages = Object.keys(self.htmlImageCache).length;\n      d.reorderObject =\n        'x: ' +\n        (self.reorderObject || { columnIndex: 0 }).columnIndex +\n        ', y: ' +\n        (self.reorderObject || { rowIndex: 0 }).rowIndex;\n      d.reorderTarget =\n        'x: ' +\n        (self.reorderTarget || { columnIndex: 0 }).columnIndex +\n        ', y: ' +\n        (self.reorderTarget || { rowIndex: 0 }).rowIndex;\n      d.scale = self.scale;\n      d.startScale = self.startScale;\n      d.scaleDelta = self.scaleDelta;\n      d.zoomDeltaStart = self.zoomDeltaStart;\n      d.touchLength = self.touchLength;\n      d.touches =\n        'y0: ' +\n        (self.touchPosition || { y: 0 }).y +\n        ' y1: ' +\n        (self.touchPosition1 || { y: 0 }).y;\n      d.scrollBox = self.scrollBox.toString();\n      d.scrollIndex =\n        'x: ' + self.scrollIndexLeft + ', y: ' + self.scrollIndexTop;\n      d.scrollPixel =\n        'x: ' + self.scrollPixelLeft + ', y: ' + self.scrollPixelTop;\n      d.canvasOffset =\n        'x: ' + self.canvasOffsetLeft + ', y: ' + self.canvasOffsetTop;\n      d.touchDelta = 'x: ' + self.touchDelta.x + ', y: ' + self.touchDelta.y;\n      d.touchAnimateTo =\n        'x: ' + self.touchAnimateTo.x + ', y: ' + self.touchAnimateTo.y;\n      d.scrollAnimation =\n        'x: ' + self.scrollAnimation.x + ', y: ' + self.scrollAnimation.y;\n      d.touchPPS = 'x: ' + self.xPPS + ', y: ' + self.yPPS;\n      d.touchPPST = 'x: ' + self.xPPST + ', y: ' + self.yPPST;\n      d.touchDuration = self.touchDuration;\n      d.pointerLockPosition = self.pointerLockPosition\n        ? self.pointerLockPosition.x + ', ' + self.pointerLockPosition.y\n        : '';\n      d.size = 'w: ' + self.width + ', h: ' + self.height;\n      d.mouse = 'x: ' + self.mouse.x + ', y: ' + self.mouse.y;\n      d.touch = !self.touchStart\n        ? ''\n        : 'x: ' + self.touchStart.x + ', y: ' + self.touchStart.y;\n      d.entities = self.visibleCells.length;\n      d.hasFocus = self.hasFocus;\n      d.dragMode = self.dragMode;\n      if (self.currentCell) {\n        d.columnIndex = self.currentCell.columnIndex;\n        d.rowIndex = self.currentCell.rowIndex;\n        d.sortColumnIndex = self.currentCell.sortColumnIndex;\n        d.sortRowIndex = self.currentCell.sortRowIndex;\n        d.context = self.currentCell.context;\n        d.dragContext = self.currentCell.dragContext;\n        d.style = self.currentCell.style;\n        d.type = self.currentCell.type;\n      }\n      self.ctx.textAlign = 'right';\n      self.ctx.fillStyle = self.style.debugBackgroundColor;\n      fillRect(0, 0, self.width, self.height);\n      Object.keys(d).forEach(function (key, index) {\n        var m = key + ': ' + d[key],\n          lh = 14;\n        self.ctx.fillStyle = self.style.debugColor;\n        fillText(\n          m,\n          w - 20,\n          (self.attributes.showPerformance ? 140 : 24) + index * lh,\n        );\n      });\n      self.ctx.restore();\n    }\n    self.ctx.save();\n    initDraw();\n    drawBackground();\n    drawFrozenRows();\n    drawRows();\n    drawActiveCell();\n    drawHeaders();\n    drawFrozenMarkers();\n    drawSelectionHandles();\n    drawReorderMarkers();\n    drawMoveMarkers();\n    drawBorder();\n    drawSelectionBorders();\n    drawScrollBars();\n    if (checkScrollHeight) {\n      self.resize(true);\n    }\n    drawDebug();\n    drawPerfLines();\n    if (self.dispatchEvent('afterdraw', {})) {\n      return;\n    }\n    self.ctx.restore();\n  };\n}\n","module.exports=function(e){var o={};function a(t){if(o[t])return o[t].exports;var r=o[t]={i:t,l:!1,exports:{}};return e[t].call(r.exports,r,r.exports,a),r.l=!0,r.exports}return a.m=e,a.c=o,a.d=function(e,o,t){a.o(e,o)||Object.defineProperty(e,o,{enumerable:!0,get:t})},a.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},a.t=function(e,o){if(1&o&&(e=a(e)),8&o)return e;if(4&o&&\"object\"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(a.r(t),Object.defineProperty(t,\"default\",{enumerable:!0,value:e}),2&o&&\"string\"!=typeof e)for(var r in e)a.d(t,r,function(o){return e[o]}.bind(null,r));return t},a.n=function(e){var o=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(o,\"a\",o),o},a.o=function(e,o){return Object.prototype.hasOwnProperty.call(e,o)},a.p=\"\",a(a.s=0)}([function(e,o,a){\"use strict\";Object.defineProperty(o,\"__esModule\",{value:!0});var t=a(1),r=Object.keys(t.default).reduce((function(e,o){return e.concat(t.default[o])}),[]);o.default=function(e){return-1===r.indexOf(e.key)}},function(e,o,a){\"use strict\";Object.defineProperty(o,\"__esModule\",{value:!0});o.default={modifier:[\"Alt\",\"AltGraph\",\"CapsLock\",\"Control\",\"Fn\",\"FnLock\",\"Meta\",\"NumLock\",\"ScrollLock\",\"Shift\",\"Symbol\",\"SymbolLock\"],legacyModifier:[\"Hyper\",\"Super\"],whiteSpace:[\"Enter\",\"Tab\"],navigation:[\"ArrowDown\",\"ArrowLeft\",\"ArrowRight\",\"ArrowUp\",\"End\",\"Home\",\"PageDown\",\"PageUp\"],editing:[\"Backspace\",\"Clear\",\"Copy\",\"CrSel\",\"Cut\",\"Delete\",\"EraseEof\",\"ExSel\",\"Insert\",\"Paste\",\"Redo\",\"Undo\"],ui:[\"Accept\",\"Again\",\"Attn\",\"Cancel\",\"ContextMenu\",\"Escape\",\"Execute\",\"Find\",\"Help\",\"Pause\",\"Play\",\"Props\",\"Select\",\"ZoomIn\",\"ZoomOut\"],device:[\"BrightnessDown\",\"BrightnessUp\",\"Eject\",\"LogOff\",\"Power\",\"PowerOff\",\"PrintScreen\",\"Hibernate\",\"Standby\",\"WakeUp\"],imeCompositionKeys:[\"AllCandidates\",\"Alphanumeric\",\"CodeInput\",\"Compose\",\"Convert\",\"Dead\",\"FinalMode\",\"GroupFirst\",\"GroupLast\",\"GroupNext\",\"GroupPrevious\",\"ModeChange\",\"NextCandidate\",\"NonConvert\",\"PreviousCandidate\",\"Process\",\"SingleCandidate\"],koreanSpecific:[\"HangulMode\",\"HanjaMode\",\"JunjaMode\"],japaneseSpecific:[\"Eisu\",\"Hankaku\",\"Hiragana\",\"HiraganaKatakana\",\"KanaMode\",\"KanjiMode\",\"Katakana\",\"Romaji\",\"Zenkaku\",\"ZenkakuHankaku\"],commonFunction:[\"F1\",\"F2\",\"F3\",\"F4\",\"F5\",\"F6\",\"F7\",\"F8\",\"F9\",\"F10\",\"F11\",\"F12\",\"Soft1\",\"Soft2\",\"Soft3\",\"Soft4\"],multimedia:[\"ChannelDown\",\"ChannelUp\",\"Close\",\"MailForward\",\"MailReply\",\"MailSend\",\"MediaClose\",\"MediaFastForward\",\"MediaPause\",\"MediaPlay\",\"MediaPlayPause\",\"MediaRecord\",\"MediaRewind\",\"MediaStop\",\"MediaTrackNext\",\"MediaTrackPrevious\",\"New\",\"Open\",\"Print\",\"Save\",\"SpellCheck\"],multimediaNumpad:[\"Key11\",\"Key12\"],audio:[\"AudioBalanceLeft\",\"AudioBalanceRight\",\"AudioBassBoostDown\",\"AudioBassBoostToggle\",\"AudioBassBoostUp\",\"AudioFaderFront\",\"AudioFaderRear\",\"AudioSurroundModeNext\",\"AudioTrebleDown\",\"AudioTrebleUp\",\"AudioVolumeDown\",\"AudioVolumeUp\",\"AudioVolumeMute\",\"MicrophoneToggle\",\"MicrophoneVolumeDown\",\"MicrophoneVolumeUp\",\"MicrophoneVolumeMute\"],speech:[\"SpeechCorrectionList\",\"SpeechInputToggle\"],application:[\"LaunchApplication1\",\"LaunchApplication2\",\"LaunchCalendar\",\"LaunchContacts\",\"LaunchMail\",\"LaunchMediaPlayer\",\"LaunchMusicPlayer\",\"LaunchPhone\",\"LaunchScreenSaver\",\"LaunchSpreadsheet\",\"LaunchWebBrowser\",\"LaunchWebCam\",\"LaunchWordProcessor\"],browser:[\"BrowserBack\",\"BrowserFavorites\",\"BrowserForward\",\"BrowserHome\",\"BrowserRefresh\",\"BrowserSearch\",\"BrowserStop\"],mobilePhone:[\"AppSwitch\",\"Call\",\"Camera\",\"CameraFocus\",\"EndCall\",\"GoBack\",\"GoHome\",\"HeadsetHook\",\"LastNumberRedial\",\"Notification\",\"MannerMode\",\"VoiceDial\"],tv:[\"TV\",\"TV3DMode\",\"TVAntennaCable\",\"TVAudioDescription\",\"TVAudioDescriptionMixDown\",\"TVAudioDescriptionMixUp\",\"TVContentsMenu\",\"TVDataService\",\"TVInput\",\"TVInputComponent1\",\"TVInputComponent2\",\"TVInputComposite1\",\"TVInputComposite2\",\"TVInputHDMI1\",\"TVInputHDMI2\",\"TVInputHDMI3\",\"TVInputHDMI4\",\"TVInputVGA1\",\"TVMediaContext\",\"TVNetwork\",\"TVNumberEntry\",\"TVPower\",\"TVRadioService\",\"TVSatellite\",\"TVSatelliteBS\",\"TVSatelliteCS\",\"TVSatelliteToggle\",\"TVTerrestrialAnalog\",\"TVTerrestrialDigital\",\"TVTimer\"],mediaControls:[\"AVRInput\",\"AVRPower\",\"ColorF0Red\",\"ColorF1Green\",\"ColorF2Yellow\",\"ColorF3Blue\",\"ColorF4Grey\",\"ColorF5Brown\",\"ClosedCaptionToggle\",\"Dimmer\",\"DisplaySwap\",\"DVR\",\"Exit\",\"FavoriteClear0\",\"FavoriteClear1\",\"FavoriteClear2\",\"FavoriteClear3\",\"FavoriteRecall0\",\"FavoriteRecall1\",\"FavoriteRecall2\",\"FavoriteRecall3\",\"FavoriteStore0\",\"FavoriteStore1\",\"FavoriteStore2\",\"FavoriteStore3\",\"Guide\",\"GuideNextDay\",\"GuidePreviousDay\",\"Info\",\"InstantReplay\",\"Link\",\"ListProgram\",\"LiveContent\",\"Lock\",\"MediaApps\",\"MediaAudioTrack\",\"MediaLast\",\"MediaSkipBackward\",\"MediaSkipForward\",\"MediaStepBackward\",\"MediaStepForward\",\"MediaTopMenu\",\"NavigateIn\",\"NavigateNext\",\"NavigateOut\",\"NavigatePrevious\",\"NextFavoriteChannel\",\"NextUserProfile\",\"OnDemand\",\"Pairing\",\"PinPDown\",\"PinPMove\",\"PinPToggle\",\"PinPUp\",\"PlaySpeedDown\",\"PlaySpeedReset\",\"PlaySpeedUp\",\"RandomToggle\",\"RcLowBattery\",\"RecordSpeedNext\",\"RfBypass\",\"ScanChannelsToggle\",\"ScreenModeNext\",\"Settings\",\"SplitScreenToggle\",\"STBInput\",\"STBPower\",\"Subtitle\",\"Teletext\",\"VideoModeNext\",\"Wink\",\"ZoomToggle\"]}}]).default;","/*jslint browser: true, unparam: true, todo: true, plusplus: true*/\n/*globals define: true, MutationObserver: false, requestAnimationFrame: false, performance: false, btoa: false*/\n'use strict';\n\nimport isPrintableKeyEvent from 'is-printable-key-event';\n\nexport default function (self) {\n  var wheeling;\n  self.stopPropagation = function (e) {\n    e.stopPropagation();\n  };\n  /**\n   * Adds an event listener to the given event.\n   * @memberof canvasDatagrid\n   * @name addEventListener\n   * @method\n   * @param {string} ev The name of the event to subscribe to.\n   * @param {function} fn The event procedure to execute when the event is raised.\n   */\n  self.addEventListener = function (ev, fn) {\n    self.events[ev] = self.events[ev] || [];\n    self.events[ev].unshift(fn);\n  };\n  /**\n   * Removes the given listener function from the given event.  Must be an actual reference to the function that was bound.\n   * @memberof canvasDatagrid\n   * @name removeEventListener\n   * @method\n   * @param {string} ev The name of the event to unsubscribe from.\n   * @param {function} fn The event procedure to execute when the event is raised.\n   */\n  self.removeEventListener = function (ev, fn) {\n    (self.events[ev] || []).forEach(function removeEachListener(sfn, idx) {\n      if (fn === sfn) {\n        self.events[ev].splice(idx, 1);\n      }\n    });\n  };\n  /**\n   * Fires the given event, passing an event object to the event subscribers.\n   * @memberof canvasDatagrid\n   * @name dispatchEvent\n   * @method\n   * @param {number} ev The name of the event to dispatch.\n   * @param {number} e The event object.\n   */\n  self.dispatchEvent = function (ev, e) {\n    e = ev.type ? ev : e || {};\n    ev = ev.type || ev;\n    var defaultPrevented;\n    function preventDefault() {\n      defaultPrevented = true;\n    }\n    if (!self.events[ev]) {\n      return;\n    }\n    self.events[ev].forEach(function dispatchEachEvent(fn) {\n      e.ctx = self.ctx;\n      e.preventDefault = preventDefault;\n      fn.apply(self.intf, [e]);\n    });\n    return defaultPrevented;\n  };\n  self.getRatio = function () {\n    return Math.min(\n      self.attributes.maxPixelRatio,\n      (window.devicePixelRatio || 1) /\n        (self.ctx.webkitBackingStorePixelRatio ||\n          self.ctx.mozBackingStorePixelRatio ||\n          self.ctx.msBackingStorePixelRatio ||\n          self.ctx.oBackingStorePixelRatio ||\n          self.ctx.backingStorePixelRatio ||\n          1),\n    );\n  };\n  self.resize = function (drawAfterResize) {\n    if (!self.canvas) {\n      return;\n    }\n    var x,\n      v = {\n        x: 0,\n        y: 0,\n        height: 0,\n        width: 0,\n        style: 'vertical-scroll-bar',\n      },\n      n = {\n        x: 0,\n        y: 0,\n        height: 0,\n        width: 0,\n        style: 'horizontal-scroll-bar',\n      },\n      vb = {\n        x: 0,\n        y: 0,\n        height: 0,\n        width: 0,\n        style: 'vertical-scroll-box',\n      },\n      nb = {\n        x: 0,\n        y: 0,\n        height: 0,\n        width: 0,\n        style: 'horizontal-scroll-box',\n      },\n      co = {\n        x: 0,\n        y: 0,\n        height: 0,\n        width: 0,\n        isCorner: true,\n        isScrollBoxCorner: true,\n        style: 'scroll-box-corner',\n      },\n      m = self.style.scrollBarBoxMargin * 2,\n      b = self.style.scrollBarBorderWidth * 2,\n      d = self.style.scrollBarBoxMargin * 0.5,\n      sbw = self.style.scrollBarWidth + self.style.scrollBarBorderWidth * 2,\n      ratio = self.getRatio(),\n      bm = self.style.gridBorderCollapse === 'collapse' ? 1 : 2,\n      cellBorder = self.style.cellBorderWidth * bm,\n      columnHeaderCellBorder = self.style.columnHeaderCellBorderWidth * bm,\n      dataHeight = 0,\n      dataWidth = 0,\n      dims,\n      l = (self.viewData || []).length,\n      columnHeaderCellHeight = self.getColumnHeaderCellHeight(),\n      rowHeaderCellWidth = self.getRowHeaderCellWidth(),\n      ch = self.style.cellHeight,\n      s = self.getSchema();\n    // sets actual DOM canvas element\n    function checkScrollBoxVisibility() {\n      self.scrollBox.horizontalBarVisible =\n        (self.style.width !== 'auto' &&\n          dataWidth > self.scrollBox.width &&\n          self.style.overflowX !== 'hidden') ||\n        self.style.overflowX === 'scroll';\n      self.scrollBox.horizontalBoxVisible = dataWidth > self.scrollBox.width;\n      self.scrollBox.verticalBarVisible =\n        (self.style.height !== 'auto' &&\n          dataHeight > self.scrollBox.height &&\n          self.style.overflowY !== 'hidden') ||\n        self.style.overflowY === 'scroll';\n      self.scrollBox.verticalBoxVisible = dataHeight > self.scrollBox.height;\n    }\n    function setScrollBoxSize() {\n      self.scrollBox.width = self.width - rowHeaderCellWidth;\n      self.scrollBox.height = self.height - columnHeaderCellHeight;\n    }\n    function setCanvasSize() {\n      if (self.isChildGrid) {\n        return;\n      }\n      dims = {\n        // HACK +1 ? maybe it's a magic cell border?  Required to line up properly in auto height mode.\n        height: columnHeaderCellHeight + dataHeight + cellBorder + 1,\n        width: dataWidth + rowHeaderCellWidth + cellBorder,\n      };\n      ['width', 'height'].forEach(function (dim) {\n        //TODO: support inherit\n        if (\n          ['auto', undefined].indexOf(self.style[dim]) !== -1 &&\n          ['auto', undefined].indexOf(self.appliedInlineStyles[dim]) !== -1\n        ) {\n          self.parentNodeStyle[dim] = dims[dim] + 'px';\n        } else if (\n          ['auto', undefined].indexOf(self.style[dim]) == -1 &&\n          ['auto', undefined].indexOf(self.appliedInlineStyles[dim]) == -1\n        ) {\n          self.parentNodeStyle[dim] = self.style[dim];\n          if (self.isComponent) {\n            self.canvas.style[dim] = self.style[dim];\n          }\n        }\n      });\n    }\n    self.scrollCache.x = [];\n    self.scrollCache.y = [];\n    for (x = 0; x < l; x += 1) {\n      self.scrollCache.y[x] = dataHeight;\n      dataHeight +=\n        ((self.sizes.rows[x] || ch) + (self.sizes.trees[x] || 0)) * self.scale +\n        // HACK? if an expanded tree row is frozen it is necessary to add the tree row's height a second time.\n        (self.frozenRow > x ? self.sizes.trees[x] || 0 : 0);\n    }\n    if (l > 1) {\n      self.scrollCache.y[x] = dataHeight;\n    }\n    dataWidth =\n      s.reduce(function reduceSchema(accumulator, column, columnIndex) {\n        // intentional redefintion of column.  This causes scrollCache to be in the correct order\n        column = s[self.orders.columns[columnIndex]];\n        if (column.hidden) {\n          self.scrollCache.x[columnIndex] = accumulator;\n          return accumulator;\n        }\n        var va =\n          accumulator + self.getColummnWidth(self.orders.columns[columnIndex]);\n        self.scrollCache.x[columnIndex] = va;\n        return va;\n      }, 0) || 0;\n    if (self.attributes.showNewRow) {\n      dataHeight += ch;\n    }\n    if (self.attributes.snapToRow) {\n      dataHeight += self.style.cellHeight;\n    }\n    setCanvasSize();\n    if (self.isChildGrid) {\n      self.width = self.parentNode.offsetWidth;\n      self.height = self.parentNode.offsetHeight;\n    } else if (\n      self.height !== self.canvas.offsetHeight ||\n      self.width !== self.canvas.offsetWidth\n    ) {\n      self.height = self.canvas.offsetHeight;\n      self.width = self.canvas.offsetWidth;\n      self.canvasOffsetLeft = self.args.canvasOffsetLeft || 0;\n      self.canvasOffsetTop = self.args.canvasOffsetTop || 0;\n    }\n    /// calculate scroll bar dimensions\n    // non-controversial\n    self.scrollBox.top = columnHeaderCellHeight + columnHeaderCellBorder;\n    self.scrollBox.left = rowHeaderCellWidth;\n    // width and height of scroll box\n    setScrollBoxSize();\n    // is the data larger than the scroll box\n    checkScrollBoxVisibility();\n    // if the scroll box is visible, make room for it by expanding the size of the element\n    // if the other dimension is set to auto\n    if (self.scrollBox.horizontalBarVisible) {\n      if (self.style.height === 'auto' && !self.isChildGrid) {\n        self.height += sbw;\n      }\n      dataHeight += sbw;\n      setCanvasSize();\n      setScrollBoxSize();\n      checkScrollBoxVisibility();\n    }\n    if (self.scrollBox.verticalBarVisible) {\n      if (self.style.width === 'auto' && !self.isChildGrid) {\n        self.width += sbw;\n      }\n      dataWidth += sbw;\n      setCanvasSize();\n      setScrollBoxSize();\n      checkScrollBoxVisibility();\n    }\n    // set again after bar visibility checks\n    setScrollBoxSize();\n    self.scrollBox.scrollWidth = dataWidth - self.scrollBox.width;\n    self.scrollBox.scrollHeight = dataHeight - self.scrollBox.height;\n    self.scrollBox.widthBoxRatio = self.scrollBox.width / dataWidth;\n    self.scrollBox.scrollBoxWidth =\n      self.scrollBox.width * self.scrollBox.widthBoxRatio -\n      self.style.scrollBarWidth -\n      b -\n      d;\n    // TODO: This heightBoxRatio number is terribly wrong.\n    // They should be a result of the size of the grid/canvas?\n    // it being off causes the scroll bar to \"slide\" under\n    // the dragged mouse.\n    // https://github.com/TonyGermaneri/canvas-datagrid/issues/97\n    self.scrollBox.heightBoxRatio =\n      (self.scrollBox.height - columnHeaderCellHeight) / dataHeight;\n    self.scrollBox.scrollBoxHeight =\n      self.scrollBox.height * self.scrollBox.heightBoxRatio -\n      self.style.scrollBarWidth -\n      b -\n      d;\n    self.scrollBox.scrollBoxWidth = Math.max(\n      self.scrollBox.scrollBoxWidth,\n      self.style.scrollBarBoxMinSize,\n    );\n    self.scrollBox.scrollBoxHeight = Math.max(\n      self.scrollBox.scrollBoxHeight,\n      self.style.scrollBarBoxMinSize,\n    );\n    // horizontal\n    n.x += rowHeaderCellWidth;\n    n.y += self.height - self.style.scrollBarWidth - d;\n    n.width =\n      self.width - self.style.scrollBarWidth - rowHeaderCellWidth - d - m;\n    n.height = self.style.scrollBarWidth + self.style.scrollBarBorderWidth + d;\n    // horizontal box\n    nb.y = n.y + self.style.scrollBarBoxMargin;\n    nb.width = self.scrollBox.scrollBoxWidth;\n    nb.height = self.style.scrollBarBoxWidth;\n    // vertical\n    v.x +=\n      self.width -\n      self.style.scrollBarWidth -\n      self.style.scrollBarBorderWidth -\n      d;\n    v.y += columnHeaderCellHeight;\n    v.width = self.style.scrollBarWidth + self.style.scrollBarBorderWidth + d;\n    v.height =\n      self.height - columnHeaderCellHeight - self.style.scrollBarWidth - d - m;\n    // vertical box\n    vb.x = v.x + self.style.scrollBarBoxMargin;\n    vb.width = self.style.scrollBarBoxWidth;\n    vb.height = self.scrollBox.scrollBoxHeight;\n    // corner\n    co.x = n.x + n.width + m;\n    co.y = v.y + v.height + m;\n    co.width = self.style.scrollBarWidth + self.style.scrollBarBorderWidth;\n    co.height = self.style.scrollBarWidth + self.style.scrollBarBorderWidth;\n    self.scrollBox.entities = {\n      horizontalBar: n,\n      horizontalBox: nb,\n      verticalBar: v,\n      verticalBox: vb,\n      corner: co,\n    };\n    self.scrollBox.bar = {\n      v: v,\n      h: n,\n    };\n    self.scrollBox.box = {\n      v: vb,\n      h: nb,\n    };\n    /// calculate page and dom elements\n    self.page = Math.max(\n      1,\n      self.visibleRows.length - 3 - self.attributes.pageUpDownOverlap,\n    );\n    // set canvas drawing related items\n    if (!self.isChildGrid) {\n      self.canvas.width = self.width * ratio;\n      self.canvas.height = self.height * ratio;\n      self.ctx.scale(ratio, ratio);\n    }\n    // resize any open dom elements (input/textarea)\n    self.resizeEditInput();\n    self.scroll(true);\n    if (drawAfterResize) {\n      self.draw(true);\n    }\n    self.dispatchEvent('resize', {});\n    return true;\n  };\n  self.scroll = function (dontDraw) {\n    var s = self.getSchema(),\n      l = (self.viewData || []).length,\n      ch = self.style.cellHeight;\n    // go too far in leaps, then get focused\n    self.scrollIndexTop = Math.floor(\n      l * (self.scrollBox.scrollTop / self.scrollBox.scrollHeight) - 100,\n    );\n    self.scrollIndexTop = Math.max(self.scrollIndexTop, 0);\n    self.scrollPixelTop = self.scrollCache.y[self.scrollIndexTop];\n    // sometimes the grid is rendered but the height is zero\n    if (self.scrollBox.scrollHeight === 0) {\n      self.scrollIndexTop = 0;\n    }\n    self.scrollPixelTop = 0;\n    self.scrollIndexLeft = self.frozenColumn;\n    self.scrollPixelLeft = 0;\n    while (\n      self.scrollPixelTop < self.scrollBox.scrollTop &&\n      self.scrollIndexTop < self.viewData.length\n    ) {\n      // start on index +1 since index 0 was used in \"go too far\" section above\n      self.scrollIndexTop += 1;\n      self.scrollPixelTop = self.scrollCache.y[self.scrollIndexTop];\n    }\n    while (\n      self.scrollPixelLeft < self.scrollBox.scrollLeft + 1 &&\n      self.scrollIndexLeft < s.length\n    ) {\n      self.scrollPixelLeft = self.scrollCache.x[self.scrollIndexLeft];\n      self.scrollIndexLeft += 1;\n    }\n    if (s.length > 0) {\n      self.scrollIndexLeft = Math.max(self.scrollIndexLeft - 1, 0);\n      self.scrollPixelLeft -= self.getColummnWidth(\n        self.orders.columns[self.scrollIndexLeft],\n      );\n    }\n    if ((self.viewData || []).length > 0) {\n      self.scrollIndexTop = Math.max(self.scrollIndexTop - 1, 0);\n      self.scrollPixelTop = Math.max(\n        self.scrollPixelTop -\n          (self.viewData[self.scrollIndexTop]\n            ? (self.sizes.rows[self.scrollIndexTop] || ch) +\n              (self.sizes.trees[self.scrollIndexTop] || 0)\n            : ch) *\n            self.scale,\n        0,\n      );\n    }\n    self.ellipsisCache = {};\n    if (!dontDraw) {\n      self.draw(true);\n    }\n    //TODO: figure out why this has to be delayed for child grids\n    //BUG: wheeling event on 3rd level hierarchy fails to move input box\n    requestAnimationFrame(self.resizeEditInput);\n    self.dispatchEvent('scroll', {\n      top: self.scrollBox.scrollTop,\n      left: self.scrollBox.scrollLeft,\n    });\n  };\n  self.mousemove = function (e, overridePos) {\n    if (self.contextMenu || self.input) {\n      return;\n    }\n    self.mouse = overridePos || self.getLayerPos(e);\n    var ctrl =\n        (e.ctrlKey || e.metaKey || self.attributes.persistantSelectionMode) &&\n        !self.attributes.singleSelectionMode,\n      i,\n      s = self.getSchema(),\n      dragBounds,\n      sBounds,\n      x = self.mouse.x,\n      y = self.mouse.y,\n      o = self.getCellAt(x, y),\n      delta,\n      ev = { NativeEvent: e, cell: o, x: x, y: y },\n      previousCell = self.currentCell;\n    clearTimeout(self.scrollTimer);\n    if (!self.isInGrid({ x: x, y: y })) {\n      self.hasFocus = false;\n    }\n    if (self.dispatchEvent('mousemove', ev)) {\n      return;\n    }\n    if (o && self.currentCell) {\n      self.rowBoundaryCrossed = self.currentCell.rowIndex !== o.rowIndex;\n      self.columnBoundaryCrossed =\n        self.currentCell.columnIndex !== o.columnIndex;\n      self.cellBoundaryCrossed =\n        self.rowBoundaryCrossed || self.columnBoundaryCrossed;\n      ['row', 'column', 'cell'].forEach(function (prefix) {\n        if (self[prefix + 'BoundaryCrossed']) {\n          ev.cell = previousCell;\n          self.dispatchEvent(prefix + 'mouseout', ev);\n          ev.cell = o;\n          self.dispatchEvent(prefix + 'mouseover', ev);\n        }\n      });\n    }\n    self.currentCell = o;\n    if (!self.hasFocus) {\n      return;\n    }\n    self.hovers = {};\n    if (!self.draggingItem && o && self.scrollModes.indexOf(o.context) === -1) {\n      self.dragItem = o;\n      self.dragMode = o.dragContext;\n      self.cursor = o.context;\n      if (o.context === 'cell') {\n        self.cursor = 'default';\n        self.hovers = { rowIndex: o.rowIndex, columnIndex: o.columnIndex };\n      }\n      if ((self.selecting || self.reorderObject) && o.context === 'cell') {\n        delta = {\n          x: Math.abs(self.dragStart.x - x),\n          y: Math.abs(self.dragStart.y - y),\n        };\n        if (self.dragStartObject.columnIndex !== -1 && e.shiftKey) {\n          self.dragStartObject = {\n            rowIndex: self.activeCell.rowIndex,\n            columnIndex: self.activeCell.columnIndex,\n          };\n        }\n        dragBounds = {\n          top: Math.min(self.dragStartObject.rowIndex, o.rowIndex),\n          left: Math.min(self.dragStartObject.columnIndex, o.columnIndex),\n          bottom: Math.max(self.dragStartObject.rowIndex, o.rowIndex),\n          right: Math.max(self.dragStartObject.columnIndex, o.columnIndex),\n        };\n        if (self.dragStartObject.columnIndex === -1) {\n          sBounds = self.getSelectionBounds();\n          dragBounds.left = -1;\n          dragBounds.right = s.length - 1;\n          dragBounds.top = Math.min(sBounds.top, o.rowIndex);\n          dragBounds.bottom = Math.max(sBounds.bottom, o.rowIndex);\n        }\n        if (\n          self.dragStartObject.rowIndex !== o.rowIndex ||\n          self.dragStartObject.columnIndex !== o.columnIndex\n        ) {\n          self.ignoreNextClick = true;\n        }\n        if (\n          self.cellBoundaryCrossed ||\n          (delta.x === 0 && delta.y === 0) ||\n          self.attributes.selectionMode === 'row'\n        ) {\n          if (\n            (self.attributes.selectionMode === 'row' ||\n              self.dragStartObject.columnIndex === -1) &&\n            self.rowBoundaryCrossed\n          ) {\n            self.selectRow(o.rowIndex, ctrl, null, true);\n          } else if (self.attributes.selectionMode !== 'row') {\n            if (!self.dragAddToSelection && o.rowIndex !== undefined) {\n              if (\n                self.selections[o.rowIndex] &&\n                self.selections[o.rowIndex].indexOf(o.columnIndex) !== -1\n              ) {\n                self.selections[o.rowIndex].splice(\n                  self.selections[o.rowIndex].indexOf(o.columnIndex),\n                  1,\n                );\n              }\n            } else {\n              self.selections[o.rowIndex] = self.selections[o.rowIndex] || [];\n              if (self.selections[o.rowIndex].indexOf(o.columnIndex) === -1) {\n                self.selections[o.rowIndex].push(o.columnIndex);\n              }\n            }\n          }\n        }\n        if (\n          (!self.selectionBounds ||\n            dragBounds.top !== self.selectionBounds.top ||\n            dragBounds.left !== self.selectionBounds.left ||\n            dragBounds.bottom !== self.selectionBounds.bottom ||\n            dragBounds.right !== self.selectionBounds.right) &&\n          !ctrl\n        ) {\n          self.selections = [];\n          sBounds = dragBounds;\n          if (self.attributes.selectionMode === 'row') {\n            for (i = sBounds.top; i <= sBounds.bottom; i += 1) {\n              self.selectRow(i, true, null, true);\n            }\n          } else if (dragBounds.top !== -1) {\n            self.selectArea(sBounds, true);\n          }\n        }\n        self.autoScrollZone(e, x, y, ctrl);\n      }\n    }\n    self.cellBoundaryCrossed = false;\n    self.rowBoundaryCrossed = false;\n    self.columnBoundaryCrossed = false;\n    self.draw(true);\n  };\n  self.click = function (e, overridePos) {\n    var i,\n      startingBounds = JSON.stringify(self.getSelectionBounds()),\n      ctrl =\n        (e.ctrlKey || e.metaKey || self.attributes.persistantSelectionMode) &&\n        !self.attributes.singleSelectionMode,\n      pos = overridePos || self.getLayerPos(e);\n    self.currentCell = self.getCellAt(pos.x, pos.y);\n    if (self.currentCell.grid !== undefined) {\n      return;\n    }\n    function checkSelectionChange() {\n      var ev,\n        sb = self.getSelectionBounds();\n      if (startingBounds === JSON.stringify(sb)) {\n        return;\n      }\n      ev = {\n        selections: self.selections,\n        selectionBounds: self.getSelectionBounds(),\n      };\n      Object.defineProperty(ev, 'selectedData', {\n        get: function () {\n          return self.getSelectedData();\n        },\n      });\n      self.dispatchEvent('selectionchanged', ev);\n    }\n    if (self.input) {\n      self.endEdit();\n    }\n    if (self.ignoreNextClick) {\n      self.ignoreNextClick = false;\n      return;\n    }\n    i = self.currentCell;\n    if (\n      self.dispatchEvent('click', { NativeEvent: e, cell: self.currentCell })\n    ) {\n      return;\n    }\n    if (!self.hasFocus) {\n      return;\n    }\n    if (\n      ['rowHeaderCell', 'columnHeaderCell'].indexOf(self.currentCell.style) ===\n        -1 &&\n      !ctrl\n    ) {\n      self.setActiveCell(i.columnIndex, i.rowIndex);\n    }\n    if (self.currentCell.context === 'cell') {\n      if (self.currentCell.style === 'cornerCell') {\n        self.selectAll();\n        self.draw();\n        checkSelectionChange();\n        return;\n      }\n      if (self.currentCell.style === 'columnHeaderCell') {\n        if (self.attributes.columnHeaderClickBehavior === 'sort') {\n          if (self.orderBy === i.header.name) {\n            self.orderDirection =\n              self.orderDirection === 'asc' ? 'desc' : 'asc';\n          } else {\n            self.orderDirection = 'asc';\n          }\n          self.order(i.header.name, self.orderDirection);\n          checkSelectionChange();\n          return;\n        }\n        if (self.attributes.columnHeaderClickBehavior === 'select') {\n          self.selectColumn(i.header.index, ctrl, e.shiftKey);\n          self.draw();\n          return;\n        }\n      }\n      self.selections[i.rowIndex] = self.selections[i.rowIndex] || [];\n      if (\n        self.attributes.selectionMode === 'row' ||\n        self.currentCell.style === 'rowHeaderCell'\n      ) {\n        if (\n          self.currentCell.style === 'rowHeaderCell' &&\n          self.attributes.tree &&\n          pos.x > 0 &&\n          pos.x - self.currentCell.x <\n            self.style.treeArrowWidth +\n              self.style.treeArrowMarginLeft +\n              self.style.treeArrowMarginRight +\n              self.style.treeArrowClickRadius &&\n          pos.y - self.currentCell.y <\n            self.style.treeArrowHeight +\n              self.style.treeArrowMarginTop +\n              self.style.treeArrowClickRadius &&\n          pos.y > 0\n        ) {\n          self.toggleTree(i.rowIndex);\n          return;\n        }\n      }\n      if (e.shiftKey && !ctrl) {\n        self.selectionBounds = self.getSelectionBounds();\n        self.selectArea(undefined, false);\n      }\n    }\n    checkSelectionChange();\n    self.draw(true);\n  };\n  self.dragResizeColumn = function (e) {\n    var pos, x, y;\n    pos = self.getLayerPos(e);\n    x = self.resizingStartingWidth + pos.x - self.dragStart.x;\n    y = self.resizingStartingHeight + pos.y - self.dragStart.y;\n    if (x < self.style.minColumnWidth) {\n      x = self.style.minColumnWidth;\n    }\n    if (y < self.style.minRowHeight) {\n      y = self.style.minRowHeight;\n    }\n    if (\n      self.dispatchEvent('resizecolumn', {\n        x: x,\n        y: y,\n        draggingItem: self.draggingItem,\n      })\n    ) {\n      return false;\n    }\n    if (\n      self.scrollBox.scrollLeft >\n        self.scrollBox.scrollWidth - self.attributes.resizeScrollZone &&\n      self.dragMode === 'ew-resize'\n    ) {\n      self.resize(true);\n      self.scrollBox.scrollLeft += x;\n    }\n    if (self.dragMode === 'ew-resize') {\n      self.sizes.columns[\n        self.draggingItem.header.style === 'rowHeaderCell'\n          ? 'cornerCell'\n          : self.draggingItem.sortColumnIndex\n      ] = x;\n      if (\n        ['rowHeaderCell', 'cornerCell'].indexOf(\n          self.draggingItem.header.style,\n        ) !== -1\n      ) {\n        self.resize(true);\n      }\n      self.resizeChildGrids();\n      return;\n    }\n    if (self.dragMode === 'ns-resize') {\n      if (self.draggingItem.rowOpen) {\n        self.sizes.trees[self.draggingItem.rowIndex] = y;\n      } else if (self.attributes.globalRowResize) {\n        self.style.cellHeight = y;\n      } else {\n        self.sizes.rows[self.draggingItem.rowIndex] = y;\n      }\n      self.dispatchEvent('resizerow', { row: y });\n      self.resizeChildGrids();\n      return;\n    }\n    self.ellipsisCache = {};\n  };\n  self.stopDragResize = function () {\n    self.resize();\n    document.body.removeEventListener(\n      'mousemove',\n      self.dragResizeColumn,\n      false,\n    );\n    document.body.removeEventListener('mouseup', self.stopDragResize, false);\n    self.setStorageData();\n    self.draw(true);\n    self.ignoreNextClick = true;\n  };\n  self.scrollGrid = function (e) {\n    var pos = self.getLayerPos(e);\n    if (\n      self.attributes.scrollPointerLock &&\n      self.pointerLockPosition &&\n      ['horizontal-scroll-box', 'vertical-scroll-box'].indexOf(\n        self.scrollStartMode,\n      ) !== -1\n    ) {\n      self.pointerLockPosition.x += e.movementX;\n      self.pointerLockPosition.y += e.movementY;\n      self.pointerLockPosition.x = Math.min(\n        self.width - self.style.scrollBarWidth,\n        Math.max(0, self.pointerLockPosition.x),\n      );\n      self.pointerLockPosition.y = Math.min(\n        self.height - self.style.scrollBarWidth,\n        Math.max(0, self.pointerLockPosition.y),\n      );\n      pos = self.pointerLockPosition;\n    }\n    self.scrollMode = self.getCellAt(pos.x, pos.y).context;\n    if (\n      self.scrollMode === 'horizontal-scroll-box' &&\n      self.scrollStartMode !== 'horizontal-scroll-box'\n    ) {\n      self.scrollStartMode = 'horizontal-scroll-box';\n      self.dragStart = pos;\n      self.scrollStart.left = self.scrollBox.scrollLeft;\n      clearTimeout(self.scrollTimer);\n      return;\n    }\n    if (\n      self.scrollMode === 'vertical-scroll-box' &&\n      self.scrollStartMode !== 'vertical-scroll-box'\n    ) {\n      self.scrollStartMode = 'vertical-scroll-box';\n      self.dragStart = pos;\n      self.scrollStart.top = self.scrollBox.scrollTop;\n      clearTimeout(self.scrollTimer);\n      return;\n    }\n    if (\n      self.scrollStartMode === 'vertical-scroll-box' &&\n      self.scrollMode !== 'vertical-scroll-box'\n    ) {\n      self.scrollMode = 'vertical-scroll-box';\n    }\n    if (\n      self.scrollStartMode === 'horizontal-scroll-box' &&\n      self.scrollMode !== 'horizontal-scroll-box'\n    ) {\n      self.scrollMode = 'horizontal-scroll-box';\n    }\n    clearTimeout(self.scrollTimer);\n    if (self.scrollModes.indexOf(self.scrollMode) === -1) {\n      return;\n    }\n    if (self.scrollMode === 'vertical-scroll-box') {\n      self.scrollBox.scrollTop =\n        self.scrollStart.top +\n        (pos.y - self.dragStart.y) / self.scrollBox.heightBoxRatio;\n    } else if (self.scrollMode === 'vertical-scroll-top') {\n      self.scrollBox.scrollTop -= self.page * self.style.cellHeight;\n      self.scrollTimer = setTimeout(\n        self.scrollGrid,\n        self.attributes.scrollRepeatRate,\n        e,\n      );\n    } else if (self.scrollMode === 'vertical-scroll-bottom') {\n      self.scrollBox.scrollTop += self.page * self.style.cellHeight;\n      self.scrollTimer = setTimeout(\n        self.scrollGrid,\n        self.attributes.scrollRepeatRate,\n        e,\n      );\n    }\n    if (self.scrollMode === 'horizontal-scroll-box') {\n      self.scrollBox.scrollLeft =\n        self.scrollStart.left +\n        (pos.x - self.dragStart.x) / self.scrollBox.widthBoxRatio;\n    } else if (self.scrollMode === 'horizontal-scroll-right') {\n      self.scrollBox.scrollLeft += self.attributes.selectionScrollIncrement;\n      self.scrollTimer = setTimeout(\n        self.scrollGrid,\n        self.attributes.scrollRepeatRate,\n        e,\n      );\n    } else if (self.scrollMode === 'horizontal-scroll-left') {\n      self.scrollBox.scrollLeft -= self.attributes.selectionScrollIncrement;\n      self.scrollTimer = setTimeout(\n        self.scrollGrid,\n        self.attributes.scrollRepeatRate,\n        e,\n      );\n    }\n  };\n  self.stopScrollGrid = function () {\n    clearTimeout(self.scrollTimer);\n    if (document.exitPointerLock) {\n      document.exitPointerLock();\n    }\n    document.removeEventListener('mousemove', self.scrollGrid, false);\n  };\n  self.dragReorder = function (e) {\n    var pos,\n      x,\n      y,\n      columReorder = self.dragMode === 'column-reorder',\n      rowReorder = self.dragMode === 'row-reorder';\n    pos = self.getLayerPos(e);\n    x = pos.x - self.dragStart.x;\n    y = pos.y - self.dragStart.y;\n    if (!self.attributes.allowColumnReordering && columReorder) {\n      return;\n    }\n    if (!self.attributes.allowRowReordering && rowReorder) {\n      return;\n    }\n    if (\n      self.dispatchEvent('reordering', {\n        NativeEvent: e,\n        source: self.dragStartObject,\n        target: self.currentCell,\n        dragMode: self.dragMode,\n      })\n    ) {\n      return;\n    }\n    if (\n      Math.abs(x) > self.attributes.reorderDeadZone ||\n      Math.abs(y) > self.attributes.reorderDeadZone\n    ) {\n      self.reorderObject = self.draggingItem;\n      self.reorderTarget = self.currentCell;\n      self.reorderObject.dragOffset = {\n        x: x,\n        y: y,\n      };\n      self.autoScrollZone(\n        e,\n        columReorder ? pos.x : -1,\n        rowReorder ? pos.y : -1,\n        false,\n      );\n    }\n  };\n  self.stopDragReorder = function (e) {\n    var oIndex,\n      tIndex,\n      cr = {\n        'row-reorder': self.orders.rows,\n        'column-reorder': self.orders.columns,\n      },\n      i = {\n        'row-reorder': 'rowIndex',\n        'column-reorder': 'sortColumnIndex',\n      }[self.dragMode];\n    document.body.removeEventListener('mousemove', self.dragReorder, false);\n    document.body.removeEventListener('mouseup', self.stopDragReorder, false);\n    if (\n      self.reorderObject &&\n      self.reorderTarget &&\n      ((self.dragMode === 'column-reorder' &&\n        self.reorderTarget.sortColumnIndex > -1 &&\n        self.reorderTarget.sortColumnIndex < self.getSchema().length) ||\n        (self.dragMode === 'row-reorder' &&\n          self.reorderTarget.rowIndex > -1 &&\n          self.reorderTarget.rowIndex < self.viewData.length)) &&\n      self.reorderObject[i] !== self.reorderTarget[i] &&\n      !self.dispatchEvent('reorder', {\n        NativeEvent: e,\n        source: self.reorderObject,\n        target: self.reorderTarget,\n        dragMode: self.dragMode,\n      })\n    ) {\n      self.ignoreNextClick = true;\n      oIndex = cr[self.dragMode].indexOf(self.reorderObject[i]);\n      tIndex = cr[self.dragMode].indexOf(self.reorderTarget[i]);\n      cr[self.dragMode].splice(oIndex, 1);\n      cr[self.dragMode].splice(tIndex, 0, self.reorderObject[i]);\n      if (self.dragMode === 'column-reorder') {\n        self.orders.columns = cr[self.dragMode];\n      } else {\n        self.orders.rows = cr[self.dragMode];\n      }\n      self.resize();\n      self.setStorageData();\n    }\n    self.reorderObject = undefined;\n    self.reorderTarget = undefined;\n    self.draw(true);\n  };\n  self.dragMove = function (e) {\n    if (\n      self.dispatchEvent('moving', { NativeEvent: e, cell: self.currentCell })\n    ) {\n      return;\n    }\n    var pos = self.getLayerPos(e);\n    self.moveOffset = {\n      x: self.currentCell.columnIndex - self.dragStartObject.columnIndex,\n      y: self.currentCell.rowIndex - self.dragStartObject.rowIndex,\n    };\n    if (\n      Math.abs(pos.x) > self.attributes.reorderDeadZone ||\n      Math.abs(pos.y) > self.attributes.reorderDeadZone\n    ) {\n      setTimeout(function () {\n        self.autoScrollZone(e, pos.x, pos.y, false);\n      }, 1);\n    }\n  };\n  self.stopDragMove = function (e) {\n    document.body.removeEventListener('mousemove', self.dragMove, false);\n    document.body.removeEventListener('mouseup', self.stopDragMove, false);\n    var b = self.getSelectionBounds();\n    if (\n      self.dispatchEvent('endmove', { NativeEvent: e, cell: self.currentCell })\n    ) {\n      self.movingSelection = undefined;\n      self.moveOffset = undefined;\n      self.draw(true);\n      return;\n    }\n    if (self.moveOffset) {\n      self.moveTo(\n        self.movingSelection,\n        b.left + self.moveOffset.x,\n        b.top + self.moveOffset.y,\n      );\n      self.moveSelection(self.moveOffset.x, self.moveOffset.y);\n    }\n    self.movingSelection = undefined;\n    self.moveOffset = undefined;\n    self.draw(true);\n  };\n  self.freezeMove = function (e) {\n    if (\n      self.dispatchEvent('freezemoving', {\n        NativeEvent: e,\n        cell: self.currentCell,\n      })\n    ) {\n      return;\n    }\n    var pos = self.getLayerPos(e);\n    self.ignoreNextClick = true;\n    self.freezeMarkerPosition = pos;\n    if (\n      self.currentCell &&\n      self.currentCell.rowIndex !== undefined &&\n      self.dragMode === 'frozen-row-marker'\n    ) {\n      self.scrollBox.scrollTop = 0;\n      self.frozenRow = self.currentCell.rowIndex + 1;\n    }\n    if (\n      self.currentCell &&\n      self.currentCell.columnIndex !== undefined &&\n      self.dragMode === 'frozen-column-marker'\n    ) {\n      self.scrollBox.scrollLeft = 0;\n      self.frozenColumn = self.currentCell.columnIndex + 1;\n    }\n    if (\n      Math.abs(pos.x) > self.attributes.reorderDeadZone ||\n      Math.abs(pos.y) > self.attributes.reorderDeadZone\n    ) {\n      setTimeout(function () {\n        self.autoScrollZone(e, pos.x, pos.y, false);\n      }, 1);\n    }\n  };\n  self.stopFreezeMove = function (e) {\n    document.body.removeEventListener('mousemove', self.freezeMove, false);\n    document.body.removeEventListener('mouseup', self.stopFreezeMove, false);\n    self.freezeMarkerPosition = undefined;\n    if (\n      self.dispatchEvent('endfreezemove', {\n        NativeEvent: e,\n        cell: self.currentCell,\n      })\n    ) {\n      self.frozenRow = self.startFreezeMove.x;\n      self.frozenColumn = self.startFreezeMove.y;\n      self.draw(true);\n      return;\n    }\n    self.draw(true);\n  };\n  self.mousedown = function (e, overridePos) {\n    self.lastMouseDownTarget = e.target;\n    if (\n      self.dispatchEvent('mousedown', {\n        NativeEvent: e,\n        cell: self.currentCell,\n      })\n    ) {\n      return;\n    }\n    if (!self.hasFocus) {\n      return;\n    }\n    if (e.button === 2 || self.input) {\n      return;\n    }\n    var ctrl = e.ctrlKey || e.metaKey,\n      move = /-move/.test(self.dragMode),\n      freeze = /frozen-row-marker|frozen-column-marker/.test(self.dragMode),\n      resize = /-resize/.test(self.dragMode);\n    self.dragStart = overridePos || self.getLayerPos(e);\n    self.scrollStart = {\n      left: self.scrollBox.scrollLeft,\n      top: self.scrollBox.scrollTop,\n    };\n    self.dragStartObject = self.getCellAt(self.dragStart.x, self.dragStart.y);\n    self.dragAddToSelection = !self.dragStartObject.selected;\n    if (\n      !ctrl &&\n      !e.shiftKey &&\n      !/(vertical|horizontal)-scroll-(bar|box)/.test(\n        self.dragStartObject.context,\n      ) &&\n      self.currentCell &&\n      !self.currentCell.isColumnHeader &&\n      !move &&\n      !freeze &&\n      !resize\n    ) {\n      self.selections = [];\n    }\n    if (self.dragStartObject.isGrid) {\n      return;\n    }\n    if (self.scrollModes.indexOf(self.dragStartObject.context) !== -1) {\n      self.scrollMode = self.dragStartObject.context;\n      self.scrollStartMode = self.dragStartObject.context;\n      self.scrollGrid(e);\n      if (\n        self.attributes.scrollPointerLock &&\n        ['horizontal-scroll-box', 'vertical-scroll-box'].indexOf(\n          self.scrollStartMode,\n        ) !== -1\n      ) {\n        self.pointerLockPosition = {\n          x: self.dragStart.x,\n          y: self.dragStart.y,\n        };\n        self.canvas.requestPointerLock();\n      }\n      document.addEventListener('mousemove', self.scrollGrid, false);\n      document.addEventListener('mouseup', self.stopScrollGrid, false);\n      self.ignoreNextClick = true;\n      return;\n    }\n    if (self.dragMode === 'cell') {\n      self.selecting = true;\n      if (\n        (self.attributes.selectionMode === 'row' ||\n          self.dragStartObject.columnIndex === -1) &&\n        self.dragStartObject.rowIndex > -1\n      ) {\n        self.selectRow(self.dragStartObject.rowIndex, ctrl, null);\n      } else if (self.attributes.selectionMode !== 'row') {\n        self.mousemove(e);\n      }\n      return;\n    }\n    if (move) {\n      self.draggingItem = self.dragItem;\n      self.movingSelection = self.selections.concat([]);\n      self.dragging = self.dragStartObject;\n      if (\n        self.dispatchEvent('beginmove', {\n          NativeEvent: e,\n          cell: self.currentCell,\n        })\n      ) {\n        return;\n      }\n      document.body.addEventListener('mousemove', self.dragMove, false);\n      document.body.addEventListener('mouseup', self.stopDragMove, false);\n      return self.mousemove(e);\n    }\n    if (freeze) {\n      self.draggingItem = self.dragItem;\n      self.startFreezeMove = {\n        x: self.frozenRow,\n        y: self.frozenColumn,\n      };\n      if (self.dispatchEvent('beginfreezemove', { NativeEvent: e })) {\n        return;\n      }\n      document.body.addEventListener('mousemove', self.freezeMove, false);\n      document.body.addEventListener('mouseup', self.stopFreezeMove, false);\n      return self.mousemove(e);\n    }\n    if (resize) {\n      self.draggingItem = self.dragItem;\n      if (self.draggingItem.rowOpen) {\n        self.resizingStartingHeight =\n          self.sizes.trees[self.draggingItem.rowIndex];\n      } else {\n        self.resizingStartingHeight =\n          self.sizes.rows[self.draggingItem.rowIndex] || self.style.cellHeight;\n      }\n      self.resizingStartingWidth =\n        self.sizes.columns[\n          self.draggingItem.header.style === 'rowHeaderCell'\n            ? 'cornerCell'\n            : self.draggingItem.sortColumnIndex\n        ] || self.draggingItem.width;\n      document.body.addEventListener('mousemove', self.dragResizeColumn, false);\n      document.body.addEventListener('mouseup', self.stopDragResize, false);\n      return;\n    }\n    if (['row-reorder', 'column-reorder'].indexOf(self.dragMode) !== -1) {\n      self.draggingItem = self.dragStartObject;\n      document.body.addEventListener('mousemove', self.dragReorder, false);\n      document.body.addEventListener('mouseup', self.stopDragReorder, false);\n      return;\n    }\n  };\n  self.mouseup = function (e) {\n    clearTimeout(self.scrollTimer);\n    self.cellBoundaryCrossed = true;\n    self.rowBoundaryCrossed = true;\n    self.columnBoundaryCrossed = true;\n    self.selecting = undefined;\n    self.draggingItem = undefined;\n    self.dragStartObject = undefined;\n    if (\n      self.dispatchEvent('mouseup', { NativeEvent: e, cell: self.currentCell })\n    ) {\n      return;\n    }\n    if (!self.hasFocus && e.target !== self.canvas) {\n      return;\n    }\n    if (self.currentCell && self.currentCell.grid !== undefined) {\n      return;\n    }\n    if (self.contextMenu || self.input) {\n      return;\n    }\n    if (self.dragStart && self.isInGrid(self.dragStart)) {\n      self.controlInput.focus();\n    }\n    e.preventDefault();\n  };\n  // gets the horizontal adjacent cells as well as first/last based on column visibility\n  self.getAdjacentCells = function () {\n    var x,\n      i,\n      s = self.getSchema(),\n      o = {};\n    for (x = 0; x < s.length; x += 1) {\n      i = self.orders.columns[x];\n      if (!s[i].hidden) {\n        if (o.first === undefined) {\n          o.first = x;\n          o.left = x;\n        }\n        o.last = x;\n        if (x > self.activeCell.columnIndex && o.right === undefined) {\n          o.right = x;\n        }\n        if (x < self.activeCell.columnIndex) {\n          o.left = x;\n        }\n      }\n    }\n    if (o.right === undefined) {\n      o.right = o.last;\n    }\n    return o;\n  };\n  self.keydown = function (e) {\n    var i,\n      ev,\n      adjacentCells = self.getAdjacentCells(),\n      x = self.activeCell.columnIndex,\n      y = self.activeCell.rowIndex,\n      ctrl = e.ctrlKey || e.metaKey,\n      last = self.viewData.length - 1,\n      s = self.getSchema(),\n      cols = s.length - 1;\n\n    var defaultPrevented = self.dispatchEvent('keydown', {\n      NativeEvent: e,\n      cell: self.currentCell,\n    });\n\n    if (defaultPrevented) {\n      return;\n    }\n\n    if (!self.hasFocus) {\n      return;\n    }\n\n    // If a user starts typing content, switch to \"Enter\" mode\n    if (isPrintableKeyEvent(e) && !ctrl) {\n      return self.beginEditAt(x, y, e, true);\n    }\n\n    if (self.attributes.showNewRow) {\n      last += 1;\n    }\n\n    if (e.key === 'Tab') {\n      e.preventDefault();\n    }\n\n    if (e.key === 'Escape') {\n      self.selectNone();\n    } else if (ctrl && e.key === 'a') {\n      self.selectAll();\n    } else if (e.key === 'ArrowDown') {\n      y += 1;\n    } else if (e.key === 'ArrowUp') {\n      y -= 1;\n    } else if (\n      (e.key === 'ArrowLeft' && !ctrl) ||\n      (e.shiftKey && e.key === 'Tab')\n    ) {\n      x = adjacentCells.left;\n    } else if (\n      (e.key === 'ArrowRight' && !ctrl) ||\n      (!e.shiftKey && e.key === 'Tab')\n    ) {\n      x = adjacentCells.right;\n    } else if (e.key === 'PageUp') {\n      y -= self.page;\n      e.preventDefault();\n    } else if (e.key === 'PageDown') {\n      y += self.page;\n      e.preventDefault();\n    } else if (e.key === 'Home' || (ctrl && e.key === 'ArrowUp')) {\n      y = 0;\n    } else if (e.key === 'End' || (ctrl && e.key === 'ArrowDown')) {\n      y = self.viewData.length - 1;\n    } else if (ctrl && e.key === 'ArrowRight') {\n      x = adjacentCells.last;\n    } else if (ctrl && e.key === 'ArrowLeft') {\n      x = adjacentCells.first;\n    }\n\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      return self.beginEditAt(x, y, e);\n    }\n\n    if (x < 0 || Number.isNaN(x)) {\n      x = adjacentCells.first;\n    }\n    if (y > last) {\n      y = last;\n    }\n    if (y < 0 || Number.isNaN(y)) {\n      y = 0;\n    }\n    if (x > cols) {\n      x = adjacentCells.last;\n    }\n\n    // TODO - most likely some column order related bugs in key based selection\n    // Arrows\n    var isArrowKey = [\n      'ArrowLeft',\n      'ArrowUp',\n      'ArrowRight',\n      'ArrowDown',\n    ].includes(e.key);\n\n    if (e.shiftKey && isArrowKey) {\n      self.selections[Math.max(y, 0)] = self.selections[Math.max(y, 0)] || [];\n      self.selections[Math.max(y, 0)].push(x);\n\n      self.selectionBounds = self.getSelectionBounds();\n      self.selectArea(undefined, ctrl);\n\n      self.draw(true);\n    }\n\n    if (x !== self.activeCell.columnIndex || y !== self.activeCell.rowIndex) {\n      self.scrollIntoView(\n        x !== self.activeCell.columnIndex ? x : undefined,\n        y !== self.activeCell.rowIndex && !Number.isNaN(y) ? y : undefined,\n      );\n\n      self.setActiveCell(x, y);\n      if (!e.shiftKey && self.attributes.selectionFollowsActiveCell) {\n        if (!ctrl) {\n          self.selections = [];\n        }\n        self.selections[y] = self.selections[y] || [];\n        self.selections[y].push(x);\n        ev = {\n          selectedData: self.getSelectedData(),\n          selections: self.selections,\n          selectionBounds: self.getSelectionBounds(),\n        };\n        Object.defineProperty(ev, 'selectedData', {\n          get: function () {\n            return self.getSelectedData();\n          },\n        });\n        self.dispatchEvent('selectionchanged', ev);\n      }\n      self.draw(true);\n    }\n  };\n  self.keyup = function (e) {\n    if (\n      self.dispatchEvent('keyup', { NativeEvent: e, cell: self.currentCell })\n    ) {\n      return;\n    }\n    if (!self.hasFocus) {\n      return;\n    }\n  };\n  self.keypress = function (e) {\n    if (!self.hasFocus) {\n      return;\n    }\n    if (\n      self.dispatchEvent('keypress', { NativeEvent: e, cell: self.currentCell })\n    ) {\n      return;\n    }\n  };\n  self.dblclick = function (e) {\n    if (\n      self.dispatchEvent('dblclick', { NativeEvent: e, cell: self.currentCell })\n    ) {\n      return;\n    }\n    if (!self.hasFocus) {\n      return;\n    }\n    if (\n      self.currentCell.context === 'ew-resize' &&\n      self.currentCell.style === 'columnHeaderCell'\n    ) {\n      self.fitColumnToValues(self.currentCell.header.name);\n    } else if (\n      self.currentCell.context === 'ew-resize' &&\n      self.currentCell.style === 'cornerCell'\n    ) {\n      self.autosize();\n    } else if (['cell', 'activeCell'].indexOf(self.currentCell.style) !== -1) {\n      self.beginEditAt(self.currentCell.columnIndex, self.currentCell.rowIndex);\n    }\n  };\n  self.scrollWheel = function (e) {\n    var l,\n      t,\n      ev = e,\n      deltaX = e.deltaX === undefined ? e.NativeEvent.deltaX : e.deltaX,\n      deltaY = e.deltaY === undefined ? e.NativeEvent.deltaY : e.deltaY,\n      deltaMode =\n        e.deltaMode === undefined ? e.NativeEvent.deltaMode : e.deltaMode;\n    var e = e.NativeEvent || e;\n    if (wheeling) {\n      ev.preventDefault(e);\n      return;\n    }\n    if (self.dispatchEvent('wheel', { NativeEvent: e })) {\n      return;\n    }\n    self.touchHaltAnimation = true;\n    l = self.scrollBox.scrollLeft;\n    t = self.scrollBox.scrollTop;\n    if (self.hasFocus) {\n      //BUG Issue 42: https://github.com/TonyGermaneri/canvas-datagrid/issues/42\n      //https://stackoverflow.com/questions/20110224/what-is-the-height-of-a-line-in-a-wheel-event-deltamode-dom-delta-line\n      if (deltaMode === 1) {\n        // line mode = 17 pixels per line\n        deltaY = deltaY * 17;\n      }\n      if (\n        (self.scrollBox.scrollTop < self.scrollBox.scrollHeight &&\n          deltaY > 0) ||\n        (self.scrollBox.scrollLeft < self.scrollBox.scrollWidth &&\n          deltaX > 0) ||\n        (self.scrollBox.scrollTop > 0 && deltaY < 0) ||\n        (self.scrollBox.scrollLeft > 0 && deltaX < 0)\n      ) {\n        ev.preventDefault(e);\n      }\n      wheeling = setTimeout(function () {\n        wheeling = undefined;\n        self.scrollBox.scrollTo(deltaX + l, deltaY + t);\n      }, 1);\n    }\n  };\n\n  self.pasteData = function (\n    pasteValue,\n    mimeType,\n    startRowIndex,\n    startColIndex,\n  ) {\n    var schema = self.getVisibleSchema();\n\n    const isSupportedHtmlTable = (htmlString) =>\n      /(?:^(<meta[^>]+>)?<table>)|(?:<!--StartFragment-->\\s*<table>)/.test(\n        htmlString,\n      );\n\n    // TODO: support pasting tables from Excel\n    if (\n      mimeType === 'text/html' &&\n      isSupportedHtmlTable(pasteValue) === false\n    ) {\n      console.warn(\n        'Unrecognized HTML format. HTML must be a simple table, e.g.: <table><tr><td>data</td></tr></table>.',\n      );\n      console.warn(\n        'Data with the mime type text/html not in this format will not be imported as row data.',\n      );\n\n      return;\n    }\n\n    function parseData(data, mimeType) {\n      // TODO: use DOMParser\n      if (mimeType === 'text/html') {\n        // strip table beginning and ending off, then split at rows\n        var cleanedHtmlData = data\n          .substring(\n            data.indexOf('<table><tr>') + 11,\n            data.indexOf('</tr></table>'),\n          )\n          .split('</tr><tr>')\n          .filter(\n            // ditch any headers on the table\n            (row) => !/^<th>|^<thead>/.test(row),\n          )\n          .map(\n            // split row into individual cells\n            (row) =>\n              row\n                .match(/<td>[^<]+/g)\n                .map((match) => match.replace(/^<td>/, '')),\n          );\n\n        return cleanedHtmlData;\n      }\n\n      // Default data format is string, so split on new line,\n      // and then enclose in an array (a row with one cell):\n      return data.split('\\n').map((value) => [value]);\n    }\n\n    var rows = parseData(pasteValue, mimeType);\n\n    // Special case: if rows.length = 1, we paste this value in each\n    // selected cell. This mimics Excel's paste functionality, and works\n    // as a poor-man's fill-down.\n    if (rows.length === 1) {\n      var cellData = rows[0][0];\n\n      self.forEachSelectedCell(function (data, rowIndex, colName) {\n        data[rowIndex][colName] = cellData;\n      });\n    } else {\n      var selections = [];\n      for (var rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n        // Rows may have been moved by user, so get the actual row index\n        // (instead of the row index at which the row is rendered):\n        var realRowIndex = self.orders.rows[startRowIndex + rowIndex];\n        var cells = rows[rowIndex];\n\n        var existingRowData = self.viewData[realRowIndex];\n        var newRowData = Object.assign({}, existingRowData);\n\n        selections[realRowIndex] = [];\n\n        for (var colIndex = 0; colIndex < cells.length; colIndex++) {\n          var column = schema[startColIndex + colIndex];\n\n          if (!column) {\n            console.warn('Paste data exceeded grid bounds. Skipping.');\n            continue;\n          }\n\n          var columnName = column.name;\n          var cellData = cells[colIndex];\n\n          if (cellData === undefined || cellData === null) {\n            newRowData[columnName] = existingRowData[columnName];\n            continue;\n          }\n\n          selections[realRowIndex].push(startColIndex + colIndex);\n\n          newRowData[columnName] = cellData;\n        }\n\n        self.originalData[realRowIndex] = newRowData;\n      }\n      self.selections = selections;\n    }\n\n    // selections is a sparse array, so we condense:\n    var affectedCells = [];\n\n    self.selections.forEach(function (row, rowIndex) {\n      if (rowIndex === undefined) return;\n\n      row.forEach(function (columnIndex) {\n        affectedCells.push([rowIndex, columnIndex]);\n      });\n    });\n\n    self.dispatchEvent('afterpaste', {\n      cells: affectedCells,\n    });\n\n    // Because originalData has been updated, we must refresh\n    // viewData to ensure the new cell values are rendered\n    self.refresh();\n\n    return rows.length;\n  };\n  self.getNextVisibleColumnIndex = function (visibleColumnIndex) {\n    var x,\n      s = self.getVisibleSchema();\n    for (x = 0; x < s.length; x += 1) {\n      if (s[x].columnIndex === visibleColumnIndex) {\n        return s[x + 1].columnIndex;\n      }\n    }\n    return -1;\n  };\n  self.getVisibleColumnIndexOf = function (columnIndex) {\n    var x,\n      s = self.getVisibleSchema();\n    for (x = 0; x < s.length; x += 1) {\n      if (s[x].columnIndex === columnIndex) {\n        return x;\n      }\n    }\n    return -1;\n  };\n  self.paste = function (event) {\n    if (!self.attributes.editable) {\n      return;\n    }\n\n    var defaultPrevented = self.dispatchEvent('beforepaste', {\n      NativeEvent: event,\n    });\n\n    if (defaultPrevented) {\n      return;\n    }\n\n    var clipboardItems = new Map(\n      Array.from(event.clipboardData.items).map((item) => [item.type, item]),\n    );\n\n    // Supported MIME types, in order of preference:\n    var supportedMimeTypes = ['text/html', 'text/csv', 'text/plain'];\n\n    // The clipboard will often contain the same data in multiple formats,\n    // which can be used depending on the context in which it's pasted. Here\n    // we'll prefere more structured (HTML/CSV) over less structured, when\n    // available, so we try to find those first:\n    var pasteableItems = supportedMimeTypes\n      .map((mimeType) => clipboardItems.get(mimeType))\n      .filter((item) => !!item); // filter out not-found MIME types (= undefined)\n\n    if (pasteableItems.length === 0) {\n      console.warn(\n        'Cannot find supported clipboard data type. Supported types are:',\n        supportedMimeTypes.join(', '),\n      );\n      return;\n    }\n\n    var itemToPaste = pasteableItems[0];\n\n    // itemToPaste is cleared once accessed (getData or getAsString),\n    // so we need to store the type here, before reading its value:\n    var pasteType = itemToPaste.type;\n\n    itemToPaste.getAsString(function (pasteValue) {\n      self.pasteData(\n        pasteValue,\n        pasteType,\n        self.activeCell.rowIndex,\n        self.getVisibleColumnIndexOf(self.activeCell.columnIndex),\n      );\n\n      self.draw();\n    });\n  };\n  self.cut = function (e) {\n    self.copy(e);\n    self.forEachSelectedCell(function (data, index, colName) {\n      data[index][colName] = '';\n    });\n  };\n  self.copy = function (e) {\n    if (self.dispatchEvent('copy', { NativeEvent: e })) {\n      return;\n    }\n    if (!self.hasFocus || !e.clipboardData) {\n      return;\n    }\n    var t,\n      d,\n      tableRows = [],\n      textRows = [],\n      outputHeaders = {},\n      outputHeaderKeys,\n      sData = self.getSelectedData(),\n      s = self.getSchema();\n    function htmlSafe(v) {\n      return v.replace(/</g, '&lt;').replace(/>/g, '&gt;');\n    }\n    function fCopyCell(v) {\n      v = v === null || v === undefined ? '' : v;\n      return '<td>' + (typeof v === 'string' ? htmlSafe(v) : v) + '</td>';\n    }\n    function addHeaders(headers, useHtml) {\n      if (!s.length || headers.length < 2) {\n        return '';\n      }\n      var h = [];\n      if (useHtml) {\n        h.push('<tr>');\n      }\n      s.forEach(function (column, columnIndex) {\n        // intentional redefinition of column\n        column = s[self.orders.columns[columnIndex]];\n        if (!column.hidden && headers.indexOf(column.name) !== -1) {\n          var ev = { NativeEvent: e, column: column };\n          if (self.dispatchEvent('copyonschema', ev)) {\n            column = ev.column;\n          }\n\n          var hVal = column.name || column.title || '';\n          if (useHtml) {\n            h.push('<th>' + htmlSafe(hVal) + '</th>');\n          } else {\n            h.push('\"' + hVal.replace(/\"/g, '\"\"') + '\"');\n          }\n        }\n      });\n      h.push(useHtml ? '</tr>' : '\\n');\n      return h.join(useHtml ? '' : ',');\n    }\n    function addCellValue(val, trRow, textRow, column) {\n      // escape strings\n      if (val !== null && val !== false && val !== undefined && val.replace) {\n        trRow.push(fCopyCell(val));\n        textRow.push('\"' + val.replace(/\"/g, '\"\"') + '\"');\n        return;\n      }\n      if (val !== undefined) {\n        textRow.push(val);\n        trRow.push(fCopyCell(val));\n        return;\n      }\n      // issue #66\n      textRow.push('');\n      trRow.push('<td>&nbsp;</td>');\n    }\n    if (sData.length > 0) {\n      sData.forEach(function (row) {\n        var rowKeys = Object.keys(row);\n        if (row) {\n          var trRow = [],\n            textRow = [],\n            sSorted = [];\n          // HACK: https://github.com/TonyGermaneri/canvas-datagrid/issues/181\n          // I can't use sort here or O(1), so hacks\n          s.forEach(function (column, columnIndex) {\n            sSorted.push(s[self.orders.columns[columnIndex]]);\n          });\n          sSorted.forEach(function (column, columnIndex) {\n            if (rowKeys.indexOf(column.name) !== -1) {\n              outputHeaders[column.name] = true;\n              // escape strings\n              addCellValue(row[column.name], trRow, textRow, column);\n            }\n          });\n          tableRows.push(trRow.join(''));\n          textRows.push(textRow.join(','));\n        }\n      });\n      outputHeaderKeys = Object.keys(outputHeaders);\n      t = addHeaders(outputHeaderKeys) + textRows.join('\\n');\n      d =\n        '<table>' +\n        addHeaders(outputHeaderKeys, true) +\n        '<tr>' +\n        tableRows.join('</tr><tr>') +\n        '</tr></table>';\n      if (outputHeaderKeys.length === 1) {\n        // if there was only one cell selected, remove the quotes from the string\n        t = t.substring(1, t.length - 1);\n      }\n      e.clipboardData.setData('text/html', d);\n      e.clipboardData.setData('text/plain', t);\n      e.clipboardData.setData('text/csv', t);\n      e.clipboardData.setData('application/json', JSON.stringify(sData));\n      e.preventDefault();\n    }\n  };\n  return;\n}\n","/*jslint browser: true, unparam: true, todo: true, plusplus: true*/\n/*globals define: true, MutationObserver: false, requestAnimationFrame: false, performance: false, btoa: false*/\n'use strict';\n\nexport default function (self) {\n  var touchTimerMs = 50,\n    debounceTouchMove,\n    touchMoving,\n    touchScrollTimeout;\n  self.scrollAnimation = {};\n  self.touchDelta = {};\n  self.touchAnimateTo = {};\n  self.animationFrames = 0;\n  self.getTouchPos = function (e, touchIndex) {\n    var t = touchIndex ? e.touches[touchIndex] : e.touches[0],\n      rect = self.canvas.getBoundingClientRect(),\n      pos;\n    if (!t) {\n      return;\n    }\n    pos = {\n      x: t.clientX - rect.left,\n      y: t.clientY - rect.top,\n    };\n    if (self.isChildGrid) {\n      pos.x -= self.canvasOffsetLeft;\n      pos.y -= self.canvasOffsetTop;\n    }\n    return {\n      x: pos.x,\n      y: pos.y,\n      rect: rect,\n    };\n  };\n  // shamelessly stolen from from https://gist.github.com/gre/1650294\n  self.easingFunctions = {\n    linear: function (t) {\n      return t;\n    },\n    easeInQuad: function (t) {\n      return t * t;\n    },\n    easeOutQuad: function (t) {\n      return t * (2 - t);\n    },\n    easeInOutQuad: function (t) {\n      return t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t;\n    },\n    easeInCubic: function (t) {\n      return t * t * t;\n    },\n    easeOutCubic: function (t) {\n      return --t * t * t + 1;\n    },\n    easeInOutCubic: function (t) {\n      return t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\n    },\n    easeInQuart: function (t) {\n      return t * t * t * t;\n    },\n    easeOutQuart: function (t) {\n      return 1 - --t * t * t * t;\n    },\n    easeInOutQuart: function (t) {\n      return t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t;\n    },\n    easeInQuint: function (t) {\n      return t * t * t * t * t;\n    },\n    easeOutQuint: function (t) {\n      return 1 + --t * t * t * t * t;\n    },\n    easeInOutQuint: function (t) {\n      return t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t;\n    },\n  };\n  self.easing = function (t, b, c, d) {\n    return (\n      c * self.easingFunctions[self.attributes.touchEasingMethod](t / d) + b\n    );\n  };\n  self.calculatePPSTimed = function () {\n    self.xPPST = -(\n      (self.touchDelta.x - self.touchSigmaTimed.x) /\n      (self.touchDelta.t - self.touchSigmaTimed.t)\n    );\n    self.yPPST = -(\n      (self.touchDelta.y - self.touchSigmaTimed.y) /\n      (self.touchDelta.t - self.touchSigmaTimed.t)\n    );\n    self.touchSigmaTimed = {\n      x: self.touchDelta.x,\n      y: self.touchDelta.y,\n      t: performance.now(),\n    };\n  };\n  self.calculatePPS = function () {\n    self.xPPS = -(\n      (self.touchDelta.x - self.touchSigma.x) /\n      (self.touchDelta.t - self.touchSigma.t)\n    );\n    self.yPPS = -(\n      (self.touchDelta.y - self.touchSigma.y) /\n      (self.touchDelta.t - self.touchSigma.t)\n    );\n    self.touchSigma = {\n      x: self.touchDelta.x,\n      y: self.touchDelta.y,\n      t: performance.now(),\n    };\n  };\n  self.touchEndAnimation = function () {\n    if (!self.canvas || !self.scrollBox.scrollTo) {\n      return requestAnimationFrame(self.touchEndAnimation);\n    }\n    var n = performance.now(),\n      d = self.attributes.touchReleaseAnimationDurationMs,\n      t;\n    t = n - self.touchDelta.t;\n    self.animationFrames += 1;\n    self.scrollAnimation.x = self.easing(\n      t,\n      self.touchDelta.scrollLeft,\n      self.touchAnimateTo.x,\n      d,\n    );\n    self.scrollAnimation.y = self.easing(\n      t,\n      self.touchDelta.scrollTop,\n      self.touchAnimateTo.y,\n      d,\n    );\n    if (\n      t > d ||\n      (self.scrollAnimation.y === self.scrollBox.scrollTop &&\n        self.scrollAnimation.x === self.scrollBox.scrollLeft) ||\n      self.stopAnimation\n    ) {\n      return;\n    }\n    self.scrollBox.scrollTo(self.scrollAnimation.x, self.scrollAnimation.y);\n    requestAnimationFrame(self.touchEndAnimation);\n  };\n  self.touchEditCell = function (cell) {\n    self.beginEditAt(cell.columnIndex, cell.rowIndex);\n  };\n  self.touchCell = function (e) {\n    return function () {\n      clearInterval(self.calculatePPSTimer);\n      var i,\n        pos = self.getTouchPos(e);\n      if (\n        Math.abs(self.touchDelta.x) + Math.abs(self.touchDelta.y) <\n        self.attributes.touchDeadZone\n      ) {\n        i = self.getCellAt(pos.x, pos.y);\n        if (!i) {\n          return;\n        }\n        if (\n          self.touchingCell &&\n          self.touchingCell.rowIndex === i.rowIndex &&\n          self.touchingCell.columnIndex === i.columnIndex\n        ) {\n          self.touchEditCell(i);\n          return;\n        }\n        if (self.input && self.input.editCell) {\n          self.endEdit();\n        }\n        self.touchingCell = i;\n        self.selectArea({\n          top: i.rowIndex,\n          bottom: i.rowIndex,\n          left: i.columnIndex,\n          right: i.columnIndex,\n        });\n        self.draw(true);\n      }\n    };\n  };\n  self.touchstart = function (e) {\n    if (e.changedTouches[0]) {\n      self.touchStart = self.getTouchPos(e);\n      self.startingCell = self.getCellAt(\n        self.touchStart.x,\n        self.touchStart.y,\n        true,\n      );\n    }\n    if (\n      self.dispatchEvent('touchstart', {\n        NativeEvent: e,\n        cell: self.startingCell,\n      })\n    ) {\n      return;\n    }\n    self.disposeContextMenu();\n    clearInterval(self.calculatePPSTimer);\n    clearTimeout(self.touchContextTimeout);\n    self.touchStartEvent = e;\n    self.stopAnimation = true;\n    self.animationFrames = 0;\n    self.stopPropagation(e);\n    e.preventDefault();\n    if (e.touches.length === 1 && e.changedTouches[0] && !self.zoomAltered) {\n      self.touchLength = 1;\n      self.touchStart = self.touchStart || self.touchStart1;\n      self.touchScrollStart = {\n        x: self.scrollBox.scrollLeft,\n        y: self.scrollBox.scrollTop,\n        t: performance.now(),\n      };\n      self.touchDelta = {\n        x: 0,\n        y: 0,\n        scrollLeft: self.scrollBox.scrollLeft,\n        scrollTop: self.scrollBox.scrollTop,\n        t: self.touchScrollStart.t,\n      };\n      self.touchSigma = {\n        x: self.touchDelta.x,\n        y: self.touchDelta.y,\n        t: self.touchDelta.t,\n      };\n      self.touchSigmaTimed = {\n        x: self.touchDelta.x,\n        y: self.touchDelta.y,\n        t: self.touchDelta.t,\n      };\n      self.touchContextTimeout = setTimeout(function () {\n        self.contextmenuEvent(e, self.touchStart);\n      }, self.attributes.touchContextMenuTimeMs);\n      self.calculatePPSTimer = setInterval(\n        self.calculatePPSTimed,\n        touchTimerMs,\n      );\n      if (\n        self.startingCell &&\n        (self.startingCell.isGrid ||\n          ['tree', 'inherit'].indexOf(self.startingCell.context) !== -1)\n      ) {\n        self.hasFocus = false;\n        return;\n      }\n      self.hasFocus = true;\n      if (self.startingCell.isHeader) {\n        if (self.startingCell.isRowHeader) {\n          self.selectArea({\n            top: self.startingCell.rowIndex,\n            bottom: self.startingCell.rowIndex,\n            left: 0,\n            right: self.getVisibleSchema().length - 1,\n          });\n          self.draw(true);\n        } else if (self.startingCell.isColumnHeader) {\n          if (self.attributes.columnHeaderClickBehavior === 'sort') {\n            if (self.orderBy === self.startingCell.header.name) {\n              self.orderDirection =\n                self.orderDirection === 'asc' ? 'desc' : 'asc';\n            } else {\n              self.orderDirection = 'asc';\n            }\n            self.order(self.startingCell.header.name, self.orderDirection);\n          }\n          if (self.attributes.columnHeaderClickBehavior === 'select') {\n            self.selectArea({\n              top: 0,\n              bottom: self.viewData.length - 1,\n              left: self.startingCell.columnIndex,\n              right: self.startingCell.columnIndex,\n            });\n            self.draw(true);\n          }\n        }\n        self.touchEndEvents(e);\n        return;\n      }\n    }\n    if (self.zoomAltered) {\n      return;\n    }\n    document.body.addEventListener('touchmove', self.touchmove, {\n      passive: false,\n    });\n    document.body.addEventListener('touchend', self.touchend, false);\n    document.body.addEventListener('touchcancel', self.touchcancel, false);\n    self.draw(true);\n  };\n  self.touchSelect = function (cell, handleType) {\n    if (cell.rowIndex === undefined || cell.columnIndex === undefined) {\n      return;\n    }\n    self.touchSelecting = true;\n    var bounds = self.getSelectionBounds();\n    if (\n      handleType === 'selection-handle-bl' &&\n      cell.rowIndex >= bounds.top &&\n      cell.columnIndex <= bounds.right\n    ) {\n      bounds.bottom = cell.rowIndex;\n      bounds.left = cell.columnIndex;\n    } else if (\n      handleType === 'selection-handle-tl' &&\n      cell.rowIndex <= bounds.bottom &&\n      cell.columnIndex <= bounds.right\n    ) {\n      bounds.top = cell.rowIndex;\n      bounds.left = cell.columnIndex;\n    } else if (\n      handleType === 'selection-handle-tr' &&\n      cell.rowIndex <= bounds.bottom &&\n      cell.columnIndex >= bounds.left\n    ) {\n      bounds.top = cell.rowIndex;\n      bounds.right = cell.columnIndex;\n    } else if (\n      handleType === 'selection-handle-br' &&\n      cell.rowIndex >= bounds.top &&\n      cell.columnIndex >= bounds.left\n    ) {\n      bounds.bottom = cell.rowIndex;\n      bounds.right = cell.columnIndex;\n    }\n    if (self.attributes.selectionMode === 'row' || cell.rowIndex === -1) {\n      bounds.left = 0;\n      bounds.right = self.getSchema().length - 1;\n    } else {\n      bounds.left = Math.max(0, bounds.left);\n    }\n    self.selectArea(bounds);\n    self.draw(true);\n  };\n  function touchMove(e) {\n    var ch, rw, rScrollZone, lScrollZone, bScrollZone, tScrollZone, sbw, t1, t2;\n    if (self.dispatchEvent('beforetouchmove', { NativeEvent: e })) {\n      return;\n    }\n    clearTimeout(touchScrollTimeout);\n    if (e.changedTouches[0]) {\n      self.touchPosition = self.getTouchPos(e);\n    }\n    if (e.changedTouches[1]) {\n      self.touchPosition1 = self.getTouchPos(e, 1);\n    }\n    if (\n      Math.abs(self.touchDelta.x) + Math.abs(self.touchDelta.y) >\n      self.attributes.touchDeadZone\n    ) {\n      clearTimeout(self.touchContextTimeout);\n    }\n    if (e.touches.length === 2 && self.touchPosition && self.touchPosition1) {\n      t1 = self.touchPosition.y;\n      t2 = self.touchPosition1.y;\n      if (!self.zoomDeltaStart) {\n        self.zoomDeltaStart = Math.abs(t1 - t2);\n        self.startScale = self.scale;\n      }\n      self.touchLength = 2;\n      self.scaleDelta = self.zoomDeltaStart - Math.abs(t1 - t2);\n      self.scale =\n        self.startScale -\n        self.scaleDelta * self.attributes.touchZoomSensitivity;\n      self.scale = Math.min(\n        Math.max(self.scale, self.attributes.touchZoomMin),\n        self.attributes.touchZoomMax,\n      );\n      self.zoomAltered = true;\n      self.resize(true);\n      self.resizeChildGrids();\n      return;\n    }\n    if (self.zoomAltered) {\n      return;\n    }\n    self.touchLength = 1;\n    self.touchPosition = self.touchPosition || self.touchPosition1;\n    ch = self.getColumnHeaderCellHeight();\n    rw = self.getRowHeaderCellWidth();\n    rScrollZone =\n      self.width - self.style.scrollBarWidth - self.touchPosition.x <\n      self.attributes.selectionScrollZone;\n    lScrollZone =\n      self.touchPosition.x - rw < self.attributes.selectionScrollZone;\n    bScrollZone =\n      self.height - self.style.scrollBarWidth - self.touchPosition.y <\n      self.attributes.selectionScrollZone;\n    tScrollZone =\n      self.touchPosition.y - ch < self.attributes.selectionScrollZone;\n    sbw = self.style.scrollBarWidth;\n    function touchScroll() {\n      var x = self.scrollBox.scrollLeft,\n        y = self.scrollBox.scrollTop;\n      x += rScrollZone ? self.attributes.selectionScrollIncrement : 0;\n      y += bScrollZone ? self.attributes.selectionScrollIncrement : 0;\n      y -= tScrollZone ? self.attributes.selectionScrollIncrement : 0;\n      x -= lScrollZone ? self.attributes.selectionScrollIncrement : 0;\n      self.scrollBox.scrollTo(x, y);\n      touchScrollTimeout = setTimeout(\n        touchScroll,\n        self.attributes.scrollRepeatRate,\n      );\n    }\n    e.stopPropagation();\n    self.touchDelta = {\n      x: self.touchPosition.x - self.touchStart.x,\n      y: self.touchPosition.y - self.touchStart.y,\n      scrollLeft: self.scrollBox.scrollLeft,\n      scrollTop: self.scrollBox.scrollTop,\n      t: performance.now(),\n    };\n    self.currentCell = self.getCellAt(\n      self.touchPosition.x,\n      self.touchPosition.y,\n    );\n    self.dispatchEvent('touchmove', { NativeEvent: e, cell: self.currentCell });\n    self.calculatePPS();\n    self.touchDuration = performance.now() - self.touchScrollStart.t;\n    self.stopAnimation = true;\n    self.animationFrames = 0;\n    if (\n      self.touchSelecting &&\n      (rScrollZone || lScrollZone || tScrollZone || bScrollZone)\n    ) {\n      touchScroll();\n    }\n    if (/vertical-scroll-/.test(self.startingCell.style)) {\n      self.scrollBox.scrollTop =\n        self.scrollBox.scrollHeight *\n        ((self.touchPosition.y - ch - sbw) /\n          (self.scrollBox.height - sbw - ch));\n      return;\n    }\n    if (/horizontal-scroll-/.test(self.startingCell.style)) {\n      self.scrollBox.scrollLeft =\n        self.scrollBox.scrollWidth *\n        ((self.touchPosition.x - rw - sbw) / (self.scrollBox.width - sbw - rw));\n      return;\n    }\n    if (/selection-handle-/.test(self.startingCell.style)) {\n      self.touchSelect(self.currentCell, self.startingCell.style);\n      return;\n    }\n    self.scrollBox.scrollTo(\n      self.touchScrollStart.x - self.touchDelta.x,\n      self.touchScrollStart.y - self.touchDelta.y,\n    );\n  }\n  self.touchmove = function (e) {\n    if (touchMoving) {\n      return;\n    }\n    requestAnimationFrame(function () {\n      touchMoving = true;\n      touchMove(e);\n      touchMoving = false;\n    });\n  };\n  self.touchEndEvents = function (e) {\n    self.zoomDeltaStart = undefined;\n    self.touchSelecting = false;\n    clearInterval(self.touchScrollTimeout);\n    clearInterval(self.touchContextTimeout);\n    clearInterval(self.calculatePPSTimer);\n    e.stopPropagation();\n    document.body.removeEventListener('touchmove', self.touchmove, {\n      passive: false,\n    });\n    document.body.removeEventListener('touchend', self.touchend, false);\n    document.body.removeEventListener('touchcancel', self.touchcancel, false);\n  };\n  self.touchend = function (e) {\n    if (\n      self.dispatchEvent('touchend', { NativeEvent: e, cell: self.currentCell })\n    ) {\n      return;\n    }\n    self.zoomDeltaStart = undefined;\n    if (e.changedTouches[0]) {\n      self.touchPosition = undefined;\n    }\n    if (e.changedTouches[1]) {\n      self.touchPosition1 = undefined;\n    }\n    if (self.zoomAltered) {\n      if (e.touches.length === 0) {\n        self.zoomAltered = false;\n      }\n      return;\n    }\n    var dz =\n      Math.abs(self.touchDelta.x) + Math.abs(self.touchDelta.y) <\n      self.attributes.touchDeadZone;\n    if (isNaN(self.xPPS)) {\n      self.xPPS = 0;\n    }\n    if (isNaN(self.yPPS)) {\n      self.yPPS = 0;\n    }\n    if (isNaN(self.xPPST)) {\n      self.xPPST = 0;\n    }\n    if (isNaN(self.yPPST)) {\n      self.yPPST = 0;\n    }\n    self.touchAnimateTo.x =\n      self.xPPS * self.attributes.touchReleaseAcceleration;\n    self.touchAnimateTo.y =\n      self.yPPS * self.attributes.touchReleaseAcceleration;\n    self.calculatePPSTimed();\n    if (dz && !self.contextMenu) {\n      self.touchCell(self.touchStartEvent)();\n    } else if (\n      self.animationFrames === 0 &&\n      (Math.abs(self.xPPST) > self.attributes.scrollAnimationPPSThreshold ||\n        Math.abs(self.yPPST) > self.attributes.scrollAnimationPPSThreshold) &&\n      !/-scroll-/.test(self.startingCell.style) &&\n      !dz\n    ) {\n      self.stopAnimation = false;\n      self.touchEndAnimation();\n    }\n    self.touchEndEvents(e);\n  };\n  self.touchcancel = function (e) {\n    if (\n      self.dispatchEvent('touchcancel', {\n        NativeEvent: e,\n        cell: self.currentCell,\n      })\n    ) {\n      return;\n    }\n    self.touchEndEvents(e);\n  };\n}\n","/*jslint browser: true, unparam: true, todo: true*/\n/*globals HTMLElement: false, Reflect: false, define: true, MutationObserver: false, requestAnimationFrame: false, performance: false, btoa: false*/\n'use strict';\n\nexport default function (self, ctor) {\n  self.scale = 1;\n  self.orders = {\n    rows: [],\n    columns: [],\n  };\n  self.appliedInlineStyles = {};\n  self.cellGridAttributes = {};\n  self.treeGridAttributes = {};\n  self.visibleRowHeights = [];\n  self.hasFocus = false;\n  self.activeCell = {\n    columnIndex: 0,\n    rowIndex: 0,\n  };\n  self.innerHTML = '';\n  self.storageName = 'canvasDataGrid';\n  self.invalidSearchExpClass = 'canvas-datagrid-invalid-search-regExp';\n  self.localStyleLibraryStorageKey = 'canvas-datagrid-user-style-library';\n  self.dataType = 'application/x-canvas-datagrid';\n  self.orderBy = null;\n  self.orderDirection = 'asc';\n  self.orderings = {\n    columns: [],\n    add: function (orderBy, orderDirection, sortFunction) {\n      self.orderings.columns = self.orderings.columns.filter(function (col) {\n        return col.orderBy !== orderBy;\n      });\n      self.orderings.columns.push({\n        orderBy: orderBy,\n        orderDirection: orderDirection,\n        sortFunction: sortFunction,\n      });\n    },\n    sort: function () {\n      console.warn(\n        'grid.orderings.sort has been deprecated. Please use grid.refresh().',\n      );\n\n      self.orderings.columns.forEach(function (col) {\n        self.viewData.sort(col.sortFunction(col.orderBy, col.orderDirection));\n      });\n    },\n  };\n  self.columnFilters = {};\n  self.filters = {};\n  self.frozenRow = 0;\n  self.frozenColumn = 0;\n  self.ellipsisCache = {};\n  self.scrollCache = { x: [], y: [] };\n  self.scrollBox = {};\n  self.visibleRows = [];\n  self.visibleCells = [];\n  self.sizes = {\n    rows: {},\n    columns: {},\n    trees: {},\n  };\n  self.currentFilter = function () {\n    return true;\n  };\n  self.selections = [];\n  self.hovers = {};\n  self.attributes = {};\n  self.style = {};\n  self.formatters = {};\n  self.sorters = {};\n  self.parsers = {};\n  self.schemaHashes = {};\n  self.events = {};\n  self.changes = [];\n  self.scrollIndexTop = 0;\n  self.scrollPixelTop = 0;\n  self.scrollIndexLeft = 0;\n  self.scrollPixelLeft = 0;\n  self.childGrids = {};\n  self.openChildren = {};\n  self.scrollModes = [\n    'vertical-scroll-box',\n    'vertical-scroll-top',\n    'vertical-scroll-bottom',\n    'horizontal-scroll-box',\n    'horizontal-scroll-right',\n    'horizontal-scroll-left',\n  ];\n  self.componentL1Events = {};\n  self.eventNames = [\n    'afterdraw',\n    'afterrendercell',\n    'attributechanged',\n    'beforebeginedit',\n    'beforecreatecellgrid',\n    'beforedraw',\n    'beforeendedit',\n    'beforerendercell',\n    'beforerendercellgrid',\n    'beginedit',\n    'cellmouseout',\n    'cellmouseover',\n    'click',\n    'collapsetree',\n    'contextmenu',\n    'copy',\n    'datachanged',\n    'dblclick',\n    'endedit',\n    'expandtree',\n    'formatcellvalue',\n    'keydown',\n    'keypress',\n    'keyup',\n    'mousedown',\n    'mousemove',\n    'mouseup',\n    'newrow',\n    'ordercolumn',\n    'rendercell',\n    'rendercellgrid',\n    'renderorderbyarrow',\n    'rendertext',\n    'rendertreearrow',\n    'reorder',\n    'reordering',\n    'resize',\n    'resizecolumn',\n    'resizerow',\n    'schemachanged',\n    'scroll',\n    'selectionchanged',\n    'stylechanged',\n    'touchcancel',\n    'touchend',\n    'touchmove',\n    'touchstart',\n    'wheel',\n  ];\n  self.mouse = { x: 0, y: 0 };\n  self.getSelectedData = function (expandToRow) {\n    const selectedData = [];\n    const schema = self.getSchema();\n    const viewDataLength = self.viewData.length;\n\n    if (viewDataLength === 0) {\n      return [];\n    }\n\n    // self.selections is a sparse array, so `viewRowIndex` here\n    // will equal the row index as where it's rendered,\n    // not as where it is in the original data array.\n    self.selections.forEach(function (row, viewRowIndex) {\n      if (!row) {\n        return;\n      }\n\n      if (viewRowIndex === viewDataLength) {\n        return;\n      }\n\n      if (row.length === 0) {\n        selectedData[viewRowIndex] = null;\n        return;\n      }\n\n      selectedData[viewRowIndex] = {};\n\n      row.forEach(function (col) {\n        if (col === -1 || !schema[col]) {\n          return;\n        }\n\n        const orderedIndex = self.orders.columns[col];\n\n        if (!expandToRow && schema[orderedIndex].hidden) {\n          return;\n        }\n\n        if (self.viewData[viewRowIndex]) {\n          selectedData[viewRowIndex][schema[orderedIndex].name] =\n            self.viewData[viewRowIndex][schema[orderedIndex].name];\n        }\n      });\n    });\n\n    return selectedData;\n  };\n  self.getBoundRowIndexFromViewRowIndex = function (viewRowIndex) {\n    if (self.boundRowIndexMap && self.boundRowIndexMap.has(viewRowIndex)) {\n      return self.boundRowIndexMap.get(viewRowIndex);\n    }\n\n    return undefined;\n  };\n  self.getColumnHeaderCellHeight = function () {\n    if (!self.attributes.showColumnHeaders) {\n      return 0;\n    }\n    return (\n      (self.sizes.rows[-1] || self.style.columnHeaderCellHeight) * self.scale\n    );\n  };\n  self.getRowHeaderCellWidth = function () {\n    if (!self.attributes.showRowHeaders) {\n      return 0;\n    }\n    return (\n      (self.sizes.columns[-1] || self.style.rowHeaderCellWidth) * self.scale\n    );\n  };\n  self.setStorageData = function () {\n    if (!self.attributes.saveAppearance || !self.attributes.name) {\n      return;\n    }\n    var visibility = {};\n    self.getSchema().forEach(function (column) {\n      visibility[column.name] = !column.hidden;\n    });\n    localStorage.setItem(\n      self.storageName + '-' + self.attributes.name,\n      JSON.stringify({\n        sizes: {\n          rows: self.sizes.rows,\n          columns: self.sizes.columns,\n        },\n        orders: {\n          rows: self.orders.rows,\n          columns: self.orders.columns,\n        },\n        orderBy: self.orderBy,\n        orderDirection: self.orderDirection,\n        visibility: visibility,\n      }),\n    );\n  };\n  self.getSchema = function () {\n    return self.schema || self.tempSchema || [];\n  };\n  function fillArray(low, high) {\n    var i = [],\n      x;\n    for (x = low; x <= high; x += 1) {\n      i[x] = x;\n    }\n    return i;\n  }\n  self.createColumnOrders = function () {\n    var s = self.getSchema();\n    self.orders.columns = fillArray(0, s.length - 1);\n  };\n  self.createRowOrders = function () {\n    self.orders.rows = fillArray(0, self.originalData.length - 1);\n  };\n  self.getVisibleSchema = function () {\n    return self.getSchema().filter(function (col) {\n      return !col.hidden;\n    });\n  };\n  self.applyDefaultValue = function (row, header) {\n    var d = header.defaultValue || '';\n    if (typeof d === 'function') {\n      d = d.apply(self.intf, [header]);\n    }\n    row[header.name] = d;\n  };\n  self.createNewRowData = function () {\n    self.newRow = {};\n    self.getSchema().forEach(function forEachHeader(header) {\n      self.applyDefaultValue(self.newRow, header);\n    });\n  };\n  self.getSchemaNameHash = function (key) {\n    var n = 0;\n    while (self.schemaHashes[key]) {\n      n += 1;\n      key = key + n;\n    }\n    return key;\n  };\n  self.filter = function (type) {\n    var f = self.filters[type];\n    if (!f && type !== undefined) {\n      console.warn(\n        'Cannot find filter for type %s, falling back to substring match.',\n        type,\n      );\n      f = self.filters.string;\n    }\n    return f;\n  };\n  self.hasActiveFilters = function () {\n    return self.columnFilters && Object.keys(self.columnFilters).length > 0;\n  };\n  self.getFilteredAndSortedViewData = function (originalData) {\n    // We make a copy of originalData here in order be able to\n    // filter and sort rows without modifying the original array.\n    // Each row is turned into a (row, rowIndex) tuple\n    // so that when we apply filters, we can refer back to the\n    // row's original row number in originalData. This becomes\n    // useful when emitting cell events.\n    let newViewData = originalData.map((row, originalRowIndex) => [\n      row,\n      originalRowIndex,\n    ]);\n\n    // Apply filtering\n    for (const [headerName, filterText] of Object.entries(self.columnFilters)) {\n      const header = self.getHeaderByName(headerName);\n\n      if (!header) {\n        continue;\n      }\n\n      const currentFilterFunction =\n        header.filter || self.filter(header.type || 'string');\n\n      newViewData = newViewData.filter(function ([row]) {\n        const cellValue = row[headerName];\n        const shouldIncludeRow = currentFilterFunction(cellValue, filterText);\n\n        return shouldIncludeRow;\n      });\n    }\n\n    // Apply sorting\n    for (const column of self.orderings.columns) {\n      const sortFn = column.sortFunction(column.orderBy, column.orderDirection);\n\n      newViewData.sort(([rowA], [rowB]) => sortFn(rowA, rowB));\n    }\n\n    return {\n      viewData: newViewData.map(([row]) => row),\n      boundRowIndexMap: new Map(\n        newViewData.map(([_row, originalRowIndex], viewRowIndex) => [\n          viewRowIndex,\n          originalRowIndex,\n        ]),\n      ),\n    };\n  };\n  self.refresh = function () {\n    const { viewData, boundRowIndexMap } = self.getFilteredAndSortedViewData(\n      self.originalData,\n    );\n\n    self.viewData = viewData;\n    self.boundRowIndexMap = boundRowIndexMap;\n\n    self.resize();\n    self.draw(true);\n  };\n  self.getBestGuessDataType = function (columnName, data) {\n    var t,\n      x,\n      l = data.length;\n    for (x = 0; x < l; x += 1) {\n      if (\n        data[x] !== undefined &&\n        data[x] !== null &&\n        [null, undefined].indexOf(data[x][columnName]) !== -1\n      ) {\n        t = typeof data[x];\n        return t === 'object' ? 'string' : t;\n      }\n    }\n    return 'string';\n  };\n  self.drawChildGrids = function () {\n    Object.keys(self.childGrids).forEach(function (gridKey) {\n      self.childGrids[gridKey].draw();\n    });\n  };\n  self.resizeChildGrids = function () {\n    Object.keys(self.childGrids).forEach(function (gridKey) {\n      self.childGrids[gridKey].resize();\n    });\n  };\n  self.autoScrollZone = function (e, x, y, ctrl) {\n    var setTimer,\n      rowHeaderCellWidth = self.getRowHeaderCellWidth(),\n      columnHeaderCellHeight = self.getColumnHeaderCellHeight();\n    if (y !== -1) {\n      if (\n        x > self.width - self.attributes.selectionScrollZone &&\n        x < self.width\n      ) {\n        self.scrollBox.scrollLeft += self.attributes.selectionScrollIncrement;\n        setTimer = true;\n      }\n      if (x - self.attributes.selectionScrollZone - rowHeaderCellWidth < 0) {\n        self.scrollBox.scrollLeft -= self.attributes.selectionScrollIncrement;\n        setTimer = true;\n      }\n    }\n    if (y !== -1) {\n      if (\n        y > self.height - self.attributes.selectionScrollZone &&\n        y < self.height\n      ) {\n        self.scrollBox.scrollTop += self.attributes.selectionScrollIncrement;\n        setTimer = true;\n      }\n      if (\n        y - self.attributes.selectionScrollZone - columnHeaderCellHeight <\n        0\n      ) {\n        self.scrollBox.scrollTop -= self.attributes.selectionScrollIncrement;\n        setTimer = true;\n      }\n    }\n    if (\n      setTimer &&\n      !ctrl &&\n      self.currentCell &&\n      self.currentCell.columnIndex !== -1\n    ) {\n      self.scrollTimer = setTimeout(\n        self.mousemove,\n        self.attributes.scrollRepeatRate,\n        e,\n      );\n    }\n  };\n  self.validateColumn = function (c, s) {\n    if (!c.name) {\n      throw new Error('A column must contain at least a name.');\n    }\n    if (\n      s.filter(function (i) {\n        return i.name === c.name;\n      }).length > 0\n    ) {\n      throw new Error(\n        'A column with the name ' +\n          c.name +\n          ' already exists and cannot be added again.',\n      );\n    }\n    return true;\n  };\n  self.setDefaults = function (obj1, obj2, key, def) {\n    obj1[key] = obj2[key] === undefined ? def : obj2[key];\n  };\n  self.setAttributes = function () {\n    self.defaults.attributes.forEach(function eachAttribute(i) {\n      self.setDefaults(self.attributes, self.args, i[0], i[1]);\n    });\n  };\n  self.setStyle = function () {\n    self.defaults.styles.forEach(function eachStyle(i) {\n      self.setDefaults(self.style, self.args.style || {}, i[0], i[1]);\n    });\n  };\n  self.autosize = function (colName) {\n    self.getVisibleSchema().forEach(function (col, colIndex) {\n      if (col.name === colName || colName === undefined) {\n        self.sizes.columns[colIndex] = Math.max(\n          self.findColumnMaxTextLength(col.name),\n          self.style.minColumnWidth,\n        );\n      }\n    });\n    self.sizes.columns[-1] = self.findColumnMaxTextLength('cornerCell');\n  };\n  self.dispose = function () {\n    if (!self.isChildGrid && self.canvas && self.canvas.parentNode) {\n      self.canvas.parentNode.removeChild(self.canvas);\n    }\n    if (!self.isChildGrid) {\n      document.body.removeChild(self.controlInput);\n    }\n    self.eventParent.removeEventListener('mouseup', self.mouseup, false);\n    self.eventParent.removeEventListener('mousedown', self.mousedown, false);\n    self.eventParent.removeEventListener('dblclick', self.dblclick, false);\n    self.eventParent.removeEventListener('click', self.click, false);\n    self.eventParent.removeEventListener('mousemove', self.mousemove);\n    self.eventParent.removeEventListener('wheel', self.scrollWheel, false);\n    self.canvas.removeEventListener('contextmenu', self.contextmenu, false);\n    self.canvas.removeEventListener('copy', self.copy);\n    self.controlInput.removeEventListener('copy', self.copy);\n    self.controlInput.removeEventListener('cut', self.cut);\n    self.controlInput.removeEventListener('paste', self.paste);\n    self.controlInput.removeEventListener('keypress', self.keypress, false);\n    self.controlInput.removeEventListener('keyup', self.keyup, false);\n    self.controlInput.removeEventListener('keydown', self.keydown, false);\n    window.removeEventListener('resize', self.resize);\n    if (self.observer && self.observer.disconnect) {\n      self.observer.disconnect();\n    }\n  };\n  self.tryLoadStoredSettings = function () {\n    var s;\n    self.reloadStoredValues();\n    if (\n      self.storedSettings &&\n      typeof self.storedSettings.orders === 'object' &&\n      self.storedSettings.orders !== null\n    ) {\n      if (\n        self.storedSettings.orders.rows.length >= (self.viewData || []).length\n      ) {\n        self.orders.rows = self.storedSettings.orders.rows;\n      }\n      s = self.getSchema();\n      if (self.storedSettings.orders.columns.length === s.length) {\n        self.orders.columns = self.storedSettings.orders.columns;\n      }\n      self.orderBy =\n        self.storedSettings.orderBy === undefined\n          ? s[0].name\n          : self.storedSettings.orderBy;\n      self.orderDirection =\n        self.storedSettings.orderDirection === undefined\n          ? 'asc'\n          : self.storedSettings.orderDirection;\n      if (\n        self.storedSettings.orderBy !== undefined &&\n        self.getHeaderByName(self.orderBy) &&\n        self.orderDirection\n      ) {\n        self.order(self.orderBy, self.orderDirection);\n      }\n    }\n  };\n  self.getDomRoot = function () {\n    return self.shadowRoot ? self.shadowRoot.host : self.parentNode;\n  };\n  self.getFontName = function (fontStyle) {\n    return fontStyle.replace(/\\d+\\.?\\d*px/, '');\n  };\n  self.getFontHeight = function (fontStyle) {\n    return parseFloat(fontStyle, 10);\n  };\n  self.parseStyleValue = function (key) {\n    if (/Font/.test(key)) {\n      self.style[key + 'Height'] = self.getFontHeight(self.style[key]);\n      self.style[key + 'Name'] = self.getFontName(self.style[key]);\n      return;\n    }\n    // when inheriting styles from already instantiated grids, don't parse already parsed values.\n    if (\n      key === 'moveOverlayBorderSegments' &&\n      typeof self.style[key] === 'string'\n    ) {\n      self.style[key] = self.style[key].split(',').map(function (i) {\n        return parseInt(i, 10);\n      });\n    }\n  };\n  self.initProp = function (propName) {\n    if (!self.args[propName]) {\n      return;\n    }\n    Object.keys(self.args[propName]).forEach(function (key) {\n      self[propName][key] = self.args[propName][key];\n    });\n  };\n  self.getStyleProperty = function (key) {\n    if (self.styleKeys.indexOf(key) === -1) {\n      return self.parentNodeStyle[key];\n    }\n    return self.style[key];\n  };\n  self.setStyleProperty = function (key, value, supressDrawAndEvent) {\n    var isDim =\n      [\n        'height',\n        'width',\n        'minHeight',\n        'minWidth',\n        'maxHeight',\n        'maxWidth',\n      ].indexOf(key) !== -1;\n    if (self.styleKeys.indexOf(key) === -1) {\n      self.parentNodeStyle[key] = value;\n    } else {\n      if (/-/.test(key)) {\n        key = self.dehyphenateProperty(key);\n      }\n      self.style[key] = value;\n      self.parseStyleValue(key);\n    }\n    if (isDim) {\n      self.resize();\n    }\n    if (!supressDrawAndEvent) {\n      self.draw(true);\n      self.dispatchEvent('stylechanged', { name: 'style', value: value });\n    }\n  };\n  self.reloadStoredValues = function () {\n    if (self.attributes.name && self.attributes.saveAppearance) {\n      try {\n        self.storedSettings = localStorage.getItem(\n          self.storageName + '-' + self.attributes.name,\n        );\n      } catch (e) {\n        console.warn('Error loading stored values. ' + e.message);\n        self.storedSettings = undefined;\n      }\n      if (self.storedSettings) {\n        try {\n          self.storedSettings = JSON.parse(self.storedSettings);\n        } catch (e) {\n          console.warn('could not read settings from localStore', e);\n          self.storedSettings = undefined;\n        }\n      }\n      if (self.storedSettings) {\n        if (\n          typeof self.storedSettings.sizes === 'object' &&\n          self.storedSettings.sizes !== null\n        ) {\n          self.sizes.rows = self.storedSettings.sizes.rows;\n          self.sizes.columns = self.storedSettings.sizes.columns;\n          ['trees', 'columns', 'rows'].forEach(function (i) {\n            if (!self.sizes[i]) {\n              self.sizes[i] = {};\n            }\n          });\n        }\n        if (typeof self.storedSettings.visibility === 'object') {\n          self.getSchema().forEach(function (column) {\n            if (\n              self.storedSettings.visibility &&\n              self.storedSettings.visibility[column.name] !== undefined\n            ) {\n              column.hidden = !self.storedSettings.visibility[column.name];\n            }\n          });\n        }\n      }\n    }\n  };\n  self.init = function () {\n    if (self.initialized) {\n      return;\n    }\n    function addStyleKeyIfNoneExists(key) {\n      if (self.styleKeys.indexOf(key) === -1) {\n        self.styleKeys.push(key);\n      }\n    }\n    var publicStyleKeyIntf = {};\n    self.setAttributes();\n    self.setStyle();\n    self.initScrollBox();\n    self.setDom();\n    self.nodeType = 'canvas-datagrid';\n    self.ie = /Trident/.test(window.navigator.userAgent);\n    self.edge = /Edge/.test(window.navigator.userAgent);\n    self.webKit = /WebKit/.test(window.navigator.userAgent);\n    self.moz = /Gecko/.test(window.navigator.userAgent);\n    self.mobile = /Mobile/i.test(window.navigator.userAgent);\n    self.blankValues = [undefined, null, ''];\n    self.cursorGrab = 'grab';\n    self.cursorGrabing = 'grabbing';\n    self.cursorGrab = self.webKit ? '-webkit-grab' : self.cursorGrab;\n    self.cursorGrabing = self.moz ? '-webkit-grabbing' : self.cursorGrabbing;\n    self.pointerLockPosition = { x: 0, y: 0 };\n    Object.keys(self.style).forEach(self.parseStyleValue);\n    self.intf.moveSelection = self.moveSelection;\n    self.intf.moveTo = self.moveTo;\n    self.intf.addEventListener = self.addEventListener;\n    self.intf.removeEventListener = self.removeEventListener;\n    self.intf.dispatchEvent = self.dispatchEvent;\n    /**\n     * Releases grid resources and removes grid elements.\n     * @memberof canvasDatagrid\n     * @name dispose\n     * @method\n     */\n    self.intf.dispose = self.dispose;\n    /**\n     * Appends the grid to another element later.  Not implemented.\n     * @memberof canvasDatagrid\n     * @name appendTo\n     * @method\n     * @param {number} el The element to append the grid to.\n     */\n    self.intf.appendTo = self.appendTo;\n    self.intf.getVisibleCellByIndex = self.getVisibleCellByIndex;\n    self.intf.filters = self.filters;\n    self.intf.sorters = self.sorters;\n    self.intf.autosize = self.autosize;\n    self.intf.beginEditAt = self.beginEditAt;\n    self.intf.endEdit = self.endEdit;\n    self.intf.setActiveCell = self.setActiveCell;\n    self.intf.forEachSelectedCell = self.forEachSelectedCell;\n    self.intf.scrollIntoView = self.scrollIntoView;\n    self.intf.clearChangeLog = self.clearChangeLog;\n    self.intf.gotoCell = self.gotoCell;\n    self.intf.gotoRow = self.gotoRow;\n    self.intf.getHeaderByName = self.getHeaderByName;\n    self.intf.findColumnScrollLeft = self.findColumnScrollLeft;\n    self.intf.findRowScrollTop = self.findRowScrollTop;\n    self.intf.fitColumnToValues = self.fitColumnToValues;\n    self.intf.findColumnMaxTextLength = self.findColumnMaxTextLength;\n    self.intf.disposeContextMenu = self.disposeContextMenu;\n    self.intf.getCellAt = self.getCellAt;\n    self.intf.isCellVisible = self.isCellVisible;\n    self.intf.isRowVisible = self.isRowVisible;\n    self.intf.isColumnVisible = self.isColumnVisible;\n    self.intf.order = self.order;\n    self.intf.draw = self.draw;\n    self.intf.refresh = self.refresh;\n    self.intf.isComponent = self.isComponent;\n    self.intf.selectArea = self.selectArea;\n    self.intf.clipElement = self.clipElement;\n    self.intf.getSchemaFromData = self.getSchemaFromData;\n    self.intf.setFilter = self.setFilter;\n    self.intf.selectRow = self.selectRow;\n    self.intf.parentGrid = self.parentGrid;\n    self.intf.toggleTree = self.toggleTree;\n    self.intf.expandTree = self.expandTree;\n    self.intf.collapseTree = self.collapseTree;\n    self.intf.canvas = self.canvas;\n    self.intf.context = self.ctx;\n    self.intf.insertRow = self.insertRow;\n    self.intf.deleteRow = self.deleteRow;\n    self.intf.addRow = self.addRow;\n    self.intf.insertColumn = self.insertColumn;\n    self.intf.deleteColumn = self.deleteColumn;\n    self.intf.addColumn = self.addColumn;\n    self.intf.getClippingRect = self.getClippingRect;\n    self.intf.setRowHeight = self.setRowHeight;\n    self.intf.setColumnWidth = self.setColumnWidth;\n    self.intf.resetColumnWidths = self.resetColumnWidths;\n    self.intf.resetRowHeights = self.resetRowHeights;\n    self.intf.resize = self.resize;\n    self.intf.selectColumn = self.selectColumn;\n    self.intf.selectRow = self.selectRow;\n    self.intf.selectAll = self.selectAll;\n    self.intf.selectNone = self.selectNone;\n    self.intf.drawChildGrids = self.drawChildGrids;\n    self.intf.assertPxColor = self.assertPxColor;\n    self.intf.clearPxColorAssertions = self.clearPxColorAssertions;\n    self.intf.integerToAlpha = self.integerToAlpha;\n    self.intf.copy = self.copy;\n    self.intf.paste = self.paste;\n    self.intf.setStyleProperty = self.setStyleProperty;\n    Object.defineProperty(self.intf, 'defaults', {\n      get: function () {\n        return {\n          styles: self.defaults.styles.reduce(function (a, i) {\n            a[i[0]] = i[1];\n            return a;\n          }, {}),\n          attributes: self.defaults.attributes.reduce(function (a, i) {\n            a[i[0]] = i[1];\n            return a;\n          }, {}),\n        };\n      },\n    });\n    self.styleKeys = Object.keys(self.intf.defaults.styles);\n    self.styleKeys\n      .map(function (i) {\n        return self.hyphenateProperty(i, false);\n      })\n      .forEach(addStyleKeyIfNoneExists);\n    self.styleKeys\n      .map(function (i) {\n        return self.hyphenateProperty(i, true);\n      })\n      .forEach(addStyleKeyIfNoneExists);\n    self.DOMStyles = window.getComputedStyle(document.body, null);\n    self.styleKeys.concat(Object.keys(self.DOMStyles)).forEach(function (key) {\n      // unless this line is here, Object.keys() will not work on <instance>.style\n      publicStyleKeyIntf[key] = undefined;\n      Object.defineProperty(publicStyleKeyIntf, key, {\n        get: function () {\n          return self.getStyleProperty(key);\n        },\n        set: function (value) {\n          if (self.initialized) {\n            self.appliedInlineStyles[key] = value;\n          }\n          self.setStyleProperty(key, value);\n        },\n      });\n    });\n    Object.defineProperty(self.intf, 'shadowRoot', {\n      get: function () {\n        return self.shadowRoot;\n      },\n    });\n    Object.defineProperty(self.intf, 'activeCell', {\n      get: function () {\n        return self.activeCell;\n      },\n    });\n    Object.defineProperty(self.intf, 'hasFocus', {\n      get: function () {\n        return self.hasFocus;\n      },\n    });\n    /**\n     * Indicates whether grid has filters active\n     * @memberof canvasDatagrid\n     * @name hasActiveFilters\n     * @returns {boolean} When true, grid data is being filtered\n     */\n    Object.defineProperty(self.intf, 'hasActiveFilters', {\n      get: function () {\n        return self.hasActiveFilters();\n      },\n    });\n    Object.defineProperty(self.intf, 'style', {\n      get: function () {\n        return publicStyleKeyIntf;\n      },\n      set: function (valueObject) {\n        Object.keys(valueObject).forEach(function (key) {\n          self.setStyleProperty(key, valueObject[key], true);\n        });\n        self.draw(true);\n        self.dispatchEvent('stylechanged', {\n          name: 'style',\n          value: valueObject,\n        });\n      },\n    });\n    Object.defineProperty(self.intf, 'attributes', { value: {} });\n    Object.keys(self.attributes).forEach(function (key) {\n      Object.defineProperty(self.intf.attributes, key, {\n        get: function () {\n          return self.attributes[key];\n        },\n        set: function (value) {\n          self.attributes[key] = value;\n          if (key === 'name') {\n            self.tryLoadStoredSettings();\n          }\n          self.draw(true);\n          self.dispatchEvent('attributechanged', {\n            name: key,\n            value: value[key],\n          });\n        },\n      });\n    });\n    self.filters.string = function (value, filterFor) {\n      if (filterFor === self.attributes.blanksText) {\n        return self.blankValues.includes(\n          value == null ? value : String(value).trim(),\n        );\n      }\n\n      value = String(value);\n      var filterRegExp,\n        regEnd = /\\/(i|g|m)*$/,\n        pattern = regEnd.exec(filterFor),\n        flags = pattern ? pattern[0].substring(1) : '',\n        flagLength = flags.length;\n      self.invalidFilterRegEx = undefined;\n      if (filterFor.substring(0, 1) === '/' && pattern) {\n        try {\n          filterRegExp = new RegExp(\n            filterFor.substring(1, filterFor.length - (flagLength + 1)),\n            flags,\n          );\n        } catch (e) {\n          self.invalidFilterRegEx = e;\n          return;\n        }\n        return filterRegExp.test(value);\n      }\n      return value.toString\n        ? value\n            .toString()\n            .toLocaleUpperCase()\n            .indexOf(filterFor.toLocaleUpperCase()) !== -1\n        : false;\n    };\n    self.filters.number = function (value, filterFor) {\n      if (filterFor === self.attributes.blanksText) {\n        return self.blankValues.includes(\n          value == null ? value : String(value).trim(),\n        );\n      }\n\n      if (!filterFor) {\n        return true;\n      }\n      return value === filterFor;\n    };\n    ['formatters', 'filters', 'sorters'].forEach(self.initProp);\n    self.applyComponentStyle(false, self.intf);\n    self.reloadStoredValues();\n    if (self.args.data) {\n      self.intf.data = self.args.data;\n    }\n    if (self.intf.innerText || self.intf.textContent) {\n      if (self.intf.dataType === 'application/x-canvas-datagrid') {\n        self.intf.dataType = 'application/json+x-canvas-datagrid';\n      }\n      self.intf.data = self.intf.innerText || self.intf.textContent;\n    }\n    if (self.args.schema) {\n      self.intf.schema = self.args.schema;\n    }\n    if (self.isChildGrid || !self.isComponent) {\n      requestAnimationFrame(function () {\n        self.resize(true);\n      });\n    } else {\n      self.resize(true);\n    }\n    self.initialized = true;\n    return self;\n  };\n  /**\n   * Removes focus from the grid.\n   * @memberof canvasDatagrid\n   * @name blur\n   * @method\n   */\n  self.intf.blur = function (e) {\n    self.hasFocus = false;\n  };\n  /**\n   * Focuses on the grid.\n   * @memberof canvasDatagrid\n   * @name focus\n   * @method\n   */\n  self.intf.focus = function () {\n    self.hasFocus = true;\n    self.controlInput.focus();\n  };\n  if (self.shadowRoot || self.isChildGrid) {\n    Object.defineProperty(self.intf, 'height', {\n      get: function () {\n        if (self.shadowRoot) {\n          return self.shadowRoot.height;\n        }\n        return self.parentNode.height;\n      },\n      set: function (value) {\n        if (self.shadowRoot) {\n          self.shadowRoot.height = value;\n        } else {\n          self.parentNode.height = value;\n        }\n        self.resize(true);\n      },\n    });\n    Object.defineProperty(self.intf, 'width', {\n      get: function () {\n        if (self.shadowRoot) {\n          return self.shadowRoot.width;\n        }\n        return self.parentNode.width;\n      },\n      set: function (value) {\n        if (self.shadowRoot) {\n          self.shadowRoot.width = value;\n        } else {\n          self.parentNode.width = value;\n        }\n        self.resize(true);\n      },\n    });\n    Object.defineProperty(self.intf, 'parentNode', {\n      get: function () {\n        return self.parentNode;\n      },\n      set: function (value) {\n        if (!self.isChildGrid) {\n          throw new TypeError(\n            'Cannot set property parentNode which has only a getter',\n          );\n        }\n        self.parentNode = value;\n      },\n    });\n  }\n  Object.defineProperty(self.intf, 'visibleRowHeights', {\n    get: function () {\n      return self.visibleRowHeights;\n    },\n  });\n  Object.defineProperty(self.intf, 'openChildren', {\n    get: function () {\n      return self.openChildren;\n    },\n  });\n  Object.defineProperty(self.intf, 'childGrids', {\n    get: function () {\n      return Object.keys(self.childGrids).map(function (gridId) {\n        return self.childGrids[gridId];\n      });\n    },\n  });\n  Object.defineProperty(self.intf, 'isChildGrid', {\n    get: function () {\n      return self.isChildGrid;\n    },\n  });\n  Object.defineProperty(self, 'cursor', {\n    get: function () {\n      return self.parentNodeStyle.cursor;\n    },\n    set: function (value) {\n      if (value === 'cell') {\n        value = 'default';\n      }\n      if (self.currentCursor !== value) {\n        self.parentNodeStyle.cursor = value;\n        self.currentCursor = value;\n      }\n    },\n  });\n  Object.defineProperty(self.intf, 'orderDirection', {\n    get: function () {\n      return self.orderDirection;\n    },\n    set: function (value) {\n      if (value !== 'desc') {\n        value = 'asc';\n      }\n      self.orderDirection = value;\n      self.order(self.orderBy, self.orderDirection);\n    },\n  });\n  Object.defineProperty(self.intf, 'orderBy', {\n    get: function () {\n      return self.orderBy;\n    },\n    set: function (value) {\n      if (\n        self.getSchema().find(function (col) {\n          return col.name === value;\n        }) === undefined\n      ) {\n        throw new Error('Cannot sort by unknown column name.');\n      }\n      self.orderBy = value;\n      self.order(self.orderBy, self.orderDirection);\n    },\n  });\n  if (self.isComponent) {\n    Object.defineProperty(self.intf, 'offsetHeight', {\n      get: function () {\n        return self.canvas.offsetHeight;\n      },\n    });\n    Object.defineProperty(self.intf, 'offsetWidth', {\n      get: function () {\n        return self.canvas.offsetWidth;\n      },\n    });\n  }\n  Object.defineProperty(self.intf, 'scrollHeight', {\n    get: function () {\n      return self.scrollBox.scrollHeight;\n    },\n  });\n  Object.defineProperty(self.intf, 'scrollWidth', {\n    get: function () {\n      return self.scrollBox.scrollWidth;\n    },\n  });\n  Object.defineProperty(self.intf, 'scrollTop', {\n    get: function () {\n      return self.scrollBox.scrollTop;\n    },\n    set: function (value) {\n      self.scrollBox.scrollTop = value;\n    },\n  });\n  Object.defineProperty(self.intf, 'scrollLeft', {\n    get: function () {\n      return self.scrollBox.scrollLeft;\n    },\n    set: function (value) {\n      self.scrollBox.scrollLeft = value;\n    },\n  });\n  Object.defineProperty(self.intf, 'sizes', {\n    get: function () {\n      return self.sizes;\n    },\n  });\n  Object.defineProperty(self.intf, 'parentDOMNode', {\n    get: function () {\n      return self.parentDOMNode;\n    },\n  });\n  Object.defineProperty(self.intf, 'input', {\n    get: function () {\n      return self.input;\n    },\n  });\n  Object.defineProperty(self.intf, 'controlInput', {\n    get: function () {\n      return self.controlInput;\n    },\n  });\n  Object.defineProperty(self.intf, 'currentCell', {\n    get: function () {\n      return self.currentCell;\n    },\n  });\n  Object.defineProperty(self.intf, 'visibleCells', {\n    get: function () {\n      return self.visibleCells;\n    },\n  });\n  Object.defineProperty(self.intf, 'visibleRows', {\n    get: function () {\n      return self.visibleRows;\n    },\n  });\n  Object.defineProperty(self.intf, 'selections', {\n    get: function () {\n      return self.selections;\n    },\n  });\n  Object.defineProperty(self.intf, 'dragMode', {\n    get: function () {\n      return self.dragMode;\n    },\n  });\n  Object.defineProperty(self.intf, 'changes', {\n    get: function () {\n      return self.changes;\n    },\n  });\n  self.intf.formatters = self.formatters;\n  Object.defineProperty(self.intf, 'dataType', {\n    get: function () {\n      return self.dataType;\n    },\n    set: function (value) {\n      if (!self.parsers[value]) {\n        throw new Error('No parser for MIME type ' + value);\n      }\n      self.dataType = value;\n    },\n  });\n  self.eventNames.forEach(function (eventName) {\n    Object.defineProperty(self.intf, 'on' + eventName, {\n      get: function () {\n        return self.componentL1Events[eventName];\n      },\n      set: function (value) {\n        self.events[eventName] = [];\n        self.componentL1Events[eventName] = value;\n        if (!value) {\n          return;\n        }\n        self.addEventListener(eventName, value);\n      },\n    });\n  });\n  Object.defineProperty(self.intf, 'frozenRow', {\n    get: function () {\n      return self.frozenRow;\n    },\n    set: function (val) {\n      if (isNaN(val)) {\n        throw new TypeError('Expected value for frozenRow to be a number.');\n      }\n      if (self.visibleRows.length < val) {\n        throw new RangeError(\n          'Cannot set a value larger than the number of visible rows.',\n        );\n      }\n      self.frozenRow = val;\n    },\n  });\n  Object.defineProperty(self.intf, 'frozenColumn', {\n    get: function () {\n      return self.frozenColumn;\n    },\n    set: function (val) {\n      if (isNaN(val)) {\n        throw new TypeError('Expected value for frozenRow to be a number.');\n      }\n      if (self.getVisibleSchema().length < val) {\n        throw new RangeError(\n          'Cannot set a value larger than the number of visible columns.',\n        );\n      }\n      self.frozenColumn = val;\n    },\n  });\n  Object.defineProperty(self.intf, 'scrollIndexRect', {\n    get: function () {\n      return {\n        top: self.scrollIndexTop,\n        right: self.scrollIndexRight,\n        bottom: self.scrollIndexBottom,\n        left: self.scrollIndexLeft,\n      };\n    },\n  });\n  Object.defineProperty(self.intf, 'scrollPixelRect', {\n    get: function () {\n      return {\n        top: self.scrollPixelTop,\n        right: self.scrollPixelRight,\n        bottom: self.scrollPixelBottom,\n        left: self.scrollPixelLeft,\n      };\n    },\n  });\n  Object.defineProperty(self.intf, 'rowOrder', {\n    get: function () {\n      return self.orders.rows;\n    },\n    set: function (val) {\n      if (!Array.isArray(val)) {\n        throw new TypeError('Value must be an array.');\n      }\n      if (!self.originalData || val.length < self.originalData.length) {\n        throw new RangeError(\n          'Array length must be equal to or greater than number of rows.',\n        );\n      }\n      self.orders.rows = val;\n    },\n  });\n  Object.defineProperty(self.intf, 'columnOrder', {\n    get: function () {\n      return self.orders.columns;\n    },\n    set: function (val) {\n      if (!Array.isArray(val)) {\n        throw new TypeError('Value must be an array.');\n      }\n      if (val.length < self.getSchema().length) {\n        throw new RangeError(\n          'Array length must be equal to or greater than number of columns.',\n        );\n      }\n      self.orders.columns = val;\n    },\n  });\n  Object.defineProperty(self.intf, 'selectionBounds', {\n    get: function () {\n      return self.getSelectionBounds();\n    },\n  });\n  Object.defineProperty(self.intf, 'selectedRows', {\n    get: function () {\n      return self.getSelectedData(true);\n    },\n  });\n  Object.defineProperty(self.intf, 'selectedCells', {\n    get: function () {\n      return self.getSelectedData();\n    },\n  });\n  Object.defineProperty(self.intf, 'visibleSchema', {\n    get: function () {\n      return self.getVisibleSchema().map(function eachDataRow(col) {\n        return col;\n      });\n    },\n  });\n  Object.defineProperty(self.intf, 'treeGridAttributes', {\n    get: function () {\n      return self.treeGridAttributes;\n    },\n    set: function setTreeGridAttributes(value) {\n      self.treeGridAttributes = value;\n    },\n  });\n  Object.defineProperty(self.intf, 'cellGridAttributes', {\n    get: function () {\n      return self.cellGridAttributes;\n    },\n    set: function setCellGridAttributes(value) {\n      self.cellGridAttributes = value;\n    },\n  });\n  Object.defineProperty(self.intf, 'ctx', {\n    get: function () {\n      return self.ctx;\n    },\n  });\n  Object.defineProperty(self.intf, 'schema', {\n    get: function schemaGetter() {\n      return self.getSchema();\n    },\n    set: function schemaSetter(value) {\n      if (value === undefined) {\n        // Issue #89 - allow schema to be set to initialized state\n        self.schema = undefined;\n        self.tempSchema = undefined;\n        self.dispatchEvent('schemachanged', { schema: undefined });\n        return;\n      }\n      if (!Array.isArray(value) || typeof value[0] !== 'object') {\n        throw new Error('Schema must be an array of objects.');\n      }\n      if (value[0].name === undefined) {\n        throw new Error(\n          'Expected schema to contain an object with at least a name property.',\n        );\n      }\n      self.schema = value.map(function eachSchemaColumn(column, index) {\n        column.width = column.width || self.style.cellWidth;\n        column.filter = column.filter || self.filter(column.type);\n        column.type = column.type || 'string';\n        column.index = index;\n        column.columnIndex = index;\n        column.rowIndex = -1;\n        return column;\n      });\n      self.tempSchema = undefined;\n      self.createNewRowData();\n      self.createColumnOrders();\n      self.tryLoadStoredSettings();\n      if (\n        self.storedSettings &&\n        typeof self.storedSettings.visibility === 'object'\n      ) {\n        self.schema.forEach(function hideEachSchemaColumn(column, index) {\n          if (\n            self.storedSettings &&\n            self.storedSettings.visibility[column.name] !== undefined\n          ) {\n            column.hidden = !self.storedSettings.visibility[column.name];\n          }\n        });\n      }\n      self.resize(true);\n      self.dispatchEvent('schemachanged', { schema: self.schema });\n    },\n  });\n  /**\n   * Gets an array of currently registered MIME types.\n   * @memberof canvasDatagrid\n   * @name getDataTypes\n   * @method\n   */\n  self.intf.getTypes = function () {\n    return Object.keys(self.parsers);\n  };\n  self.parseInnerHtml = function (data) {\n    if (!data || /^ +$/.test(data)) {\n      return [];\n    }\n    try {\n      data = JSON.parse(data);\n    } catch (e) {\n      console.warn(\n        Error(\n          'Cannot parse application/json+x-canvas-datagrid formated data. ' +\n            e.message +\n            '  \\nNote: canvas-datagrid.innerHTML is for string data only.  ' +\n            'Use the canvas-datagrid.data property to set object data.',\n        ),\n      );\n    }\n    return data;\n  };\n  self.parsers['application/json+x-canvas-datagrid'] = function (\n    data,\n    callback,\n  ) {\n    self.parsers['application/x-canvas-datagrid'](\n      self.parseInnerHtml(data),\n      function (data, schema) {\n        return callback(data, schema);\n      },\n    );\n  };\n  self.parsers['application/x-canvas-datagrid'] = function (data, callback) {\n    return callback(data);\n  };\n  self.intf.parsers = self.parsers;\n  // send to dataType ETL function to extract from input data\n  // and transform into native [{}, {}] format\n  self.etl = function (data, callback) {\n    if (!self.intf.parsers[self.dataType]) {\n      throw new Error('Unsupported data type.');\n    }\n    self.intf.parsers[self.dataType](data, function (data, schema) {\n      // set the unfiltered/sorted data array\n      self.originalData = data;\n      self.viewData = Array.from(self.originalData);\n\n      if (Array.isArray(schema)) {\n        self.schema = schema;\n      }\n      // Issue #89 - allow schema to be auto-created every time data is set\n      if (self.attributes.autoGenerateSchema) {\n        self.schema = self.getSchemaFromData(data);\n      }\n      if (!self.schema) {\n        self.tempSchema = self.getSchemaFromData(data);\n      }\n      if (self.getSchema()) {\n        self.createColumnOrders();\n      }\n      // apply filter, sort, etc to incoming dataset, set viewData:\n      self.refresh();\n      // empty data was set\n      if (!self.schema && (self.originalData || []).length === 0) {\n        self.tempSchema = [{ name: '' }];\n      }\n      self.fitColumnToValues('cornerCell', true);\n      if (\n        (self.tempSchema && !self.schema) ||\n        self.attributes.autoGenerateSchema\n      ) {\n        self.createColumnOrders();\n        self.dispatchEvent('schemachanged', { schema: self.tempSchema });\n      }\n      callback();\n    });\n  };\n  Object.defineProperty(self.intf, 'viewData', {\n    get: function () {\n      return self.viewData;\n    },\n  });\n  Object.defineProperty(self.intf, 'boundData', {\n    get: function () {\n      return self.originalData;\n    },\n  });\n  Object.defineProperty(self.intf, 'data', {\n    get: function dataGetter() {\n      return self.originalData;\n    },\n    set: function dataSetter(value) {\n      self.etl(value, function () {\n        self.changes = [];\n        self.createNewRowData();\n        if (\n          self.attributes.autoResizeColumns &&\n          self.originalData.length > 0 &&\n          self.storedSettings === undefined\n        ) {\n          self.autosize();\n        }\n        // set the header column to fit the numbers in it\n        self.fitColumnToValues('cornerCell', true);\n        self.createRowOrders();\n        self.tryLoadStoredSettings();\n        self.dispatchEvent('datachanged', { data: self.originalData });\n        self.resize(true);\n      });\n    },\n  });\n  self.initScrollBox = function () {\n    var sHeight = 0,\n      sWidth = 0,\n      scrollTop = 0,\n      scrollLeft = 0,\n      scrollHeight = 0,\n      scrollWidth = 0,\n      scrollBoxHeight = 20,\n      scrollBoxWidth = 20;\n    function setScrollTop(value, preventScrollEvent) {\n      if (isNaN(value)) {\n        throw new Error('ScrollTop value must be a number');\n      }\n      if (value < 0) {\n        value = 0;\n      }\n      if (value > scrollHeight) {\n        value = scrollHeight;\n      }\n      if (scrollHeight < 0) {\n        value = 0;\n      }\n      scrollTop = value;\n      if (!preventScrollEvent) {\n        self.scroll();\n      }\n    }\n    function setScrollLeft(value, preventScrollEvent) {\n      if (isNaN(value)) {\n        throw new Error('ScrollLeft value must be a number');\n      }\n      if (value < 0) {\n        value = 0;\n      }\n      if (value > scrollWidth) {\n        value = scrollWidth;\n      }\n      if (scrollWidth < 0) {\n        value = 0;\n      }\n      scrollLeft = value;\n      if (!preventScrollEvent) {\n        self.scroll();\n      }\n    }\n    self.scrollBox.toString = function () {\n      return (\n        '{\"width\": ' +\n        scrollWidth.toFixed(2) +\n        ', \"height\": ' +\n        scrollHeight.toFixed(2) +\n        ', \"left\": ' +\n        scrollLeft.toFixed(2) +\n        ', \"top\": ' +\n        scrollTop.toFixed(2) +\n        ', \"widthRatio\": ' +\n        self.scrollBox.widthBoxRatio.toFixed(5) +\n        ', \"heightRatio\": ' +\n        self.scrollBox.heightBoxRatio.toFixed(5) +\n        '}'\n      );\n    };\n    self.scrollBox.scrollTo = function (x, y, supressDrawEvent) {\n      setScrollLeft(x, true);\n      setScrollTop(y, supressDrawEvent);\n    };\n    Object.defineProperty(self.scrollBox, 'scrollBoxHeight', {\n      get: function () {\n        return scrollBoxHeight;\n      },\n      set: function (value) {\n        scrollBoxHeight = value;\n      },\n    });\n    Object.defineProperty(self.scrollBox, 'scrollBoxWidth', {\n      get: function () {\n        return scrollBoxWidth;\n      },\n      set: function (value) {\n        scrollBoxWidth = value;\n      },\n    });\n    Object.defineProperty(self.scrollBox, 'height', {\n      get: function () {\n        return sHeight;\n      },\n      set: function (value) {\n        sHeight = value;\n      },\n    });\n    Object.defineProperty(self.scrollBox, 'width', {\n      get: function () {\n        return sWidth;\n      },\n      set: function (value) {\n        sWidth = value;\n      },\n    });\n    Object.defineProperty(self.scrollBox, 'scrollTop', {\n      get: function () {\n        return scrollTop;\n      },\n      set: setScrollTop,\n    });\n    Object.defineProperty(self.scrollBox, 'scrollLeft', {\n      get: function () {\n        return scrollLeft;\n      },\n      set: setScrollLeft,\n    });\n    Object.defineProperty(self.scrollBox, 'scrollHeight', {\n      get: function () {\n        return scrollHeight;\n      },\n      set: function (value) {\n        if (scrollTop > value) {\n          scrollTop = Math.max(value, 0);\n        }\n        scrollHeight = value;\n      },\n    });\n    Object.defineProperty(self.scrollBox, 'scrollWidth', {\n      get: function () {\n        return scrollWidth;\n      },\n      set: function (value) {\n        if (scrollLeft > value) {\n          scrollLeft = Math.max(value, 0);\n        }\n        scrollWidth = value;\n      },\n    });\n  };\n  return;\n}\n","/*jslint browser: true, unparam: true, todo: true*/\n/*globals define: true, MutationObserver: false, requestAnimationFrame: false, performance: false, btoa: false, Event: false*/\n'use strict';\n\nexport default function (self) {\n  var zIndexTop, hoverScrollTimeout, autoCompleteContext;\n  function applyContextItemStyle(contextItemContainer) {\n    self.createInlineStyle(\n      contextItemContainer,\n      'canvas-datagrid-context-menu-item' + (self.mobile ? '-mobile' : ''),\n    );\n    contextItemContainer.addEventListener('mouseover', function () {\n      self.createInlineStyle(\n        contextItemContainer,\n        'canvas-datagrid-context-menu-item:hover',\n      );\n    });\n    contextItemContainer.addEventListener('mouseout', function () {\n      self.createInlineStyle(\n        contextItemContainer,\n        'canvas-datagrid-context-menu-item',\n      );\n    });\n  }\n  function createContextMenu(ev, pos, items, parentContextMenu) {\n    var container = document.createElement('div'),\n      upArrow = document.createElement('div'),\n      downArrow = document.createElement('div'),\n      children = [],\n      selectedIndex = -1,\n      intf = {},\n      rect;\n    if (!Array.isArray(items)) {\n      throw new Error('createContextMenu expects an array.');\n    }\n    function createItems() {\n      items.forEach(function (item) {\n        var contextItemContainer = document.createElement('div'),\n          childMenuArrow;\n        function removeChildContext(e) {\n          if (\n            e.relatedTarget === container ||\n            item.contextMenu.container === e.relatedTarget ||\n            childMenuArrow === e.relatedTarget ||\n            contextItemContainer === e.relatedTarget ||\n            item.contextMenu.container.contains(e.relatedTarget)\n          ) {\n            return;\n          }\n          item.contextMenu.dispose();\n          children.splice(children.indexOf(item.contextMenu), 1);\n          item.contextMenu = undefined;\n          contextItemContainer.removeEventListener(\n            'mouseout',\n            removeChildContext,\n          );\n          container.removeEventListener('mouseout', removeChildContext);\n          contextItemContainer.setAttribute('contextOpen', '0');\n          contextItemContainer.setAttribute('opening', '0');\n        }\n        function contextAddCallback(items) {\n          // check yet again if the user hasn't moved off\n          if (\n            contextItemContainer.getAttribute('opening') !== '1' ||\n            contextItemContainer.getAttribute('contextOpen') === '1'\n          ) {\n            return;\n          }\n          var cPos = contextItemContainer.getBoundingClientRect();\n          cPos = {\n            left:\n              cPos.left +\n              self.style.childContextMenuMarginLeft +\n              container.offsetWidth,\n            top: cPos.top + self.style.childContextMenuMarginTop,\n            bottom: cPos.bottom,\n            right: cPos.right,\n          };\n          item.contextMenu = createContextMenu(ev, cPos, items, intf);\n          contextItemContainer.setAttribute('contextOpen', '1');\n          contextItemContainer.addEventListener('mouseout', removeChildContext);\n          container.addEventListener('mouseout', removeChildContext);\n          children.push(item.contextMenu);\n        }\n        function createChildContext() {\n          var i;\n          if (contextItemContainer.getAttribute('contextOpen') === '1') {\n            return;\n          }\n          contextItemContainer.setAttribute('opening', '1');\n          if (typeof item.items === 'function') {\n            i = item.items.apply(intf, [\n              function (items) {\n                contextAddCallback(items);\n              },\n            ]);\n            if (i !== undefined && Array.isArray(i)) {\n              contextAddCallback(i);\n            }\n            return;\n          }\n          contextAddCallback(item.items);\n        }\n        function addItem(item) {\n          function addContent(content) {\n            if (content === null) {\n              return;\n            }\n            if (typeof content === 'function') {\n              return addContent(content(ev));\n            }\n            if (typeof content === 'object') {\n              contextItemContainer.appendChild(content);\n              return;\n            }\n            applyContextItemStyle(contextItemContainer);\n            contextItemContainer.innerHTML = content;\n            return;\n          }\n          addContent(item.title);\n          item.contextItemContainer = contextItemContainer;\n          if (\n            (item.items && item.items.length > 0) ||\n            typeof item.items === 'function'\n          ) {\n            childMenuArrow = document.createElement('div');\n            self.createInlineStyle(\n              childMenuArrow,\n              'canvas-datagrid-context-child-arrow',\n            );\n            childMenuArrow.innerHTML = self.style.childContextMenuArrowHTML;\n            contextItemContainer.appendChild(childMenuArrow);\n            contextItemContainer.addEventListener(\n              'mouseover',\n              createChildContext,\n            );\n            contextItemContainer.addEventListener('mouseout', function () {\n              contextItemContainer.setAttribute('opening', '0');\n            });\n          }\n          if (item.click) {\n            contextItemContainer.addEventListener('click', function (ev) {\n              item.click.apply(self, [ev]);\n            });\n          }\n        }\n        addItem(item);\n        container.appendChild(contextItemContainer);\n      });\n    }\n    function clickIndex(idx) {\n      items[idx].contextItemContainer.dispatchEvent(new Event('click'));\n    }\n    function checkArrowVisibility() {\n      if (container.scrollTop > 0) {\n        self.parentDOMNode.appendChild(upArrow);\n      } else if (upArrow.parentNode) {\n        upArrow.parentNode.removeChild(upArrow);\n      }\n      if (\n        container.scrollTop >=\n          container.scrollHeight - container.offsetHeight &&\n        downArrow.parentNode\n      ) {\n        downArrow.parentNode.removeChild(downArrow);\n      } else if (\n        container.scrollHeight - container.offsetHeight > 0 &&\n        !(\n          container.scrollTop >=\n          container.scrollHeight - container.offsetHeight\n        )\n      ) {\n        self.parentDOMNode.appendChild(downArrow);\n      }\n    }\n    function startHoverScroll(type) {\n      return function t() {\n        var a = self.attributes.contextHoverScrollAmount;\n        if (type === 'up' && container.scrollTop === 0) {\n          return;\n        }\n        if (type === 'down' && container.scrollTop === container.scrollHeight) {\n          return;\n        }\n        container.scrollTop += type === 'up' ? -a : a;\n        hoverScrollTimeout = setTimeout(\n          t,\n          self.attributes.contextHoverScrollRateMs,\n          type,\n        );\n      };\n    }\n    function endHoverScroll(type) {\n      return function () {\n        clearTimeout(hoverScrollTimeout);\n      };\n    }\n    function init() {\n      var loc = {},\n        s = self.scrollOffset(self.canvas);\n      if (zIndexTop === undefined) {\n        zIndexTop = self.style.contextMenuZIndex;\n      }\n      createItems();\n      self.createInlineStyle(\n        container,\n        'canvas-datagrid-context-menu' + (self.mobile ? '-mobile' : ''),\n      );\n      loc.x = pos.left - s.left;\n      loc.y = pos.top - s.top;\n      loc.height = 0;\n      zIndexTop += 1;\n      container.style.position = 'absolute';\n      upArrow.style.color = self.style.contextMenuArrowColor;\n      downArrow.style.color = self.style.contextMenuArrowColor;\n      [upArrow, downArrow].forEach(function (el) {\n        el.style.textAlign = 'center';\n        el.style.position = 'absolute';\n        el.style.zIndex = zIndexTop + 1;\n      });\n      container.style.zIndex = zIndexTop;\n      if (parentContextMenu && parentContextMenu.inputDropdown) {\n        container.style.maxHeight =\n          window.innerHeight -\n          loc.y -\n          self.style.autocompleteBottomMargin +\n          'px';\n        container.style.minWidth = pos.width + 'px';\n        loc.y += pos.height;\n      }\n      if (self.mobile) {\n        container.style.width = pos.width + 'px';\n      }\n      container.style.left = loc.x + 'px';\n      container.style.top = loc.y + 'px';\n      container.addEventListener('scroll', checkArrowVisibility);\n      container.addEventListener('wheel', function (e) {\n        if (self.hasFocus) {\n          container.scrollTop += e.deltaY;\n          container.scrollLeft += e.deltaX;\n        }\n        checkArrowVisibility();\n      });\n      upArrow.innerHTML = self.style.contextMenuArrowUpHTML;\n      downArrow.innerHTML = self.style.contextMenuArrowDownHTML;\n      container.appendChild(upArrow);\n      document.body.appendChild(downArrow);\n      document.body.appendChild(container);\n      rect = container.getBoundingClientRect();\n      // TODO: fix !(parentContextMenu && parentContextMenu.inputDropdown) state (autocomplete)\n      if (rect.bottom > window.innerHeight) {\n        if (!(parentContextMenu && parentContextMenu.inputDropdown)) {\n          loc.y -=\n            rect.bottom +\n            self.style.contextMenuWindowMargin -\n            window.innerHeight;\n        }\n        if (loc.y < 0) {\n          loc.y = self.style.contextMenuWindowMargin;\n        }\n        if (\n          container.offsetHeight >\n          window.innerHeight - self.style.contextMenuWindowMargin\n        ) {\n          container.style.height =\n            window.innerHeight - self.style.contextMenuWindowMargin * 2 + 'px';\n        }\n      }\n      if (rect.right > window.innerWidth) {\n        loc.x -=\n          rect.right - window.innerWidth + self.style.contextMenuWindowMargin;\n      }\n      if (loc.x < 0) {\n        loc.x = self.style.contextMenuWindowMargin;\n      }\n      if (loc.y < 0) {\n        loc.y = self.style.contextMenuWindowMargin;\n      }\n      container.style.left = loc.x + 'px';\n      container.style.top = loc.y + 'px';\n      rect = container.getBoundingClientRect();\n      upArrow.style.top = rect.top + 'px';\n      downArrow.style.top =\n        rect.top + rect.height - downArrow.offsetHeight + 'px';\n      upArrow.style.left = rect.left + 'px';\n      downArrow.style.left = rect.left + 'px';\n      downArrow.style.width = container.offsetWidth + 'px';\n      upArrow.style.width = container.offsetWidth + 'px';\n      downArrow.addEventListener('mouseover', startHoverScroll('down'));\n      downArrow.addEventListener('mouseout', endHoverScroll('down'));\n      upArrow.addEventListener('mouseover', startHoverScroll('up'));\n      upArrow.addEventListener('mouseout', endHoverScroll('up'));\n      checkArrowVisibility();\n    }\n    intf.parentGrid = self.intf;\n    intf.parentContextMenu = parentContextMenu;\n    intf.container = container;\n    init();\n    intf.clickIndex = clickIndex;\n    intf.rect = rect;\n    intf.items = items;\n    intf.upArrow = upArrow;\n    intf.downArrow = downArrow;\n    intf.dispose = function () {\n      clearTimeout(hoverScrollTimeout);\n      children.forEach(function (c) {\n        c.dispose();\n      });\n      [downArrow, upArrow, container].forEach(function (el) {\n        if (el.parentNode) {\n          el.parentNode.removeChild(el);\n        }\n      });\n    };\n    Object.defineProperty(intf, 'selectedIndex', {\n      get: function () {\n        return selectedIndex;\n      },\n      set: function (value) {\n        if (typeof value !== 'number' || isNaN(value || !isFinite(value))) {\n          throw new Error('Context menu selected index must be a sane number.');\n        }\n        selectedIndex = value;\n        if (selectedIndex > items.length - 1) {\n          selectedIndex = items.length - 1;\n        }\n        if (selectedIndex < 0) {\n          selectedIndex = 0;\n        }\n        items.forEach(function (item, index) {\n          if (index === selectedIndex) {\n            return self.createInlineStyle(\n              item.contextItemContainer,\n              'canvas-datagrid-context-menu-item:hover',\n            );\n          }\n          self.createInlineStyle(\n            item.contextItemContainer,\n            'canvas-datagrid-context-menu-item',\n          );\n        });\n      },\n    });\n    return intf;\n  }\n  function createFilterContextMenuItems(e) {\n    var filterContainer = document.createElement('div'),\n      filterLabel = document.createElement('div'),\n      filterAutoCompleteButton = document.createElement('button'),\n      filterInput = document.createElement('input'),\n      n =\n        e.cell && e.cell.header\n          ? e.cell.header.title || e.cell.header.name\n          : '',\n      iRect;\n    function checkRegExpErrorState() {\n      filterInput.style.background = self.style.contextFilterInputBackground;\n      filterInput.style.color = self.style.contextFilterInputColor;\n      if (self.invalidFilterRegEx) {\n        filterInput.style.background =\n          self.style.contextFilterInvalidRegExpBackground;\n        filterInput.style.color = self.style.contextFilterInvalidRegExpColor;\n      }\n    }\n    function fillAutoComplete() {\n      var count = 0;\n      var items = {};\n      var blanksItem = [];\n\n      self.viewData.forEach(function (row) {\n        var cellValue =\n          row[e.cell.header.name] == null\n            ? row[e.cell.header.name]\n            : String(row[e.cell.header.name]).trim();\n        var value = self.blankValues.includes(cellValue)\n          ? self.attributes.blanksText\n          : cellValue;\n\n        if (items[value] || count > self.attributes.maxAutoCompleteItems) {\n          return;\n        }\n        count += 1;\n        items[value] = {\n          title: self.formatters[e.cell.header.type || 'string']({\n            cell: { value: value },\n          }),\n          click: function (e) {\n            filterInput.value = value;\n            e.stopPropagation();\n            filterInput.dispatchEvent(new Event('keyup'));\n            self.disposeAutocomplete();\n            return;\n          },\n        };\n      });\n\n      if (Object.keys(items).indexOf(self.attributes.blanksText) !== -1) {\n        blanksItem.push(items[self.attributes.blanksText]);\n        delete items[self.attributes.blanksText];\n      }\n\n      return blanksItem.concat(\n        Object.keys(items).map(function (key) {\n          return items[key];\n        }),\n      );\n    }\n\n    function createAutoCompleteContext(ev) {\n      if (ev && ['ArrowDown', 'ArrowUp', 'Enter', 'Tab'].includes(ev.key)) {\n        return;\n      }\n\n      var autoCompleteItems = fillAutoComplete();\n\n      iRect = filterInput.getBoundingClientRect();\n      if (autoCompleteContext) {\n        autoCompleteContext.dispose();\n        autoCompleteContext = undefined;\n      }\n      autoCompleteContext = createContextMenu(\n        e,\n        {\n          left: iRect.left,\n          top: iRect.top,\n          right: iRect.right,\n          bottom: iRect.bottom,\n          height: iRect.height,\n          width: iRect.width,\n        },\n        autoCompleteItems,\n        { inputDropdown: true },\n      );\n      autoCompleteContext.selectedIndex = 0;\n    }\n    self.createInlineStyle(filterLabel, 'canvas-datagrid-context-menu-label');\n    self.createInlineStyle(\n      filterAutoCompleteButton,\n      'canvas-datagrid-context-menu-filter-button',\n    );\n    self.createInlineStyle(\n      filterInput,\n      'canvas-datagrid-context-menu-filter-input',\n    );\n    checkRegExpErrorState();\n    filterInput.onclick = self.disposeAutocomplete;\n    filterInput.addEventListener('keydown', function (e) {\n      if (e.key === 'ArrowDown') {\n        autoCompleteContext.selectedIndex += 1;\n      }\n\n      if (e.key === 'ArrowUp') {\n        autoCompleteContext.selectedIndex -= 1;\n      }\n\n      if (e.key === 'Enter') {\n        autoCompleteContext.clickIndex(autoCompleteContext.selectedIndex);\n        self.disposeContextMenu();\n      }\n\n      if (e.key === 'Tab') {\n        autoCompleteContext.clickIndex(autoCompleteContext.selectedIndex);\n        e.preventDefault();\n      }\n\n      if (e.key === 'Escape') {\n        self.disposeContextMenu();\n      }\n    });\n    filterInput.addEventListener('keyup', function () {\n      self.setFilter(e.cell.header.name, filterInput.value);\n    });\n    filterInput.addEventListener('keyup', createAutoCompleteContext);\n    ['focus', 'blur', 'keydown', 'keyup', 'change'].forEach(function (en) {\n      filterInput.addEventListener(en, checkRegExpErrorState);\n    });\n    filterInput.value = e.cell.header\n      ? self.columnFilters[e.cell.header.name] || ''\n      : '';\n    filterLabel.innerHTML = self.attributes.filterOptionText.replace(/%s/g, n);\n    filterAutoCompleteButton.onclick = function () {\n      if (autoCompleteContext) {\n        return self.disposeAutocomplete();\n      }\n      createAutoCompleteContext();\n    };\n    filterAutoCompleteButton.innerHTML = self.style.contextFilterButtonHTML;\n    filterContainer.addEventListener('click', function (e) {\n      return e.stopPropagation();\n    });\n    filterContainer.appendChild(filterLabel);\n    filterContainer.appendChild(filterInput);\n    filterContainer.appendChild(filterAutoCompleteButton);\n    e.items.push({\n      title: filterContainer,\n    });\n    if (Object.keys(self.columnFilters).length) {\n      Object.keys(self.columnFilters).forEach(function (cf) {\n        var h = self.getHeaderByName(cf);\n        e.items.push({\n          title: self.attributes.removeFilterOptionText.replace(\n            /%s/g,\n            h.title || h.name,\n          ),\n          click: function removeFilterClick(e) {\n            e.preventDefault();\n            self.setFilter(cf, '');\n            self.controlInput.focus();\n          },\n        });\n      });\n    }\n  }\n  function addDefaultContextMenuItem(e) {\n    var isNormalCell =\n      !(\n        e.cell.isBackground ||\n        e.cell.isColumnHeaderCellCap ||\n        e.cell.isScrollBar ||\n        e.cell.isCorner ||\n        e.cell.isRowHeader\n      ) && e.cell.header;\n    if (self.attributes.showFilter && isNormalCell) {\n      createFilterContextMenuItems(e);\n    }\n    if (\n      self.attributes.showCopy &&\n      self.selections.reduce(function (p, r) {\n        return p + r.length;\n      }, 0) > 0\n    ) {\n      e.items.push({\n        title: self.attributes.copyText,\n        click: function () {\n          document.execCommand('copy');\n          self.disposeContextMenu();\n          self.controlInput.focus();\n        },\n      });\n    }\n    if (self.attributes.showPaste && self.clipBoardData) {\n      e.items.push({\n        title: self.attributes.pasteText,\n        click: function () {\n          self.paste(self.clipBoardData, e.cell.columnIndex, e.cell.rowIndex);\n          self.draw();\n        },\n      });\n    }\n    if (self.attributes.showColumnSelector) {\n      e.items.push({\n        title: self.attributes.columnSelectorText,\n        items: function () {\n          var d = [];\n          self.getSchema().forEach(function (column) {\n            function toggleColumnVisibility(e) {\n              column.hidden = !column.hidden;\n              self.dispatchEvent('togglecolumn', {\n                column: column,\n                hidden: column.hidden,\n              });\n              e.preventDefault();\n              self.stopPropagation(e);\n              self.disposeContextMenu();\n              self.resize(true);\n              self.setStorageData();\n            }\n            var el = document.createElement('div');\n            applyContextItemStyle(el);\n            el.addEventListener('touchstart', toggleColumnVisibility);\n            el.addEventListener('click', toggleColumnVisibility);\n            el.innerHTML =\n              (column.hidden\n                ? self.attributes.columnSelectorHiddenText\n                : self.attributes.columnSelectorVisibleText) +\n              (column.title || column.name);\n            d.push({\n              title: el,\n            });\n          });\n          return d;\n        },\n      });\n      if (e.cell && e.cell.header && e.cell.columnIndex > -1) {\n        e.items.push({\n          title: self.attributes.hideColumnText.replace(\n            /%s/gi,\n            e.cell.header.title || e.cell.header.name,\n          ),\n          click: function (ev) {\n            self.getSchema()[e.cell.columnIndex].hidden = true;\n            ev.preventDefault();\n            self.stopPropagation(ev);\n            self.disposeContextMenu();\n            self.setStorageData();\n            setTimeout(function () {\n              self.resize(true);\n            }, 10);\n          },\n        });\n      }\n    }\n    if (\n      self.attributes.saveAppearance &&\n      self.attributes.showClearSettingsOption &&\n      (Object.keys(self.sizes.rows).length > 0 ||\n        Object.keys(self.sizes.columns).length > 0)\n    ) {\n      e.items.push({\n        title: self.attributes.clearSettingsOptionText,\n        click: function (e) {\n          e.preventDefault();\n          self.sizes.rows = {};\n          self.sizes.columns = {};\n          self.createRowOrders();\n          self.createColumnOrders();\n          self.storedSettings = undefined;\n          self.dispatchEvent('resizecolumn', {\n            columnWidth: self.style.cellWidth,\n          });\n          self.dispatchEvent('resizerow', {\n            cellHeight: self.style.cellHeight,\n          });\n          self.setStorageData();\n          self.resize(true);\n          self.disposeContextMenu();\n          self.controlInput.focus();\n        },\n      });\n    }\n    if (\n      self.attributes.allowSorting &&\n      self.attributes.showOrderByOption &&\n      isNormalCell\n    ) {\n      e.items.push({\n        title: self.attributes.showOrderByOptionTextAsc.replace(\n          '%s',\n          e.cell.header.title || e.cell.header.name,\n        ),\n        click: function (ev) {\n          ev.preventDefault();\n          self.order(e.cell.header.name, 'asc');\n          self.controlInput.focus();\n        },\n      });\n      e.items.push({\n        title: self.attributes.showOrderByOptionTextDesc.replace(\n          '%s',\n          e.cell.header.title || e.cell.header.name,\n        ),\n        click: function (ev) {\n          ev.preventDefault();\n          self.order(e.cell.header.name, 'desc');\n          self.disposeContextMenu();\n          self.controlInput.focus();\n        },\n      });\n    }\n  }\n  self.disposeAutocomplete = function () {\n    if (autoCompleteContext) {\n      autoCompleteContext.dispose();\n      autoCompleteContext = undefined;\n    }\n  };\n  self.disposeContextMenu = function () {\n    document.removeEventListener('click', self.disposeContextMenu);\n    zIndexTop = self.style.contextMenuZIndex;\n    self.disposeAutocomplete();\n    if (self.contextMenu) {\n      self.contextMenu.dispose();\n    }\n    self.contextMenu = undefined;\n  };\n  self.contextmenuEvent = function (e, overridePos) {\n    if (!self.hasFocus && e.target !== self.canvas) {\n      return;\n    }\n    function createDiposeEvent() {\n      requestAnimationFrame(function () {\n        document.addEventListener('click', self.disposeContextMenu);\n        document.removeEventListener('mouseup', createDiposeEvent);\n      });\n    }\n    var contextPosition,\n      items = [],\n      pos = overridePos || self.getLayerPos(e),\n      ev = {\n        NativeEvent: e,\n        cell: self.getCellAt(pos.x, pos.y),\n        items: items,\n      };\n    if (!ev.cell.isGrid) {\n      addDefaultContextMenuItem(ev);\n    }\n    if (self.dispatchEvent('contextmenu', ev)) {\n      return;\n    }\n    if (!ev.cell.isGrid) {\n      if (self.contextMenu) {\n        self.disposeContextMenu();\n      }\n      contextPosition = {\n        left:\n          pos.x +\n          pos.rect.left +\n          self.style.contextMenuMarginLeft +\n          self.canvasOffsetLeft,\n        top:\n          pos.y +\n          pos.rect.top +\n          self.style.contextMenuMarginTop +\n          self.canvasOffsetTop,\n        right: ev.cell.width + ev.cell.x + pos.rect.left,\n        bottom: ev.cell.height + ev.cell.y + pos.rect.top,\n        height: ev.cell.height,\n        width: ev.cell.width,\n      };\n      if (self.mobile) {\n        contextPosition.left = self.style.mobileContextMenuMargin + 'px';\n        contextPosition.width =\n          self.width - self.style.mobileContextMenuMargin * 2 + 'px';\n      }\n      self.contextMenu = createContextMenu(ev, contextPosition, items);\n      document.addEventListener('mouseup', createDiposeEvent);\n      e.preventDefault();\n    }\n  };\n  return;\n}\n","/*jslint browser: true, unparam: true, todo: true*/\n/*globals define: true, MutationObserver: false, requestAnimationFrame: false, performance: false, btoa: false*/\n'use strict';\n\nexport default function (self) {\n  self.getClippingRect = function (ele) {\n    var boundingRect = self.position(self.parentNode),\n      eleRect = self.position(ele),\n      s = self.scrollOffset(self.canvas),\n      clipRect = {\n        x: 0,\n        y: 0,\n        h: 0,\n        w: 0,\n      },\n      parentRect = {\n        x: -Infinity,\n        y: -Infinity,\n        h: Infinity,\n        w: Infinity,\n      },\n      columnHeaderCellHeight = self.getColumnHeaderCellHeight(),\n      rowHeaderCellWidth = self.getRowHeaderCellWidth();\n    boundingRect.top -= s.top;\n    boundingRect.left -= s.left;\n    eleRect.top -= s.top;\n    eleRect.left -= s.left;\n    clipRect.h =\n      boundingRect.top +\n      boundingRect.height -\n      ele.offsetTop -\n      self.style.scrollBarWidth;\n    clipRect.w =\n      boundingRect.left +\n      boundingRect.width -\n      ele.offsetLeft -\n      self.style.scrollBarWidth;\n    clipRect.x = boundingRect.left + eleRect.left * -1 + rowHeaderCellWidth;\n    clipRect.y = boundingRect.top + eleRect.top * -1 + columnHeaderCellHeight;\n    return {\n      x: clipRect.x > parentRect.x ? clipRect.x : parentRect.x,\n      y: clipRect.y > parentRect.y ? clipRect.y : parentRect.y,\n      h: clipRect.h < parentRect.h ? clipRect.h : parentRect.h,\n      w: clipRect.w < parentRect.w ? clipRect.w : parentRect.w,\n    };\n  };\n  self.clipElement = function (ele) {\n    var clipRect = self.getClippingRect(ele);\n    if (clipRect.w < 0) {\n      clipRect.w = 0;\n    }\n    if (clipRect.h < 0) {\n      clipRect.h = 0;\n    }\n    ele.style.clip =\n      'rect(' +\n      clipRect.y +\n      'px,' +\n      clipRect.w +\n      'px,' +\n      clipRect.h +\n      'px,' +\n      clipRect.x +\n      'px' +\n      ')';\n    // INFO https://developer.mozilla.org/en-US/docs/Web/CSS/clip\n    // clip has been \"deprecated\" for clipPath.  Of course nothing but chrome\n    // supports clip path, so we'll keep using clip until someday clipPath becomes\n    // more widely support.  The code below works correctly, but setting clipPath and clip\n    // at the same time has undesirable results.\n    // ele.style.clipPath = 'polygon('\n    //     + clipRect.x + 'px ' + clipRect.y + 'px,'\n    //     + clipRect.x + 'px ' + clipRect.h + 'px,'\n    //     + clipRect.w + 'px ' + clipRect.h + 'px,'\n    //     + clipRect.w + 'px ' + clipRect.y + 'px'\n    //     + ')';\n  };\n  self.scrollOffset = function (e) {\n    var x = 0,\n      y = 0,\n      scrollingElement = document.scrollingElement || {\n        scrollLeft: 0,\n        scrollTop: 0,\n      };\n    while (\n      e.parentNode &&\n      e.nodeName !== 'CANVAS-DATAGRID' &&\n      e !== self.intf\n    ) {\n      if (\n        e.nodeType !== 'canvas-datagrid-tree' &&\n        e.nodeType !== 'canvas-datagrid-cell'\n      ) {\n        x -= e.scrollLeft;\n        y -= e.scrollTop;\n      }\n      e = e.parentNode;\n    }\n    return {\n      left: x - scrollingElement.scrollLeft,\n      top: y - scrollingElement.scrollTop,\n    };\n  };\n  self.resizeEditInput = function () {\n    if (self.input && self.input.editCell) {\n      var pos = self.canvas.getBoundingClientRect(),\n        s = self.scrollOffset(self.intf),\n        bm = self.style.gridBorderCollapse === 'collapse' ? 1 : 2,\n        borderWidth = self.style.cellBorderWidth * bm,\n        cell = self.getVisibleCellByIndex(\n          self.input.editCell.columnIndex,\n          self.input.editCell.rowIndex,\n        ) || { x: -100, y: -100, height: 0, width: 0 };\n      if (self.mobile) {\n        self.input.style.left = '0';\n        self.input.style.top =\n          self.height -\n          self.style.mobileEditInputHeight -\n          borderWidth -\n          1 +\n          'px';\n        self.input.style.height = self.style.mobileEditInputHeight + 'px';\n        self.input.style.width = self.width - borderWidth - 1 + 'px';\n        return;\n      }\n      self.input.style.left =\n        pos.left + cell.x + self.canvasOffsetLeft - s.left + 'px';\n      self.input.style.top =\n        pos.top +\n        cell.y -\n        self.style.cellBorderWidth +\n        self.canvasOffsetTop -\n        s.top +\n        'px';\n      self.input.style.height = cell.height - borderWidth + 'px';\n      self.input.style.width = cell.width - self.style.cellPaddingLeft + 'px';\n      self.clipElement(self.input);\n    }\n  };\n  self.position = function (e, ignoreScrollOffset) {\n    var x = 0,\n      y = 0,\n      s = e,\n      h,\n      w;\n    while (e.offsetParent && e.nodeName !== 'CANVAS-DATAGRID') {\n      x += e.offsetLeft;\n      y += e.offsetTop;\n      h = e.offsetHeight;\n      w = e.offsetWidth;\n      e = e.offsetParent;\n    }\n    if (ignoreScrollOffset) {\n      return { left: x, top: y, height: h, width: w };\n    }\n    e = s;\n    s = self.scrollOffset(e);\n    return { left: x + s.left, top: y + s.top, height: h, width: w };\n  };\n  self.getLayerPos = function (e) {\n    var rect = self.canvas.getBoundingClientRect(),\n      pos = {\n        x: e.clientX - rect.left,\n        y: e.clientY - rect.top,\n      };\n    if (self.isChildGrid) {\n      pos.x -= self.canvasOffsetLeft;\n      pos.y -= self.canvasOffsetTop;\n    }\n    return {\n      x: pos.x,\n      y: pos.y,\n      rect: rect,\n    };\n  };\n  /**\n   * Ends editing, optionally aborting the edit.\n   * @memberof canvasDatagrid\n   * @name endEdit\n   * @method\n   * @param {boolean} abort When true, abort the edit.\n   */\n  self.endEdit = function (abort) {\n    var cell = self.input.editCell,\n      y = cell.rowIndex;\n    function abortEdit() {\n      abort = true;\n    }\n    if (\n      self.dispatchEvent('beforeendedit', {\n        cell: cell,\n        newValue: self.input.value,\n        oldValue: cell.value,\n        abort: abortEdit,\n        input: self.input,\n      })\n    ) {\n      return false;\n    }\n    if (self.input.value !== cell.value && !abort) {\n      self.changes[y] = self.changes[y] || {};\n      self.changes[y][cell.header.name] = self.input.value;\n      if (!cell.data) {\n        self.originalData[cell.boundRowIndex] = {};\n        cell.data = self.originalData[cell.boundRowIndex];\n      }\n      cell.data[cell.header.name] = self.input.value;\n      if (y === self.viewData.length) {\n        if (\n          self.dispatchEvent('newrow', {\n            value: self.input.value,\n            defaultValue: cell.value,\n            aborted: abort,\n            cell: cell,\n            input: self.input,\n          })\n        ) {\n          return false;\n        }\n        self.addRow(cell.data);\n        self.createNewRowData();\n      }\n      self.draw(true);\n    }\n    if (self.input.parentNode) {\n      self.input.parentNode.removeChild(self.input);\n    }\n    self.intf.focus();\n    self.dispatchEvent('endedit', {\n      cell: cell,\n      value: self.input.value,\n      aborted: abort,\n      input: self.input,\n    });\n    self.input = undefined;\n    return true;\n  };\n  /**\n   * Begins editing at cell x, row y.\n   * @memberof canvasDatagrid\n   * @name beginEditAt\n   * @method\n   * @param {number} x The column index of the cell to edit.\n   * @param {number} y The row index of the cell to edit.\n   * @param {boolean} inEnterMode If true, starting to type in cell will replace the\n   * cell's previous value instead of appending, and using the arrow keys will allow\n   * the user to navigate to adjacent cells instead of moving the text cursor around\n   * (default is false, and means user is in 'edit' mode).\n   */\n  self.beginEditAt = function (x, y, NativeEvent, inEnterMode = false) {\n    if (!self.attributes.editable) {\n      return;\n    }\n    if (self.input) {\n      self.endEdit();\n    }\n    var cell = self.getVisibleCellByIndex(x, y),\n      s = self.getSchema(),\n      adjacentCells,\n      enumItems,\n      enu,\n      option,\n      valueInEnum;\n    if (!(cell && cell.header)) {\n      return;\n    }\n    //HACK for IE10, does not like literal enum\n    enu = cell.header['enum'];\n    if (\n      self.dispatchEvent('beforebeginedit', {\n        cell: cell,\n        NativeEvent: NativeEvent,\n      })\n    ) {\n      return false;\n    }\n    self.scrollIntoView(x, y);\n    self.setActiveCell(x, y);\n    adjacentCells = self.getAdjacentCells();\n    if (enu) {\n      self.input = document.createElement('select');\n    } else {\n      self.input = document.createElement(\n        self.attributes.multiLine ? 'textarea' : 'input',\n      );\n    }\n    cell = self.getVisibleCellByIndex(x, y);\n    //HACK on mobile devices sometimes edit can begin without the cell being in view, I don't know how.\n    if (!cell) {\n      return;\n    }\n    if (enu) {\n      // add enums\n      if (typeof enu === 'function') {\n        enumItems = enu.apply(self.intf, [{ cell: cell }]);\n      } else if (Array.isArray(enu)) {\n        enumItems = enu;\n      }\n      enumItems.forEach(function (e) {\n        var i = document.createElement('option'),\n          val,\n          title;\n        if (Array.isArray(e)) {\n          val = e[0];\n          title = e[1];\n        } else {\n          val = e;\n          title = e;\n        }\n        if (val === cell.value) {\n          valueInEnum = true;\n        }\n        i.value = val;\n        i.innerHTML = title;\n        self.input.appendChild(i);\n      });\n      if (!valueInEnum) {\n        option = document.createElement('option');\n        option.value = cell.value;\n        option.innerHTML = cell.value;\n        self.input.appendChild(option);\n      }\n      self.input.addEventListener('change', function () {\n        self.endEdit();\n        self.draw(true);\n      });\n    }\n    // if the user has not prevented the default action, append to the body\n    if (\n      !self.dispatchEvent('appendeditinput', { cell: cell, input: self.input })\n    ) {\n      document.body.appendChild(self.input);\n    }\n    self.createInlineStyle(\n      self.input,\n      self.mobile\n        ? 'canvas-datagrid-edit-mobile-input'\n        : 'canvas-datagrid-edit-input',\n    );\n    self.input.style.position = 'absolute';\n    self.input.editCell = cell;\n    self.resizeEditInput();\n    self.input.style.zIndex = self.style.editCellZIndex;\n    self.input.style.fontSize =\n      parseInt(self.style.editCellFontSize, 10) * self.scale + 'px';\n\n    var cellValueIsEmpty = [null, undefined].indexOf(cell.value) !== -1;\n    var shouldClearCellValue = cellValueIsEmpty || inEnterMode;\n\n    self.input.value = shouldClearCellValue ? '' : cell.value;\n    self.input.focus();\n    self.input.addEventListener('click', self.stopPropagation);\n    self.input.addEventListener('dblclick', self.stopPropagation);\n    self.input.addEventListener('mouseup', self.stopPropagation);\n    self.input.addEventListener('mousedown', self.stopPropagation);\n    self.input.addEventListener('keydown', function (e) {\n      var nx = cell.columnIndex,\n        ny = cell.rowIndex;\n\n      if (e.key === 'Escape') {\n        self.endEdit(true); // end edit and abort the value change\n        self.draw(true);\n      } else if (e.key === 'Enter' && self.attributes.multiLine && e.altKey) {\n        self.input.value = self.input.value + '\\n';\n        self.input.scrollTop = self.input.scrollHeight;\n      } else if (e.key === 'Enter') {\n        self.endEdit();\n\n        // Move to cell in next or previous row\n        var nextRowIndex = e.shiftKey\n          ? Math.max(0, ny - 1)\n          : Math.min(ny + 1, self.viewData.length - 1);\n\n        if (nextRowIndex !== ny) {\n          self.scrollIntoView(nx, nextRowIndex);\n          self.setActiveCell(nx, nextRowIndex);\n        }\n\n        self.draw(true);\n      } else if (\n        ['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'].includes(e.key) &&\n        inEnterMode\n      ) {\n        switch (e.key) {\n          case 'ArrowUp':\n            ny = Math.max(0, ny - 1);\n            break;\n          case 'ArrowDown':\n            ny = Math.min(ny + 1, self.viewData.length - 1);\n            break;\n          case 'ArrowLeft':\n            nx = Math.max(nx - 1, 0);\n            break;\n          case 'ArrowRight':\n            nx = adjacentCells.right;\n            break;\n        }\n\n        self.endEdit();\n\n        self.scrollIntoView(nx, ny);\n        self.setActiveCell(nx, ny);\n\n        self.draw(true);\n      } else if (e.key === 'Tab') {\n        e.preventDefault();\n        if (!self.endEdit()) {\n          return;\n        }\n        if (e.shiftKey) {\n          nx = adjacentCells.left;\n        } else {\n          nx = adjacentCells.right;\n        }\n        if (adjacentCells.left === x && e.shiftKey) {\n          nx = adjacentCells.last;\n          ny -= 1;\n        }\n        if (adjacentCells.right === x && !e.shiftKey) {\n          nx = adjacentCells.first;\n          ny += 1;\n        }\n        if (ny < 0) {\n          ny = self.viewData.length - 1;\n        }\n        if (ny > self.viewData.length - 1) {\n          ny = 0;\n        }\n        self.scrollIntoView(nx, ny);\n        self.beginEditAt(nx, ny, e);\n      }\n    });\n\n    self.dispatchEvent('beginedit', { cell: cell, input: self.input });\n  };\n  self.createInlineStyle = function (el, className) {\n    var css = {\n      'canvas-datagrid-context-menu-filter-input': {\n        height: '19px',\n        verticalAlign: 'bottom',\n        marginLeft: '2px',\n        padding: '0',\n        background: self.style.contextFilterInputBackground,\n        color: self.style.contextFilterInputColor,\n        border: self.style.contextFilterInputBorder,\n        borderRadius: self.style.contextFilterInputBorderRadius,\n        lineHeight: 'normal',\n        fontWeight: 'normal',\n        fontFamily: self.style.contextFilterInputFontFamily,\n        fontSize: self.style.contextFilterInputFontSize,\n      },\n      'canvas-datagrid-context-menu-filter-button': {\n        height: '19px',\n        verticalAlign: 'bottom',\n        marginLeft: '2px',\n        padding: '0',\n        background: self.style.contextMenuBackground,\n        color: self.style.contextMenuColor,\n        border: self.style.contextFilterButtonBorder,\n        borderRadius: self.style.contextFilterButtonBorderRadius,\n        lineHeight: 'normal',\n        fontWeight: 'normal',\n        fontFamily: self.style.contextMenuFilterButtonFontFamily,\n        fontSize: self.style.contextMenuFilterButtonFontSize,\n      },\n      'canvas-datagrid-context-child-arrow': {\n        cssFloat: 'right',\n        color: self.style.childContextMenuArrowColor,\n        fontSize: self.style.contextMenuChildArrowFontSize,\n        fontFamily: self.style.contextMenuFontFamily,\n        verticalAlign: 'middle',\n      },\n      'canvas-datagrid-autocomplete': {\n        fontFamily: self.style.contextMenuFontFamily,\n        fontSize: self.style.contextMenuFontSize,\n        background: self.style.contextMenuBackground,\n        color: self.style.contextMenuColor,\n        border: self.style.contextMenuBorder,\n        padding: self.style.contextMenuPadding,\n        borderRadius: self.style.contextMenuBorderRadius,\n        opacity: self.style.contextMenuOpacity,\n        position: 'absolute',\n        zIndex: 9999,\n        overflow: 'hidden',\n      },\n      'canvas-datagrid-autocomplete-item': {\n        background: self.style.contextMenuBackground,\n        color: self.style.contextMenuColor,\n      },\n      'canvas-datagrid-autocomplete-item:hover': {\n        background: self.style.contextMenuHoverBackground,\n        color: self.style.contextMenuHoverColor,\n      },\n      'canvas-datagrid-canvas': {\n        position: 'absolute',\n        zIndex: '-1',\n      },\n      'canvas-datagrid': {\n        display: 'block',\n      },\n      'canvas-datagrid-control-input': {\n        position: 'fixed',\n        top: '-5px',\n        left: '-5px',\n        border: 'none',\n        opacity: '0',\n        cursor: 'pointer',\n        width: '1px',\n        height: '1px',\n        lineHeight: 'normal',\n        fontWeight: 'normal',\n        fontFamily: self.style.contextMenuFontFamily,\n        fontSize: self.style.contextMenuFontSize,\n      },\n      'canvas-datagrid-edit-mobile-input': {\n        boxSizing: 'content-box',\n        outline: 'none',\n        margin: '0',\n        padding: '0 0 0 0',\n        lineHeight: 'normal',\n        fontWeight: 'normal',\n        fontFamily: self.style.mobileEditFontFamily,\n        fontSize: self.style.mobileEditFontSize,\n        border: self.style.editCellBorder,\n        color: self.style.editCellColor,\n        background: self.style.editCellBackgroundColor,\n        appearance: 'none',\n        webkitAppearance: 'none',\n        mozAppearance: 'none',\n        borderRadius: '0',\n      },\n      'canvas-datagrid-edit-input': {\n        boxSizing: 'content-box',\n        outline: 'none',\n        margin: '0',\n        padding: '0 0 0 ' + self.style.editCellPaddingLeft + 'px',\n        lineHeight: 'normal',\n        fontWeight: 'normal',\n        fontFamily: self.style.editCellFontFamily,\n        fontSize: self.style.editCellFontSize,\n        boxShadow: self.style.editCellBoxShadow,\n        border: self.style.editCellBorder,\n        color: self.style.editCellColor,\n        background: self.style.editCellBackgroundColor,\n        appearance: 'none',\n        webkitAppearance: 'none',\n        mozAppearance: 'none',\n        borderRadius: '0',\n      },\n      'canvas-datagrid-context-menu-item-mobile': {\n        lineHeight: 'normal',\n        fontWeight: 'normal',\n        fontFamily: self.style.contextMenuFontFamily,\n        fontSize: self.style.contextMenuFontSize,\n        color: 'inherit',\n        background: 'inherit',\n        margin: self.style.contextMenuItemMargin,\n        borderRadius: self.style.contextMenuItemBorderRadius,\n        verticalAlign: 'middle',\n      },\n      'canvas-datagrid-context-menu-item': {\n        lineHeight: 'normal',\n        fontWeight: 'normal',\n        fontFamily: self.style.contextMenuFontFamily,\n        fontSize: self.style.contextMenuFontSize,\n        color: 'inherit',\n        background: 'inherit',\n        margin: self.style.contextMenuItemMargin,\n        borderRadius: self.style.contextMenuItemBorderRadius,\n        verticalAlign: 'middle',\n      },\n      'canvas-datagrid-context-menu-item:hover': {\n        background: self.style.contextMenuHoverBackground,\n        color: self.style.contextMenuHoverColor,\n      },\n      'canvas-datagrid-context-menu-label': {\n        margin: self.style.contextMenuLabelMargin,\n        display: self.style.contextMenuLabelDisplay,\n        minWidth: self.style.contextMenuLabelMinWidth,\n        maxWidth: self.style.contextMenuLabelMaxWidth,\n      },\n      'canvas-datagrid-context-menu-mobile': {\n        lineHeight: 'normal',\n        fontWeight: 'normal',\n        fontFamily: self.style.contextMenuFontFamily,\n        fontSize: self.style.contextMenuFontSize,\n        background: self.style.contextMenuBackground,\n        color: self.style.contextMenuColor,\n        border: self.style.contextMenuBorder,\n        padding: self.style.contextMenuPadding,\n        borderRadius: self.style.contextMenuBorderRadius,\n        opacity: self.style.contextMenuOpacity,\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n      },\n      'canvas-datagrid-context-menu': {\n        lineHeight: 'normal',\n        fontWeight: 'normal',\n        fontFamily: self.style.contextMenuFontFamily,\n        fontSize: self.style.contextMenuFontSize,\n        background: self.style.contextMenuBackground,\n        color: self.style.contextMenuColor,\n        border: self.style.contextMenuBorder,\n        padding: self.style.contextMenuPadding,\n        borderRadius: self.style.contextMenuBorderRadius,\n        opacity: self.style.contextMenuOpacity,\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n        cursor: self.style.contextMenuCursor,\n      },\n      'canvas-datagrid-invalid-search-regExp': {\n        background: self.style.contextMenuFilterInvalidExpresion,\n      },\n    };\n    if (css[className]) {\n      Object.keys(css[className]).map(function (prop) {\n        el.style[prop] = css[className][prop];\n      });\n    }\n    return;\n  };\n  self.appendTo = function (e) {\n    self.parentNode = e;\n    self.setDom();\n  };\n  self.setDom = function () {\n    if (self.isChildGrid) {\n      self.parentGrid = self.parentNode.parentGrid;\n      self.ctx = self.parentGrid.context;\n      self.canvas = self.parentGrid.canvas;\n      self.controlInput = self.parentGrid.controlInput;\n      self.eventParent = self.canvas;\n    } else {\n      self.controlInput = self.controlInput || document.createElement('input');\n      self.controlInput.onblur = self.intf.blur;\n      self.createInlineStyle(\n        self.controlInput,\n        'canvas-datagrid-control-input',\n      );\n      self.isChildGrid = false;\n      self.parentDOMNode = self.parentNode;\n      self.parentIsCanvas = /^canvas$/i.test(self.parentDOMNode.tagName);\n      if (self.parentIsCanvas) {\n        self.canvas = self.parentDOMNode;\n      } else {\n        self.canvas = document.createElement('canvas');\n        self.parentDOMNode.appendChild(self.canvas);\n      }\n      document.body.appendChild(self.controlInput);\n      self.createInlineStyle(self.canvas, 'canvas-datagrid');\n      self.ctx = self.canvas.getContext('2d');\n      self.ctx.textBaseline = 'alphabetic';\n      self.eventParent = self.canvas;\n    }\n    self.parentNodeStyle = self.canvas.style;\n    self.controlInput.setAttribute('readonly', true);\n    self.controlInput.addEventListener('blur', function (e) {\n      if (e.target !== self.canvas) {\n        self.hasFocus = false;\n      }\n    });\n    self.eventParent.addEventListener('scroll', self.resize, false);\n    self.eventParent.addEventListener('touchstart', self.touchstart, false);\n    self.eventParent.addEventListener('mouseup', self.mouseup, false);\n    self.eventParent.addEventListener('mousedown', self.mousedown, false);\n    self.eventParent.addEventListener('dblclick', self.dblclick, false);\n    self.eventParent.addEventListener('click', self.click, false);\n    self.eventParent.addEventListener('mousemove', self.mousemove);\n    self[self.isChildGrid ? 'parentGrid' : 'eventParent'].addEventListener(\n      'wheel',\n      self.scrollWheel,\n      false,\n    );\n    self.canvas.addEventListener('contextmenu', self.contextmenuEvent, false);\n    self.controlInput.addEventListener('copy', self.copy);\n    self.controlInput.addEventListener('cut', self.cut);\n    self.controlInput.addEventListener('paste', self.paste);\n    self.controlInput.addEventListener('keypress', self.keypress, false);\n    self.controlInput.addEventListener('keyup', self.keyup, false);\n    self.controlInput.addEventListener('keydown', self.keydown, false);\n    window.addEventListener('resize', self.resize);\n  };\n}\n","/*jslint browser: true, unparam: true, todo: true*/\n/*globals define: true, MutationObserver: false, requestAnimationFrame: false, performance: false, btoa: false*/\n'use strict';\n\nexport default function (self) {\n  /**\n   * Converts a integer into a letter A - ZZZZZ...\n   * @memberof canvasDatagrid\n   * @name integerToAlpha\n   * @method\n   * @param {column} n The number to convert.\n   */\n  self.integerToAlpha = function (n) {\n    var ordA = 'a'.charCodeAt(0),\n      ordZ = 'z'.charCodeAt(0),\n      len = ordZ - ordA + 1,\n      s = '';\n    while (n >= 0) {\n      s = String.fromCharCode((n % len) + ordA) + s;\n      n = Math.floor(n / len) - 1;\n    }\n    return s;\n  };\n  /**\n   * Inserts a new column before the specified index into the schema.\n   * @tutorial schema\n   * @memberof canvasDatagrid\n   * @name insertColumn\n   * @method\n   * @param {column} c The column to insert into the schema.\n   * @param {number} index The index of the column to insert before.\n   */\n  self.insertColumn = function (c, index) {\n    var s = self.getSchema();\n    if (s.length < index) {\n      throw new Error('Index is beyond the length of the schema.');\n    }\n    self.validateColumn(c, s);\n    s.splice(index, 0, c);\n\n    self.originalData.forEach(function (row) {\n      self.applyDefaultValue(row, c);\n    });\n    self.intf.schema = s;\n\n    self.refresh();\n  };\n  /**\n   * Deletes a column from the schema at the specified index.\n   * @memberof canvasDatagrid\n   * @name deleteColumn\n   * @tutorial schema\n   * @method\n   * @param {number} index The index of the column to delete.\n   */\n  self.deleteColumn = function (index) {\n    var schema = self.getSchema();\n\n    // remove data matching this column name from data\n    self.originalData.forEach(function (row) {\n      delete row[schema[index].name];\n    });\n\n    schema.splice(index, 1);\n    self.intf.schema = schema;\n\n    self.refresh();\n  };\n  /**\n   * Adds a new column into the schema.\n   * @tutorial schema\n   * @memberof canvasDatagrid\n   * @name addColumn\n   * @method\n   * @param {column} c The column to add to the schema.\n   */\n  self.addColumn = function (c) {\n    var s = self.getSchema();\n    self.validateColumn(c, s);\n    s.push(c);\n    self.originalData.forEach(function (row) {\n      self.applyDefaultValue(row, c);\n    });\n    self.intf.schema = s;\n\n    self.refresh();\n  };\n  /**\n   * Deletes a row from the dataset at the specified index.\n   * @memberof canvasDatagrid\n   * @name deleteRow\n   * @method\n   * @param {number} index The index of the row to delete.\n   */\n  self.deleteRow = function (index) {\n    self.originalData.splice(index, 1);\n    self.setFilter();\n    self.resize(true);\n  };\n  /**\n   * Inserts a new row into the dataset before the specified index.\n   * @memberof canvasDatagrid\n   * @name insertRow\n   * @method\n   * @param {object} d data.\n   * @param {number} index The index of the row to insert before.\n   */\n  self.insertRow = function (d, index) {\n    if (self.originalData.length < index) {\n      throw new Error('Index is beyond the length of the dataset.');\n    }\n    self.originalData.splice(index, 0, d);\n    self.getSchema().forEach(function (c) {\n      if (d[c.name] === undefined) {\n        self.applyDefaultValue(self.originalData[index], c);\n      }\n    });\n\n    // setFilter calls .refresh(), so we need not call it again:\n    self.setFilter();\n\n    self.resize(true);\n  };\n  /**\n   * Adds a new row into the dataset.\n   * @memberof canvasDatagrid\n   * @name addRow\n   * @method\n   * @param {object} d data.\n   */\n  self.addRow = function (d) {\n    self.originalData.push(d);\n    self.getSchema().forEach(function (c) {\n      if (d[c.name] === undefined) {\n        self.applyDefaultValue(\n          self.originalData[self.originalData.length - 1],\n          c,\n        );\n      }\n    });\n\n    // setFilter calls .refresh(), so we need not call it again:\n    self.setFilter();\n\n    self.resize(true);\n  };\n  /**\n   * Sets the height of a given row by index number.\n   * @memberof canvasDatagrid\n   * @name setRowHeight\n   * @method\n   * @param {number} rowIndex The index of the row to set.\n   * @param {number} height Height to set the row to.\n   */\n  self.setRowHeight = function (rowIndex, height) {\n    self.sizes.rows[rowIndex] = height;\n    self.draw(true);\n  };\n  /**\n   * Sets the width of a given column by index number.\n   * @memberof canvasDatagrid\n   * @name setColumnWidth\n   * @method\n   * @param {number} colIndex The index of the column to set.\n   * @param {number} width Width to set the column to.\n   */\n  self.setColumnWidth = function (colIndex, width) {\n    self.sizes.columns[colIndex] = width;\n    self.draw(true);\n  };\n  /**\n   * Removes any changes to the width of the columns due to user or api interaction, setting them back to the schema or style default.\n   * @memberof canvasDatagrid\n   * @name resetColumnWidths\n   * @tutorial schema\n   * @method\n   */\n  self.resetColumnWidths = function () {\n    self.sizes.columns = {};\n    self.draw(true);\n  };\n  /**\n   * Removes any changes to the height of the rows due to user or api interaction, setting them back to the schema or style default.\n   * @memberof canvasDatagrid\n   * @name resetRowHeights\n   * @tutorial schema\n   * @method\n   */\n  self.resetRowHeights = function () {\n    self.sizes.rows = {};\n    self.draw(true);\n  };\n  /**\n   * Sets the value of the filter.\n   * @memberof canvasDatagrid\n   * @name setFilter\n   * @method\n   * @param {string} column Name of the column to filter.\n   * @param {string} value The value to filter for.\n   */\n  self.setFilter = function (column, value) {\n    if (column === undefined && value === undefined) {\n      self.columnFilters = {};\n    } else if (column && (value === '' || value === undefined)) {\n      delete self.columnFilters[column];\n    } else {\n      self.columnFilters[column] = value;\n    }\n    self.refresh();\n  };\n  /**\n   * Returns the number of pixels to scroll down to line up with row rowIndex.\n   * @memberof canvasDatagrid\n   * @name findRowScrollTop\n   * @method\n   * @param {number} rowIndex The row index of the row to scroll find.\n   */\n  self.findRowScrollTop = function (rowIndex) {\n    if (self.scrollCache.y[rowIndex] === undefined) {\n      throw new RangeError(\n        `Row index ${rowIndex} out of range: ${self.scrollCache.y.length}.`,\n      );\n    }\n    return self.scrollCache.y[rowIndex];\n  };\n  /**\n   * Returns the number of pixels to scroll to the left to line up with column columnIndex.\n   * @memberof canvasDatagrid\n   * @name findColumnScrollLeft\n   * @method\n   * @param {number} columnIndex The column index of the column to find.\n   */\n  self.findColumnScrollLeft = function (columnIndex) {\n    var i = Math.max(columnIndex - 1, 0);\n    if (self.scrollCache.x[i] === undefined) {\n      throw new Error('Column index out of range.');\n    }\n    return (\n      self.scrollCache.x[i] -\n      self.getColummnWidth(self.orders.columns[columnIndex])\n    );\n  };\n  /**\n   * Scrolls to the cell at columnIndex x, and rowIndex y.  If you define both rowIndex and columnIndex additional calculations can be made to center the cell using the target cell's height and width.  Defining only one rowIndex or only columnIndex will result in simpler calculations.\n   * @memberof canvasDatagrid\n   * @name gotoCell\n   * @method\n   * @param {number} x The column index of the cell to scroll to.\n   * @param {number} y The row index of the cell to scroll to.\n   * @param {number} [offsetX=0] Percentage offset the cell should be from the left edge (not including headers).  The default is 0, meaning the cell will appear at the left edge. Valid values are 0 through 1. 1 = Left, 0 = Right, 0.5 = Center.\n   * @param {number} [offsetY=0] Percentage offset the cell should be from the top edge (not including headers).  The default is 0, meaning the cell will appear at the top edge. Valid values are 0 through 1. 1 = Bottom, 0 = Top, 0.5 = Center.\n   */\n  self.gotoCell = function (x, y, offsetX, offsetY) {\n    var targetX = x === undefined ? undefined : self.findColumnScrollLeft(x),\n      targetY = y === undefined ? undefined : self.findRowScrollTop(y),\n      cell,\n      sbw =\n        self.scrollBox.width -\n        (self.scrollBox.verticalBarVisible ? self.style.scrollBarWidth : 0),\n      sbh =\n        self.scrollBox.height -\n        (self.scrollBox.horizontalBarVisible ? self.style.scrollBarWidth : 0);\n    offsetX = offsetX === undefined ? 0 : offsetX;\n    offsetY = offsetY === undefined ? 0 : offsetY;\n    targetX -= sbw * offsetX;\n    targetY -= sbh * offsetY;\n    if (x !== undefined && y !== undefined) {\n      self.scrollBox.scrollTo(targetX, targetY);\n      requestAnimationFrame(function () {\n        cell = self.getVisibleCellByIndex(x, y);\n        // HACK: just don't offset if the target cell cannot be seen\n        // TODO: offset does not work on very small grids, not sure why\n        if (!cell) {\n          return;\n        }\n        targetX += cell.width * offsetX;\n        targetY += cell.height * offsetY;\n        self.scrollBox.scrollTo(targetX, targetY);\n      });\n    } else if (x !== undefined) {\n      self.scrollBox.scrollLeft = targetX;\n    } else if (y !== undefined) {\n      self.scrollBox.scrollTop = targetY;\n    }\n  };\n  /**\n   * Scrolls the row y.\n   * @memberof canvasDatagrid\n   * @name gotoRow\n   * @method\n   * @param {number} y The row index of the cell to scroll to.\n   */\n  self.gotoRow = function (y) {\n    self.gotoCell(0, y);\n  };\n  /**\n   * Scrolls the cell at cell x, row y into view if it is not already.\n   * @memberof canvasDatagrid\n   * @name scrollIntoView\n   * @method\n   * @param {number} x The column index of the cell to scroll into view.\n   * @param {number} y The row index of the cell to scroll into view.\n   * @param {number} [offsetX=0] Percentage offset the cell should be from the left edge (not including headers).  The default is 0, meaning the cell will appear at the left edge. Valid values are 0 through 1. 1 = Left, 0 = Right, 0.5 = Center.\n   * @param {number} [offsetY=0] Percentage offset the cell should be from the top edge (not including headers).  The default is 0, meaning the cell will appear at the top edge. Valid values are 0 through 1. 1 = Bottom, 0 = Top, 0.5 = Center.\n   */\n  self.scrollIntoView = function (x, y, offsetX, offsetY) {\n    if (\n      self.visibleCells.filter(function (cell) {\n        return (\n          (cell.rowIndex === y || y === undefined) &&\n          (cell.columnIndex === x || x === undefined) &&\n          cell.x > 0 &&\n          cell.y > 0 &&\n          cell.x + cell.width < self.width &&\n          cell.y + cell.height < self.height\n        );\n      }).length === 0\n    ) {\n      self.gotoCell(x, y, offsetX, offsetY);\n    }\n  };\n  /**\n   * Sets the active cell. Requires redrawing.\n   * @memberof canvasDatagrid\n   * @name setActiveCell\n   * @method\n   * @param {number} x The column index of the cell to set active.\n   * @param {number} y The row index of the cell to set active.\n   */\n  self.setActiveCell = function (x, y) {\n    if (x < 0) {\n      x = 0;\n    }\n    if (y < 0) {\n      y = 0;\n    }\n    self.activeCell = {\n      rowIndex: y,\n      columnIndex: x,\n    };\n  };\n  /**\n   * Removes the selection.\n   * @memberof canvasDatagrid\n   * @name selectNone\n   * @param {boolean} dontDraw Suppress the draw method after the selection change.\n   * @method\n   */\n  self.selectNone = function (dontDraw) {\n    self.selections = [];\n    self.dispatchEvent('selectionchanged', {\n      selectedData: self.getSelectedData(),\n      selections: self.selections,\n      selectionBounds: self.selectionBounds,\n    });\n    if (dontDraw) {\n      return;\n    }\n    self.draw();\n  };\n  /**\n   * Selects every visible cell.\n   * @memberof canvasDatagrid\n   * @name selectAll\n   * @param {boolean} dontDraw Suppress the draw method after the selection change.\n   * @method\n   */\n  self.selectAll = function (dontDraw) {\n    self.selectArea({\n      top: 0,\n      left: -1,\n      right: self.getSchema().length - 1,\n      bottom: self.viewData.length - 1,\n    });\n    if (dontDraw) {\n      return;\n    }\n    self.draw();\n  };\n  /**\n   * Returns true if the selected columnIndex is selected on every row.\n   * @memberof canvasDatagrid\n   * @name isColumnSelected\n   * @method\n   * @param {number} columnIndex The column index to check.\n   */\n  self.isColumnSelected = function (columnIndex) {\n    var colIsSelected = true;\n    self.viewData.forEach(function (row, rowIndex) {\n      if (\n        !self.selections[rowIndex] ||\n        self.selections[rowIndex].indexOf(self.orders.columns[columnIndex]) ===\n          -1\n      ) {\n        colIsSelected = false;\n      }\n    });\n    return colIsSelected;\n  };\n  /**\n   * Runs the defined method on each selected cell.\n   * @memberof canvasDatagrid\n   * @name forEachSelectedCell\n   * @method\n   * @param {number} fn The function to execute.  The signature of the function is: (data, rowIndex, columnName).\n   * @param {number} expandToRow When true the data in the array is expanded to the entire row.\n   */\n  self.forEachSelectedCell = function (fn, expandToRow) {\n    var d = [],\n      s = expandToRow ? self.getSchema() : self.getVisibleSchema(),\n      l = self.viewData.length;\n    self.selections.forEach(function (row, index) {\n      if (index === l) {\n        return;\n      }\n      if (row.length === 0) {\n        d[index] = null;\n        return;\n      }\n      d[index] = {};\n      row.forEach(function (col) {\n        if (col === -1 || !s[col]) {\n          return;\n        }\n        fn(self.viewData, index, s[col].name);\n      });\n    });\n  };\n  /**\n   * Selects a column.\n   * @memberof canvasDatagrid\n   * @name selectColumn\n   * @method\n   * @param {number} columnIndex The column index to select.\n   * @param {boolean} toggleSelectMode When true, behaves as if you were holding control/command when you clicked the column.\n   * @param {boolean} shift When true, behaves as if you were holding shift when you clicked the column.\n   * @param {boolean} supressSelectionchangedEvent When true, prevents the selectionchanged event from firing.\n   */\n  self.selectColumn = function (columnIndex, ctrl, shift, supressEvent) {\n    var s, e, x;\n    function addCol(i) {\n      self.viewData.forEach(function (row, rowIndex) {\n        self.selections[rowIndex] = self.selections[rowIndex] || [];\n        if (self.selections[rowIndex].indexOf(i) === -1) {\n          self.selections[rowIndex].push(i);\n        }\n      });\n    }\n    function removeCol(i) {\n      self.viewData.forEach(function (row, rowIndex) {\n        self.selections[rowIndex] = self.selections[rowIndex] || [];\n        if (self.selections[rowIndex].indexOf(i) !== -1) {\n          self.selections[rowIndex].splice(\n            self.selections[rowIndex].indexOf(i),\n            1,\n          );\n        }\n      });\n    }\n    if (shift) {\n      if (!self.activeCell) {\n        return;\n      }\n      s = Math.min(self.activeCell.columnIndex, columnIndex);\n      e = Math.max(self.activeCell.columnIndex, columnIndex);\n      for (x = s; e > x; x += 1) {\n        addCol(x);\n      }\n    }\n    if (!ctrl && !shift) {\n      self.selections = [];\n      self.activeCell.columnIndex = columnIndex;\n      self.activeCell.rowIndex = self.scrollIndexTop;\n    }\n    if (ctrl && self.isColumnSelected(columnIndex)) {\n      removeCol(columnIndex);\n    } else {\n      addCol(columnIndex);\n    }\n    if (supressEvent) {\n      return;\n    }\n    self.dispatchEvent('selectionchanged', {\n      selectedData: self.getSelectedData(),\n      selections: self.selections,\n      selectionBounds: self.getSelectionBounds(),\n    });\n  };\n  /**\n   * Selects a row.\n   * @memberof canvasDatagrid\n   * @name selectRow\n   * @method\n   * @param {number} rowIndex The row index to select.\n   * @param {boolean} ctrl When true, behaves as if you were holding control/command when you clicked the row.\n   * @param {boolean} shift When true, behaves as if you were holding shift when you clicked the row.\n   * @param {boolean} supressSelectionchangedEvent When true, prevents the selectionchanged event from firing.\n   */\n  self.selectRow = function (rowIndex, ctrl, shift, supressEvent) {\n    var x,\n      st,\n      en,\n      s = self.getVisibleSchema();\n    function de() {\n      if (supressEvent) {\n        return;\n      }\n      self.dispatchEvent('selectionchanged', {\n        selectedData: self.getSelectedData(),\n        selections: self.selections,\n        selectionBounds: self.selectionBounds,\n      });\n    }\n    function addRow(ri) {\n      self.selections[ri] = [];\n      self.selections[ri].push(-1);\n      s.forEach(function (col, index) {\n        self.selections[ri].push(self.orders.columns.indexOf(col.index));\n      });\n    }\n    if (self.dragAddToSelection === false || self.dragObject === undefined) {\n      if (\n        self.selections[rowIndex] &&\n        self.selections[rowIndex].length - 1 === s.length\n      ) {\n        if (ctrl) {\n          self.selections[rowIndex] = [];\n          de();\n          return;\n        }\n      }\n    }\n    if (self.dragAddToSelection === true || self.dragObject === undefined) {\n      if (shift && self.dragObject === undefined) {\n        if (!self.activeCell) {\n          return;\n        }\n        st = Math.min(self.activeCell.rowIndex, rowIndex);\n        en = Math.max(self.activeCell.rowIndex, rowIndex);\n        for (x = st; en >= x; x += 1) {\n          addRow(x);\n        }\n      } else {\n        addRow(rowIndex);\n      }\n    }\n    de();\n  };\n  /**\n   * Collapse a tree grid by row index.\n   * @memberof canvasDatagrid\n   * @name collapseTree\n   * @method\n   * @param {number} index The index of the row to collapse.\n   */\n  self.collapseTree = function (rowIndex) {\n    self.dispatchEvent('collapsetree', {\n      childGrid: self.childGrids[rowIndex],\n      data: self.viewData[rowIndex],\n      rowIndex: rowIndex,\n    });\n    self.openChildren[rowIndex].blur();\n    self.openChildren[rowIndex].dispose();\n    delete self.openChildren[rowIndex];\n    delete self.sizes.trees[rowIndex];\n    delete self.childGrids[rowIndex];\n    self.dispatchEvent('resizerow', {\n      cellHeight: self.style.cellHeight,\n    });\n    self.resize(true);\n    self.draw(true);\n  };\n  /**\n   * Expands a tree grid by row index.\n   * @memberof canvasDatagrid\n   * @name expandTree\n   * @method\n   * @param {number} index The index of the row to expand.\n   */\n  self.expandTree = function (rowIndex) {\n    var trArgs = self.args.treeGridAttributes || {},\n      columnHeaderCellHeight = self.getColumnHeaderCellHeight(),\n      rowHeaderCellWidth =\n        self.sizes.columns.cornerCell || self.style.rowHeaderCellWidth,\n      h = self.sizes.trees[rowIndex] || self.style.treeGridHeight,\n      treeGrid;\n    if (!self.childGrids[rowIndex]) {\n      trArgs.debug = self.attributes.debug;\n      trArgs.name = self.attributes.saveAppearance\n        ? self.attributes.name + 'tree' + rowIndex\n        : undefined;\n      trArgs.style = trArgs.style || self.style;\n      trArgs.parentNode = {\n        parentGrid: self.intf,\n        nodeType: 'canvas-datagrid-tree',\n        offsetHeight: h,\n        offsetWidth: self.width - rowHeaderCellWidth,\n        header: { width: self.width - rowHeaderCellWidth },\n        offsetLeft: rowHeaderCellWidth,\n        offsetTop: columnHeaderCellHeight,\n        offsetParent: self.intf.parentNode,\n        parentNode: self.intf.parentNode,\n        style: 'tree',\n        data: self.viewData[rowIndex],\n      };\n      treeGrid = self.createGrid(trArgs);\n      self.childGrids[rowIndex] = treeGrid;\n    }\n    treeGrid = self.childGrids[rowIndex];\n    treeGrid.visible = true;\n    self.dispatchEvent('expandtree', {\n      treeGrid: treeGrid,\n      data: self.viewData[rowIndex],\n      rowIndex: rowIndex,\n    });\n    self.openChildren[rowIndex] = treeGrid;\n    self.sizes.trees[rowIndex] = h;\n    self.dispatchEvent('resizerow', { height: self.style.cellHeight });\n    self.resize(true);\n  };\n  /**\n   * Toggles tree grid open and close by row index.\n   * @memberof canvasDatagrid\n   * @name toggleTree\n   * @method\n   * @param {number} index The index of the row to toggle.\n   */\n  self.toggleTree = function (rowIndex) {\n    var i = self.openChildren[rowIndex];\n    if (i) {\n      return self.collapseTree(rowIndex);\n    }\n    self.expandTree(rowIndex);\n  };\n  /**\n   * Returns a header from the schema by name.\n   * @memberof canvasDatagrid\n   * @name getHeaderByName\n   * @tutorial schema\n   * @method\n   * @returns {header} header with the selected name, or undefined.\n   * @param {string} name The name of the column to resize.\n   */\n  self.getHeaderByName = function (name) {\n    var x,\n      i = self.getSchema();\n    for (x = 0; x < i.length; x += 1) {\n      if (i[x].name === name) {\n        return i[x];\n      }\n    }\n  };\n  /**\n   * Resizes a column to fit the longest value in the column. Call without a value to resize all columns.\n   * Warning, can be slow on very large record sets (1m records ~3-5 seconds on an i7).\n   * @memberof canvasDatagrid\n   * @name fitColumnToValues\n   * @method\n   * @param {string} name The name of the column to resize.\n   */\n  self.fitColumnToValues = function (name, internal) {\n    if (!self.canvas) {\n      return;\n    }\n    self.sizes.columns[\n      name === 'cornerCell' ? -1 : self.getHeaderByName(name).index\n    ] = Math.max(self.findColumnMaxTextLength(name), self.style.minColumnWidth);\n    if (!internal) {\n      self.resize();\n      self.draw(true);\n    }\n  };\n  /**\n   * Checks if a cell is currently visible.\n   * @memberof canvasDatagrid\n   * @name isCellVisible\n   * @overload\n   * @method\n   * @returns {boolean} when true, the cell is visible, when false the cell is not currently drawn.\n   * @param {number} columnIndex The column index of the cell to check.\n   * @param {number} rowIndex The row index of the cell to check.\n   */\n  self.isCellVisible = function (cell, rowIndex) {\n    // overload\n    if (rowIndex !== undefined) {\n      return (\n        self.visibleCells.filter(function (c) {\n          return c.columnIndex === cell && c.rowIndex === rowIndex;\n        }).length > 0\n      );\n    }\n    var x,\n      l = self.visibleCells.length;\n    for (x = 0; x < l; x += 1) {\n      if (\n        cell.x === self.visibleCells[x].x &&\n        cell.y === self.visibleCells[x].y\n      ) {\n        return true;\n      }\n    }\n    return false;\n  };\n  /**\n   * Sets the order of the data.\n   * @memberof canvasDatagrid\n   * @name order\n   * @method\n   * @param {number} columnName Name of the column to be sorted.\n   * @param {string} direction `asc` for ascending or `desc` for descending.\n   * @param {function} [sortFunction] When defined, override the default sorting method defined in the column's schema and use this one.\n   * @param {bool} [dontSetStorageData] Don't store this setting for future use.\n   */\n  self.order = function (\n    columnName,\n    direction,\n    sortFunction,\n    dontSetStorageData,\n  ) {\n    var f,\n      c = self.getSchema().filter(function (col) {\n        return col.name === columnName;\n      });\n    if (\n      self.dispatchEvent('beforesortcolumn', {\n        name: columnName,\n        direction: direction,\n      })\n    ) {\n      return;\n    }\n    self.orderBy = columnName;\n    self.orderDirection = direction;\n    if (!self.viewData || self.viewData.length === 0) {\n      return;\n    }\n    if (c.length === 0) {\n      throw new Error('Cannot sort.  No such column name');\n    }\n    f = sortFunction || c[0].sorter || self.sorters[c[0].type];\n    if (!f && c[0].type !== undefined) {\n      console.warn(\n        'Cannot sort type \"%s\" falling back to string sort.',\n        c[0].type,\n      );\n    }\n    self.orderings.add(\n      columnName,\n      direction,\n      typeof f === 'function' ? f : self.sorters.string,\n    );\n    self.refresh();\n    self.dispatchEvent('sortcolumn', {\n      name: columnName,\n      direction: direction,\n    });\n\n    if (dontSetStorageData) {\n      return;\n    }\n    self.setStorageData();\n  };\n  self.isInGrid = function (e) {\n    if (e.x < 0 || e.x > self.width || e.y < 0 || e.y > self.height) {\n      return false;\n    }\n    return true;\n  };\n  /**\n   * Moves the current selection relative to the its current position.  Note: this method does not move the selected data, just the selection itself.\n   * @memberof canvasDatagrid\n   * @name moveSelection\n   * @method\n   * @param {number} offsetX The number of columns to offset the selection.\n   * @param {number} offsetY The number of rows to offset the selection.\n   */\n  self.moveSelection = function (offsetX, offsetY) {\n    var sel = [];\n    self.selections.forEach(function (row, rowIndex) {\n      sel[rowIndex + offsetY] = [];\n      row.forEach(function (colIndex) {\n        sel[rowIndex + offsetY].push(colIndex + offsetX);\n      });\n    });\n    self.selections = sel;\n  };\n  /**\n   * Moves data in the provided selection to another position in the grid.  Moving data off the edge of the schema (columns/x) will truncate data.\n   * @memberof canvasDatagrid\n   * @name moveTo\n   * @method\n   * @param {array} sel 2D array representing selected rows and columns.  `canvasDatagrid.selections` is in this format and can be used here.\n   * @param {number} x The column index to start inserting the selection at.\n   * @param {number} y The row index to start inserting the selection at.\n   */\n  self.moveTo = function (sel, x, y) {\n    var selectedData = self.getSelectedData(),\n      visibleSchema = self.getVisibleSchema(),\n      selectionLength = sel.length,\n      xi,\n      maxRowLength = -Infinity,\n      minXi = Infinity,\n      yi = y - 1;\n\n    sel.forEach(function (row, rowIndex) {\n      if (rowIndex === selectionLength) {\n        return;\n      }\n      if (row.length === 0) {\n        return;\n      }\n      minXi = Math.min(self.getVisibleColumnIndexOf(x), minXi);\n      maxRowLength = Math.max(maxRowLength, row.length);\n      row.forEach(function (colIndex) {\n        // intentional redef of colIndex\n        colIndex = self.getVisibleColumnIndexOf(colIndex);\n        if (!visibleSchema[colIndex]) {\n          return;\n        }\n        // TODO:\n        if (!self.data[rowIndex]) {\n          self.data[rowIndex] = {};\n        }\n        // TODO:\n        self.data[rowIndex][visibleSchema[colIndex].name] = null;\n      });\n    });\n\n    sel.forEach(function (row, index) {\n      var lastSourceIndex;\n      yi += 1;\n      xi = self.getVisibleColumnIndexOf(x);\n      row.forEach(function (colIndex, cidx) {\n        colIndex = self.getVisibleColumnIndexOf(colIndex);\n        if (cidx > 0) {\n          // this confusing bit of nonsense figures out\n          // if the selection has skipped cells\n          xi += colIndex - lastSourceIndex;\n        }\n        lastSourceIndex = colIndex;\n        if (\n          colIndex === -1 ||\n          !visibleSchema[xi] ||\n          !visibleSchema[colIndex] ||\n          // TODO:\n          self.data.length - 1 < yi ||\n          yi < 0\n        ) {\n          return;\n        }\n        // TODO:\n        if (!self.data[yi]) {\n          self.data[yi] = {};\n        }\n        // TODO:\n        self.data[yi][visibleSchema[xi].name] =\n          selectedData[index][visibleSchema[colIndex].name];\n      });\n    });\n  };\n  /**\n   * Checks if a given column is visible.\n   * @memberof canvasDatagrid\n   * @name isColumnVisible\n   * @method\n   * @returns {boolean} When true, the column is visible.\n   * @param {number} columnIndex Column index.\n   */\n  self.isColumnVisible = function (columnIndex) {\n    return (\n      self.visibleCells.filter(function (c) {\n        return c.columnIndex === columnIndex;\n      }).length > 0\n    );\n  };\n  /**\n   * Checks if a given row is visible.\n   * @memberof canvasDatagrid\n   * @name isRowVisible\n   * @method\n   * @returns {boolean} When true, the row is visible.\n   * @param {number} rowIndex Row index.\n   */\n  self.isRowVisible = function (rowIndex) {\n    return (\n      self.visibleCells.filter(function (c) {\n        return c.rowIndex === rowIndex;\n      }).length > 0\n    );\n  };\n  /**\n   * Gets the cell at columnIndex and rowIndex.\n   * @memberof canvasDatagrid\n   * @name getVisibleCellByIndex\n   * @method\n   * @returns {cell} cell at the selected location.\n   * @param {number} x Column index.\n   * @param {number} y Row index.\n   */\n  self.getVisibleCellByIndex = function (x, y) {\n    return self.visibleCells.filter(function (c) {\n      return c.columnIndex === x && c.rowIndex === y;\n    })[0];\n  };\n  /**\n   * Gets the cell at grid pixel coordinate x and y.  Author's note.  This function ties drawing and events together.  This is a very complex function and is core to the component.\n   * @memberof canvasDatagrid\n   * @name getCellAt\n   * @method\n   * @returns {cell} cell at the selected location.\n   * @param {number} x Number of pixels from the left.\n   * @param {number} y Number of pixels from the top.\n   */\n  self.getCellAt = function (x, y, useTouchScrollZones) {\n    function getBorder(entitiy) {\n      if (\n        entitiy.x + entitiy.width - self.attributes.borderResizeZone * 0.4 <\n          x &&\n        entitiy.x + entitiy.width + self.attributes.borderResizeZone * 0.6 > x\n      ) {\n        return 'r';\n      }\n      if (\n        entitiy.x - self.attributes.borderResizeZone * 0.4 < x &&\n        entitiy.x + self.attributes.borderResizeZone * 0.6 > x\n      ) {\n        return 'l';\n      }\n      if (\n        entitiy.y + entitiy.height - self.attributes.borderResizeZone * 0.4 <\n          y &&\n        entitiy.y + entitiy.height + self.attributes.borderResizeZone * 0.6 > y\n      ) {\n        return 'b';\n      }\n      if (\n        entitiy.y - self.attributes.borderResizeZone * 0.4 < y &&\n        entitiy.y + self.attributes.borderResizeZone * 0.6 > y\n      ) {\n        return 't';\n      }\n    }\n    if (!self.visibleCells) {\n      return;\n    }\n    var border,\n      tsz = useTouchScrollZones ? self.attributes.touchScrollZone : 0,\n      moveMode = self.attributes.borderDragBehavior === 'move',\n      i,\n      l = self.visibleCells.length,\n      moveBorder,\n      xBorderBehavior = moveMode ? self.cursorGrab : 'ew-resize',\n      yBorderBehavior = moveMode ? self.cursorGrab : 'ns-resize',\n      cell,\n      entitiy;\n    if (!self.visibleCells || !self.visibleCells.length) {\n      return;\n    }\n    self.hasFocus = true;\n    if (!(y < self.height && y > 0 && x < self.width && x > 0)) {\n      self.hasFocus = false;\n      return {\n        dragContext: 'inherit',\n        context: 'inherit',\n      };\n    }\n    for (i = 0; i < l; i += 1) {\n      cell = self.visibleCells[i];\n      // interactive dimensions of the cell.  used for touch \"over size\" zones\n      entitiy = {\n        x: cell.x,\n        y: cell.y,\n        height: cell.height,\n        width: cell.width,\n      };\n      if (\n        useTouchScrollZones &&\n        /(vertical|horizontal)-scroll-/.test(cell.style)\n      ) {\n        entitiy.x -= tsz;\n        entitiy.y -= tsz;\n        entitiy.height += tsz;\n        entitiy.width += tsz;\n      }\n      if (\n        entitiy.x - self.style.cellBorderWidth < x &&\n        entitiy.x + entitiy.width + self.style.cellBorderWidth > x &&\n        entitiy.y - self.style.cellBorderWidth < y &&\n        entitiy.y + entitiy.height + self.style.cellBorderWidth > y\n      ) {\n        if (/frozen-row-marker/.test(cell.style)) {\n          cell.dragContext = cell.style;\n          cell.context = 'row-resize';\n          return cell;\n        }\n        if (/frozen-column-marker/.test(cell.style)) {\n          cell.dragContext = cell.style;\n          cell.context = 'col-resize';\n          return cell;\n        }\n        if (/selection-handle-/.test(cell.style)) {\n          cell.dragContext = cell.style;\n          cell.context = 'crosshair';\n          return cell;\n        }\n        if (/vertical-scroll-(bar|box)/.test(cell.style)) {\n          cell.dragContext = 'vertical-scroll-box';\n          cell.context = 'vertical-scroll-box';\n          cell.isScrollBar = true;\n          cell.isVerticalScrollBar = true;\n          if (y > self.scrollBox.box.v.y + self.scrollBox.scrollBoxHeight) {\n            cell.dragContext = 'vertical-scroll-bottom';\n            cell.context = 'vertical-scroll-bottom';\n          } else if (y < self.scrollBox.box.v.y) {\n            cell.dragContext = 'vertical-scroll-top';\n            cell.context = 'vertical-scroll-top';\n          }\n          self.cursor = 'default';\n          return cell;\n        }\n        if (/horizontal-scroll-(bar|box)/.test(cell.style)) {\n          cell.dragContext = 'horizontal-scroll-box';\n          cell.context = 'horizontal-scroll-box';\n          cell.isScrollBar = true;\n          cell.isHorizontalScrollBar = true;\n          if (x > self.scrollBox.box.h.x + self.scrollBox.scrollBoxWidth) {\n            cell.dragContext = 'horizontal-scroll-right';\n            cell.context = 'horizontal-scroll-right';\n          } else if (x < self.scrollBox.box.h.x) {\n            cell.dragContext = 'horizontal-scroll-left';\n            cell.context = 'horizontal-scroll-left';\n          }\n          self.cursor = 'default';\n          return cell;\n        }\n        border = getBorder(entitiy);\n        // check if the border of this cell is the border of the selection and if so show move cursor in move mode\n        moveBorder =\n          moveMode &&\n          cell.selectionBorder &&\n          cell.selectionBorder.indexOf(border) !== -1;\n        if (\n          ['l', 'r'].indexOf(border) !== -1 &&\n          (self.attributes.allowColumnResize || moveBorder) &&\n          ((self.attributes.allowColumnResizeFromCell && cell.isNormal) ||\n            !cell.isNormal ||\n            moveBorder) &&\n          ((self.attributes.allowRowHeaderResize &&\n            (cell.isRowHeader || cell.isCorner)) ||\n            !(cell.isRowHeader && cell.isCorner))\n        ) {\n          if (\n            (cell.isColumnHeader ||\n              cell.isCorner ||\n              (self.attributes.allowColumnResizeFromCell && cell.isNormal)) &&\n            border === 'r'\n          ) {\n            cell.context = 'ew-resize';\n            cell.dragContext = 'ew-resize';\n            return cell;\n          }\n          if (!(cell.isColumnHeader || cell.isCorner) && moveBorder) {\n            cell.context = xBorderBehavior;\n            cell.dragContext = border + '-move';\n            return cell;\n          }\n        }\n        if (\n          ['t', 'b'].indexOf(border) !== -1 &&\n          cell.rowIndex > -1 &&\n          (self.attributes.allowRowResize || moveBorder) &&\n          ((self.attributes.allowRowResizeFromCell && cell.isNormal) ||\n            !cell.isNormal ||\n            moveBorder) &&\n          !cell.isColumnHeader\n        ) {\n          if (\n            (cell.isRowHeader ||\n              cell.isCorner ||\n              (self.attributes.allowRowResizeFromCell && cell.isNormal)) &&\n            border === 'b'\n          ) {\n            cell.context = 'ns-resize';\n            cell.dragContext = 'ns-resize';\n            return cell;\n          }\n          if (!(cell.isRowHeader || cell.isCorner) && moveBorder) {\n            cell.context = yBorderBehavior;\n            cell.dragContext = border + '-move';\n            return cell;\n          }\n        }\n        if (cell.style === 'columnHeaderCell') {\n          cell.context = 'cell';\n          cell.dragContext = 'column-reorder';\n          return cell;\n        }\n        if (cell.style === 'rowHeaderCell') {\n          if (\n            self.attributes.rowGrabZoneSize +\n              (cell.y - self.style.cellBorderWidth) <\n              y ||\n            !self.attributes.allowRowReordering\n          ) {\n            cell.dragContext = 'cell';\n            cell.context = 'cell';\n          } else {\n            cell.context = self.cursorGrab;\n            cell.dragContext = 'row-reorder';\n          }\n          return cell;\n        }\n        if (cell.isGrid) {\n          self.hasFocus = false;\n          cell.dragContext = 'cell-grid';\n          cell.context = 'cell-grid';\n          return cell;\n        }\n        if (cell.style === 'tree-grid') {\n          self.hasFocus = false;\n          cell.dragContext = 'tree';\n          cell.context = 'tree';\n          return cell;\n        }\n        cell.dragContext = 'cell';\n        cell.context = 'cell';\n        return cell;\n      }\n    }\n    self.hasFocus = true;\n    self.cursor = 'default';\n    return {\n      dragContext: 'background',\n      context: 'background',\n      style: 'background',\n      isBackground: true,\n    };\n  };\n  /**\n   * Gets the bounds of current selection.\n   * @returns {rect} selection.\n   * @memberof canvasDatagrid\n   * @name getSelectionBounds\n   * @method\n   */\n  self.getSelectionBounds = function () {\n    var low = { x: Infinity, y: Infinity },\n      high = { x: -Infinity, y: -Infinity };\n    self.selections.forEach(function (row, rowIndex) {\n      var maxCol, minCol;\n      low.y = rowIndex < low.y ? rowIndex : low.y;\n      high.y = rowIndex > high.y ? rowIndex : high.y;\n      maxCol = Math.max.apply(null, row);\n      minCol = Math.min.apply(null, row);\n      low.x = minCol < low.x ? minCol : low.x;\n      high.x = maxCol > high.x ? maxCol : high.x;\n    });\n    return {\n      top: low.y,\n      left: low.x,\n      bottom: high.y,\n      right: high.x,\n    };\n  };\n  /**\n   * Returns an auto generated schema based on data structure.\n   * @memberof canvasDatagrid\n   * @name getSchemaFromData\n   * @method\n   * @tutorial schema\n   * @returns {schema} schema A schema based on the first item in the data array.\n   */\n  self.getSchemaFromData = function (d) {\n    d = d || self.originalData;\n    return Object.keys(d[0] || { ' ': '' }).map(function mapEachSchemaColumn(\n      key,\n      index,\n    ) {\n      var type = self.getBestGuessDataType(key, d),\n        i = {\n          name: key,\n          title: isNaN(parseInt(key, 10))\n            ? key\n            : self.integerToAlpha(key).toUpperCase(),\n          index: index,\n          columnIndex: index,\n          type: type,\n          filter: self.filter(type),\n        };\n      if (\n        self.storedSettings &&\n        self.storedSettings.visibility &&\n        self.storedSettings.visibility[i.name] !== undefined\n      ) {\n        i.hidden = !self.storedSettings.visibility[i.name];\n      }\n      return i;\n    });\n  };\n  /**\n   * Clears the change log grid.changes that keeps track of changes to the data set.\n   * This does not undo changes or alter data it is simply a convince array to keep\n   * track of changes made to the data since last this method was called.\n   * @memberof canvasDatagrid\n   * @name clearChangeLog\n   * @method\n   */\n  self.clearChangeLog = function () {\n    self.changes = [];\n  };\n  /**\n   * Selects an area of the grid.\n   * @memberof canvasDatagrid\n   * @name selectArea\n   * @method\n   * @param {rect} bounds A rect object representing the selected values.\n   */\n  self.selectArea = function (bounds, ctrl) {\n    self.selectionBounds = bounds || self.selectionBounds;\n    var ev,\n      x,\n      y,\n      s = self.getSchema();\n    if (!ctrl) {\n      self.selections = [];\n    }\n    if (\n      self.selectionBounds.top < -1 ||\n      self.selectionBounds.bottom > self.viewData.length ||\n      self.selectionBounds.left < -1 ||\n      self.selectionBounds.right > s.length\n    ) {\n      throw new Error('Impossible selection area');\n    }\n    for (\n      x = self.selectionBounds.top;\n      x <= self.selectionBounds.bottom;\n      x += 1\n    ) {\n      self.selections[x] = [];\n      for (\n        y = self.selectionBounds.left;\n        y <= self.selectionBounds.right;\n        y += 1\n      ) {\n        if (self.selections[x].indexOf(y) === -1) {\n          self.selections[x].push(y);\n        }\n      }\n    }\n    ev = {\n      selections: self.selections,\n      selectionBounds: self.selectionBounds,\n    };\n    Object.defineProperty(ev, 'selectedData', {\n      get: function () {\n        return self.getSelectedData();\n      },\n    });\n    self.dispatchEvent('selectionchanged', ev);\n  };\n  /**\n   * Returns the maximum text width for a given column by column name.\n   * @memberof canvasDatagrid\n   * @name findColumnMaxTextLength\n   * @method\n   * @returns {number} The number of pixels wide the maximum width value in the selected column.\n   * @param {string} name The name of the column to calculate the value's width of.\n   */\n  self.findColumnMaxTextLength = function (name) {\n    var m = -Infinity;\n    if (name === 'cornerCell') {\n      self.ctx.font = self.style.rowHeaderCellFont;\n      return (\n        self.ctx.measureText(\n          (\n            self.viewData.length + (self.attributes.showNewRow ? 1 : 0)\n          ).toString(),\n        ).width +\n        self.style.autosizePadding +\n        self.style.autosizeHeaderCellPadding +\n        self.style.rowHeaderCellPaddingRight +\n        self.style.rowHeaderCellPaddingLeft +\n        (self.attributes.tree\n          ? self.style.treeArrowWidth +\n            self.style.treeArrowMarginLeft +\n            self.style.treeArrowMarginRight\n          : 0)\n      );\n    }\n    var formatter = null;\n    self.getSchema().forEach(function (col) {\n      if (col.name !== name) {\n        return;\n      }\n      self.ctx.font = self.style.columnHeaderCellFont;\n      var t =\n        self.ctx.measureText(col.title || col.name).width +\n        self.style.headerCellPaddingRight +\n        self.style.headerCellPaddingLeft;\n      m = t > m ? t : m;\n      formatter = self.formatters[col.type];\n    });\n    self.viewData.forEach(function (row) {\n      var text = row[name];\n      if (formatter) {\n        text = formatter({ cell: { value: text } });\n      }\n      self.ctx.font = self.style.cellFont;\n      var t =\n        self.ctx.measureText(text).width +\n        self.style.cellPaddingRight +\n        self.style.cellPaddingLeft +\n        self.style.cellAutoResizePadding;\n      m = t > m ? t : m;\n    });\n    return m;\n  };\n  /**\n   * Gets the total width of all header columns.\n   * @memberof canvasDatagrid\n   * @name getHeaderWidth\n   * @method\n   */\n  self.getHeaderWidth = function () {\n    return self.getVisibleSchema().reduce(function (total, header) {\n      return total + parseInt(header.width || self.style.cellWidth, 10);\n    }, 0);\n  };\n  /**\n   * Gets the height of a row by index.\n   * @memberof canvasDatagrid\n   * @name getRowHeight\n   * @method\n   * @param {number} rowIndex The row index to lookup.\n   */\n  self.getRowHeight = function (rowIndex) {\n    return (self.sizes.rows[rowIndex] || self.style.cellHeight) * self.scale;\n  };\n  /**\n   * Gets the width of a column by index.\n   * @memberof canvasDatagrid\n   * @name getColummnWidth\n   * @method\n   * @param {number} columnIndex The column index to lookup.\n   */\n  self.getColummnWidth = function (columnIndex) {\n    return (\n      (self.sizes.columns[columnIndex] ||\n        self.getSchema()[columnIndex].width ||\n        self.style.cellWidth) * self.scale\n    );\n  };\n  self.formatters.string = function cellFormatterString(e) {\n    return e.cell.value !== undefined ? e.cell.value : '';\n  };\n  self.formatters.rowHeaderCell = self.formatters.string;\n  self.formatters.headerCell = self.formatters.string;\n  self.formatters.number = self.formatters.string;\n  self.formatters.int = self.formatters.string;\n  self.formatters.html = self.formatters.string;\n  self.sorters.string = function (columnName, direction) {\n    var asc = direction === 'asc';\n    return function (a, b) {\n      if (a[columnName] === undefined || a[columnName] === null) {\n        return 1;\n      }\n      if (b[columnName] === undefined || b[columnName] === null) {\n        return 0;\n      }\n      if (asc) {\n        if (!a[columnName].localeCompare) {\n          return 1;\n        }\n        return a[columnName].localeCompare(b[columnName]);\n      }\n      if (!b[columnName].localeCompare) {\n        return 1;\n      }\n      return b[columnName].localeCompare(a[columnName]);\n    };\n  };\n  self.sorters.number = function (columnName, direction) {\n    var asc = direction === 'asc';\n    return function (a, b) {\n      if (asc) {\n        return a[columnName] - b[columnName];\n      }\n      return b[columnName] - a[columnName];\n    };\n  };\n  self.sorters.date = function (columnName, direction) {\n    var asc = direction === 'asc';\n    return function (a, b) {\n      if (asc) {\n        return (\n          new Date(a[columnName]).getTime() - new Date(b[columnName]).getTime()\n        );\n      }\n      return (\n        new Date(b[columnName]).getTime() - new Date(a[columnName]).getTime()\n      );\n    };\n  };\n}\n","/*jslint browser: true, unparam: true, todo: true, evil: true*/\n/*globals Reflect: false, HTMLElement: true, define: true, MutationObserver: false, requestAnimationFrame: false, performance: false, btoa: false*/\n'use strict';\n\nimport component from './component';\nimport defaults from './defaults';\nimport draw from './draw';\nimport events from './events';\nimport touch from './touch';\nimport intf from './intf';\nimport contextMenu from './contextMenu';\nimport dom from './dom';\nimport publicMethods from './publicMethods';\n\nvar webComponent = component();\n\nvar modules = [\n  defaults,\n  draw,\n  events,\n  touch,\n  intf,\n  contextMenu,\n  dom,\n  publicMethods,\n];\n\nfunction Grid(args) {\n  args = args || {};\n  var self = {};\n  self.isComponent = args.component === undefined;\n  self.isChildGrid =\n    args.parentNode &&\n    /canvas-datagrid-(cell|tree)/.test(args.parentNode.nodeType);\n  if (self.isChildGrid) {\n    self.intf = {};\n  } else {\n    self.intf = self.isComponent\n      ? eval('Reflect.construct(HTMLElement, [], new.target)')\n      : document.createElement('canvas');\n  }\n  self.args = args;\n  self.intf.args = args;\n  self.applyComponentStyle = webComponent.applyComponentStyle;\n  self.hyphenateProperty = webComponent.hyphenateProperty;\n  self.dehyphenateProperty = webComponent.dehyphenateProperty;\n  self.createGrid = function grid(args) {\n    args.component = false;\n    return new Grid(args);\n  };\n\n  modules.forEach(function (module) {\n    module(self);\n  });\n\n  if (self.isChildGrid) {\n    self.shadowRoot = args.parentNode.shadowRoot;\n    self.parentNode = args.parentNode;\n  } else {\n    self.shadowRoot = self.intf.attachShadow({ mode: 'open' });\n    self.parentNode = self.shadowRoot;\n  }\n  self.init();\n  return self.intf;\n}\nif (window.HTMLElement) {\n  Grid.prototype = Object.create(window.HTMLElement.prototype);\n}\n// export web component\nif (window.customElements) {\n  Grid.observedAttributes = webComponent.getObservableAttributes();\n  Grid.prototype.disconnectedCallback = webComponent.disconnectedCallback;\n  Grid.prototype.attributeChangedCallback =\n    webComponent.attributeChangedCallback;\n  Grid.prototype.connectedCallback = webComponent.connectedCallback;\n  Grid.prototype.adoptedCallback = webComponent.adoptedCallback;\n  window.customElements.define('canvas-datagrid', Grid);\n}\n\n// export global\nif (\n  window &&\n  !window.canvasDatagrid &&\n  !window.require &&\n  // Present to exclude global declarations from ES Module bundles\n  !window.EXCLUDE_GLOBAL\n) {\n  window.canvasDatagrid = function (args) {\n    return new Grid(args);\n  };\n}\n\n// export amd loader\nexport default function canvasDatagrid(args) {\n  args = args || {};\n  var i,\n    tKeys = [\n      'style',\n      'formatters',\n      'sorters',\n      'filters',\n      'treeGridAttributes',\n      'cellGridAttributes',\n      'data',\n      'schema',\n    ];\n  if (window.customElements) {\n    i = document.createElement('canvas-datagrid');\n    Object.keys(args).forEach(function (argKey) {\n      // set data and parentNode after everything else\n      if (argKey === 'data') {\n        return;\n      }\n      if (argKey === 'parentNode') {\n        return;\n      }\n      // top level keys in args\n      if (tKeys.indexOf(argKey) !== -1) {\n        tKeys.forEach(function (tKey) {\n          if (args[tKey] === undefined || tKey !== argKey) {\n            return;\n          }\n          if (['formatters', 'sorters', 'filters'].indexOf(argKey) !== -1) {\n            if (typeof args[tKey] === 'object' && args[tKey] !== null) {\n              Object.keys(args[tKey]).forEach(function (sKey) {\n                i[tKey][sKey] = args[tKey][sKey];\n              });\n            }\n          } else {\n            i[tKey] = args[tKey];\n          }\n        });\n        return;\n      }\n      // all others are attribute level keys\n      i.attributes[argKey] = args[argKey];\n    });\n    if (args.data) {\n      i.data = args.data;\n    }\n    // add to the dom very last to avoid redraws\n    if (args.parentNode) {\n      args.parentNode.appendChild(i);\n    }\n    return i;\n  }\n  args.component = false;\n  i = new Grid(args);\n  if (args.parentNode && args.parentNode.appendChild) {\n    args.parentNode.appendChild(i);\n  }\n  return i;\n}\n"],"names":["self","defaults","attributes","styles","typeMap","component","dehyphenateProperty","prop","replace","nextLetterCap","p","Array","prototype","forEach","call","char","toUpperCase","hyphenateProperty","cust","toLowerCase","applyComponentStyle","supressChangeAndDrawEvents","intf","isComponent","cStyle","window","getComputedStyle","tagName","canvas","defs","computedStyle","def","val","getPropertyValue","setStyleProperty","dispatchEvent","requestAnimationFrame","resize","style","data","strData","JSON","parse","e","Error","schema","strSchema","number","strNum","n","parseInt","isNaN","boolean","strBool","test","string","str","getObservableAttributes","i","attrs","attr","push","disconnectedCallback","connected","connectedCallback","this","parentDOMNode","innerHTML","appendChild","observe","adoptedCallback","attributeChangedCallback","attrName","oldVal","newVal","tfn","dataType","base","item","filter","addEventListener","Function","name","observer","MutationObserver","mutations","checkInnerHTML","checkStyle","mutation","attributeName","target","nodeName","parentNode","addedNodes","length","type","characterData","childList","subtree","document","querySelectorAll","el","perfCounters","cachedImagesDrawn","drawCount","perfWindowSize","entityCount","scrollDebugCounters","touchPPSCounters","fillArray","low","high","step","x","undefined","drawHtml","cell","img","v","formattedValue","cacheKey","toString","rowIndex","columnIndex","Math","round","canvasOffsetLeft","y","canvasOffsetTop","htmlImageCache","height","width","complete","ctx","drawImage","Image","onload","loaded","Object","keys","html","draw","src","btoa","radiusRect","w","h","radius","r","b","beginPath","moveTo","lineTo","quadraticCurveTo","fillRect","strokeRect","fillText","text","clipFrozenArea","mode","lastFrozenColumnPixel","lastFrozenRowPixel","clip","fillHandle","selectionHandleType","arc","PI","fill","fillCircle","strokeHandle","stroke","strokeCircle","addBorderLine","c","pos","t","l","internal","isChildGrid","parentGrid","visible","checkScrollHeight","cx","cy","treeGrid","rowOpen","rowHeight","cornerCell","rowData","aCell","my","mx","xHover","yHover","drawCorner","en","m","d","viewData","bc","gridBorderCollapse","selectionBorders","moveBorders","selectionHandles","rowHeaders","u","currentCell","columnHeaderCellHeight","getColumnHeaderCellHeight","rowHeaderCellWidth","getRowHeaderCellWidth","cellHeight","performance","now","visibleRowHeights","orders","rows","createRowOrders","save","visibleRows","getSchema","visibleCells","offsetTop","offsetLeft","fillStyle","gridBackgroundColor","ln","min","frozenRow","scrollBox","scrollLeft","scrollPixelLeft","cellBorderWidth","drawRow","allowFreezingRows","frozenMarkerBorderWidth","frozenMarkerWidth","drawFrozenRows","columnOrderIndex","rowOrderIndex","headerIndex","g","snapToRow","scrollTop","scrollPixelTop","scrollIndexTop","scrollIndexBottom","scrollPixelBottom","showNewRow","showRowHeaders","scrollIndexLeft","columns","drawCell","newRow","restore","drawRows","cl","activeCell","frozenColumn","selectionMode","lineWidth","activeCellOverlayBorderWidth","strokeStyle","activeCellOverlayBorderColor","getHeaderWidth","drawActiveCell","o","columnHeaderCell","header","nonFrozenHeaderWidth","drawHeaderColumnRange","start","end","hidden","title","cellWidth","index","order","rArgs","rhIndex","filteredRowNumber","getBoundRowIndexFromViewRowIndex","rowHeaderValue","hasActiveFilters","rowHeaderCell","headerDescription","sizes","openChildren","drawRowHeader","showColumnHeaders","columnHeaderCellBorderWidth","scrollBarWidth","isColumnHeaderCell","isColumnHeaderCellCap","endCap","drawHeaders","allowFreezingColumns","frozenMarkerHoverColor","frozenMarkerColor","frozenMarkerHoverBorderColor","frozenMarkerBorderColor","unshift","freezeMarkerPosition","frozenMarkerActiveColor","frozenMarkerActiveBorderColor","dragMode","mobile","allowMovingSelection","selectionHandleBorderWidth","selectionHandleBorderColor","selectionHandleColor","hw","selectionHandleSize","tr","br","tl","bl","addselectionHandle","az","touchSelectHandleZone","ax","ay","reorderObject","dragOffset","reorderMarkerBackgroundColor","reorderMarkerBorderWidth","reorderMarkerBorderColor","reorderMarkerIndexBorderWidth","reorderMarkerIndexBorderColor","reorderTarget","sortRowIndex","sortColumnIndex","drawReorderMarkers","movingSelection","moveOverlayBorderWidth","moveOverlayBorderColor","setLineDash","moveOverlayBorderSegments","gridBorderWidth","gridBorderColor","dsb","selectionOverlayBorderWidth","selectionOverlayBorderColor","drawSelectionBorders","entities","scrollBarBoxMargin","scrollBarBorderColor","scrollBarBorderWidth","horizontalBox","horizontalBar","scrollBoxWidth","scrollWidth","verticalBox","verticalBar","scrollBoxHeight","scrollHeight","horizontalBarVisible","scrollBarBackgroundColor","scrollBarBoxColor","horizontalBoxVisible","context","scrollBarActiveColor","scrollBarBoxBorderRadius","verticalBarVisible","verticalBoxVisible","scrollBarCornerBorderColor","scrollBarCornerBackgroundColor","corner","showPerformance","debug","pop","font","debugFont","perf","reduce","a","toFixed","perfDelta","frozenColumnsWidth","s","getColummnWidth","getFrozenColumnsWidth","htmlImages","scale","startScale","scaleDelta","zoomDeltaStart","touchLength","touches","touchPosition","touchPosition1","scrollIndex","scrollPixel","canvasOffset","touchDelta","touchAnimateTo","scrollAnimation","touchPPS","xPPS","yPPS","touchPPST","xPPST","yPPST","touchDuration","pointerLockPosition","size","mouse","touch","touchStart","hasFocus","dragContext","textAlign","debugBackgroundColor","key","debugColor","px","py","debugPerfChartBackground","debugScrollHeightColor","debugScrollWidthColor","debugPerformanceColor","debugEntitiesColor","debugTouchPPSXColor","debugTouchPPSYColor","dpl","apply","perfArr","arrIndex","max","color","useAbs","abs","drawPerfLine","debugPerfChartTextColor","drawPerfLines","createBorderOverlayArray","drawArray","propPrefix","offsetPoint","selectionBorder","isRowHeader","selections","indexOf","isHeader","cellGridAttributes","cellStyle","isCorner","isColumnHeader","wrap","cellWhiteSpace","selected","hovered","hovers","active","rawValue","isGrid","activeHeader","f","formatters","orderByArrowSize","treeArrowSize","ev","value","row","nodeType","fontHeight","horizontalAlignment","verticalAlignment","paddingLeft","paddingTop","paddingRight","paddingBottom","whiteSpace","lineHeight","cellLineHeight","lineSpacing","cellLineSpacing","offsetWidth","offsetHeight","offsetParent","viewRowIndex","viewColumnIndex","boundRowIndex","boundColumnIndex","isNormal","gridId","calculatedLineHeight","paddedWidth","paddedHeight","userHeight","userWidth","cellHeightWithChildGrid","cellWidthWithChildGrid","tree","mt","treeArrowMarginTop","mr","treeArrowMarginRight","ml","treeArrowMarginLeft","aw","treeArrowWidth","ah","treeArrowHeight","treeArrowColor","treeArrowBorderColor","drawTreeArrow","showRowNumbers","childGrids","saveAppearance","createGrid","cellGridHeight","grid","orderBy","columnHeaderOrderByArrowMarginTop","columnHeaderOrderByArrowMarginLeft","columnHeaderOrderByArrowMarginRight","columnHeaderOrderByArrowWidth","columnHeaderOrderByArrowHeight","columnHeaderOrderByArrowColor","columnHeaderOrderByArrowBorderColor","orderDirection","drawOrderByArrow","orderByArrowWidth","console","warn","columnFilters","filterTextPrefix","splitChar","lines","word","elWidth","plWidth","clippedVal","previousLine","words","split","textHeight","autoResize","autoResizeRows","et","ellipsisText","line","cHeight","measureText","measure","splice","originText","stepLength","direction","substr","wrapText","vPos","hPos","stringify","pw","idx","idx_ord","map","drawText","selectionBorderTop","selectionBorderRight","selectionHandle","selectionBorderLeft","selectionBorderBottom","selectionHandleBehavior","createHandlesOverlayArray","moveOffset","treeHeight","rowSansTreeHeight","trees","scrollIndexRight","scrollPixelRight","module","exports","defineProperty","enumerable","get","Symbol","toStringTag","__esModule","create","bind","default","hasOwnProperty","concat","modifier","legacyModifier","navigation","editing","ui","device","imeCompositionKeys","koreanSpecific","japaneseSpecific","commonFunction","multimedia","multimediaNumpad","audio","speech","application","browser","mobilePhone","tv","mediaControls","wheeling","stopPropagation","fn","events","removeEventListener","sfn","defaultPrevented","preventDefault","getRatio","maxPixelRatio","devicePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","drawAfterResize","dims","vb","nb","co","isScrollBoxCorner","sbw","ratio","bm","cellBorder","columnHeaderCellBorder","dataHeight","dataWidth","ch","scrollCache","accumulator","column","va","setCanvasSize","args","top","left","setScrollBoxSize","checkScrollBoxVisibility","widthBoxRatio","heightBoxRatio","scrollBarBoxMinSize","scrollBarBoxWidth","bar","box","page","pageUpDownOverlap","resizeEditInput","scroll","overflowX","overflowY","dim","appliedInlineStyles","parentNodeStyle","dontDraw","floor","ellipsisCache","mousemove","overridePos","contextMenu","input","getLayerPos","dragBounds","sBounds","delta","ctrl","ctrlKey","metaKey","persistantSelectionMode","singleSelectionMode","getCellAt","NativeEvent","previousCell","clearTimeout","scrollTimer","isInGrid","rowBoundaryCrossed","columnBoundaryCrossed","cellBoundaryCrossed","prefix","draggingItem","scrollModes","dragItem","cursor","selecting","dragStart","dragStartObject","shiftKey","bottom","right","getSelectionBounds","ignoreNextClick","dragAddToSelection","selectRow","selectionBounds","selectArea","autoScrollZone","click","startingBounds","endEdit","setActiveCell","selectAll","checkSelectionChange","columnHeaderClickBehavior","selectColumn","treeArrowClickRadius","toggleTree","sb","getSelectedData","dragResizeColumn","resizingStartingWidth","resizingStartingHeight","minColumnWidth","minRowHeight","resizeScrollZone","resizeChildGrids","globalRowResize","stopDragResize","body","setStorageData","scrollGrid","scrollPointerLock","scrollStartMode","movementX","movementY","scrollMode","scrollStart","setTimeout","scrollRepeatRate","selectionScrollIncrement","stopScrollGrid","exitPointerLock","dragReorder","columReorder","rowReorder","allowColumnReordering","allowRowReordering","source","reorderDeadZone","stopDragReorder","oIndex","tIndex","cr","dragMove","stopDragMove","moveSelection","freezeMove","stopFreezeMove","startFreezeMove","mousedown","lastMouseDownTarget","button","move","freeze","requestPointerLock","dragging","mouseup","controlInput","focus","getAdjacentCells","first","last","keydown","adjacentCells","cols","isPrintableKeyEvent","beginEditAt","selectNone","Number","isArrowKey","includes","scrollIntoView","selectionFollowsActiveCell","selectedData","keyup","keypress","dblclick","fitColumnToValues","autosize","scrollWheel","deltaX","deltaY","deltaMode","touchHaltAnimation","scrollTo","pasteData","pasteValue","mimeType","startRowIndex","startColIndex","getVisibleSchema","isSupportedHtmlTable","htmlString","substring","match","parseData","cellData","forEachSelectedCell","colName","realRowIndex","cells","existingRowData","newRowData","assign","colIndex","columnName","originalData","affectedCells","refresh","getNextVisibleColumnIndex","visibleColumnIndex","getVisibleColumnIndexOf","paste","event","editable","clipboardItems","Map","from","clipboardData","items","supportedMimeTypes","pasteableItems","itemToPaste","pasteType","getAsString","join","cut","copy","outputHeaderKeys","tableRows","textRows","outputHeaders","sData","rowKeys","trRow","textRow","sSorted","fCopyCell","addCellValue","addHeaders","setData","htmlSafe","headers","useHtml","hVal","touchMoving","touchScrollTimeout","animationFrames","getTouchPos","touchIndex","rect","getBoundingClientRect","clientX","clientY","easingFunctions","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easing","touchEasingMethod","calculatePPSTimed","touchSigmaTimed","calculatePPS","touchSigma","touchEndAnimation","touchReleaseAnimationDurationMs","stopAnimation","touchEditCell","touchCell","clearInterval","calculatePPSTimer","touchDeadZone","touchingCell","editCell","touchstart","changedTouches","startingCell","disposeContextMenu","touchContextTimeout","touchStartEvent","zoomAltered","touchStart1","touchScrollStart","contextmenuEvent","touchContextMenuTimeMs","setInterval","touchEndEvents","touchmove","passive","touchend","touchcancel","touchSelect","handleType","touchSelecting","bounds","rw","rScrollZone","lScrollZone","bScrollZone","tScrollZone","t1","t2","touchZoomSensitivity","touchZoomMin","touchZoomMax","selectionScrollZone","touchScroll","touchMove","dz","touchReleaseAcceleration","scrollAnimationPPSThreshold","ctor","treeGridAttributes","storageName","invalidSearchExpClass","localStyleLibraryStorageKey","orderings","add","sortFunction","col","sort","filters","currentFilter","sorters","parsers","schemaHashes","changes","componentL1Events","eventNames","expandToRow","viewDataLength","orderedIndex","boundRowIndexMap","has","visibility","localStorage","setItem","tempSchema","createColumnOrders","applyDefaultValue","defaultValue","createNewRowData","getSchemaNameHash","getFilteredAndSortedViewData","newViewData","originalRowIndex","headerName","filterText","getHeaderByName","currentFilterFunction","cellValue","entries","sortFn","rowA","rowB","getBestGuessDataType","drawChildGrids","gridKey","setTimer","validateColumn","setDefaults","obj1","obj2","setAttributes","setStyle","findColumnMaxTextLength","dispose","removeChild","eventParent","contextmenu","disconnect","tryLoadStoredSettings","reloadStoredValues","storedSettings","_typeof","getDomRoot","shadowRoot","host","getFontName","fontStyle","getFontHeight","parseFloat","parseStyleValue","initProp","propName","getStyleProperty","styleKeys","supressDrawAndEvent","isDim","getItem","message","init","initialized","publicStyleKeyIntf","initScrollBox","setDom","ie","navigator","userAgent","edge","webKit","moz","blankValues","cursorGrab","cursorGrabing","cursorGrabbing","appendTo","getVisibleCellByIndex","clearChangeLog","gotoCell","gotoRow","findColumnScrollLeft","findRowScrollTop","isCellVisible","isRowVisible","isColumnVisible","clipElement","getSchemaFromData","setFilter","expandTree","collapseTree","insertRow","deleteRow","addRow","insertColumn","deleteColumn","addColumn","getClippingRect","setRowHeight","setColumnWidth","resetColumnWidths","resetRowHeights","assertPxColor","clearPxColorAssertions","integerToAlpha","addStyleKeyIfNoneExists","DOMStyles","set","valueObject","filterFor","blanksText","String","trim","filterRegExp","pattern","exec","flags","flagLength","invalidFilterRegEx","RegExp","toLocaleUpperCase","innerText","textContent","blur","TypeError","currentCursor","find","eventName","RangeError","isArray","getTypes","parseInnerHtml","callback","etl","autoGenerateSchema","autoResizeColumns","sHeight","sWidth","setScrollTop","preventScrollEvent","setScrollLeft","supressDrawEvent","zIndexTop","hoverScrollTimeout","autoCompleteContext","applyContextItemStyle","contextItemContainer","createInlineStyle","createContextMenu","parentContextMenu","loc","container","createElement","upArrow","downArrow","children","selectedIndex","checkArrowVisibility","startHoverScroll","contextHoverScrollAmount","contextHoverScrollRateMs","endHoverScroll","scrollOffset","contextMenuZIndex","childMenuArrow","removeChildContext","relatedTarget","contains","setAttribute","contextAddCallback","getAttribute","cPos","childContextMenuMarginLeft","childContextMenuMarginTop","createChildContext","addContent","content","childContextMenuArrowHTML","addItem","position","contextMenuArrowColor","zIndex","inputDropdown","maxHeight","innerHeight","autocompleteBottomMargin","minWidth","contextMenuArrowUpHTML","contextMenuArrowDownHTML","contextMenuWindowMargin","innerWidth","clickIndex","Event","isFinite","createFilterContextMenuItems","iRect","filterContainer","filterLabel","filterAutoCompleteButton","filterInput","checkRegExpErrorState","background","contextFilterInputBackground","contextFilterInputColor","contextFilterInvalidRegExpBackground","contextFilterInvalidRegExpColor","createAutoCompleteContext","count","blanksItem","autoCompleteItems","maxAutoCompleteItems","disposeAutocomplete","onclick","filterOptionText","contextFilterButtonHTML","cf","removeFilterOptionText","contextPosition","isNormalCell","isBackground","isScrollBar","showFilter","showCopy","copyText","execCommand","showPaste","clipBoardData","pasteText","showColumnSelector","columnSelectorText","toggleColumnVisibility","columnSelectorHiddenText","columnSelectorVisibleText","hideColumnText","showClearSettingsOption","clearSettingsOptionText","columnWidth","allowSorting","showOrderByOption","showOrderByOptionTextAsc","showOrderByOptionTextDesc","addDefaultContextMenuItem","contextMenuMarginLeft","contextMenuMarginTop","mobileContextMenuMargin","createDiposeEvent","ele","boundingRect","eleRect","clipRect","parentRect","Infinity","scrollingElement","borderWidth","mobileEditInputHeight","cellPaddingLeft","ignoreScrollOffset","abort","newValue","oldValue","aborted","inEnterMode","enumItems","enu","option","valueInEnum","multiLine","editCellZIndex","fontSize","editCellFontSize","cellValueIsEmpty","shouldClearCellValue","nx","ny","altKey","nextRowIndex","className","css","verticalAlign","marginLeft","padding","border","contextFilterInputBorder","borderRadius","contextFilterInputBorderRadius","fontWeight","fontFamily","contextFilterInputFontFamily","contextFilterInputFontSize","contextMenuBackground","contextMenuColor","contextFilterButtonBorder","contextFilterButtonBorderRadius","contextMenuFilterButtonFontFamily","contextMenuFilterButtonFontSize","cssFloat","childContextMenuArrowColor","contextMenuChildArrowFontSize","contextMenuFontFamily","contextMenuFontSize","contextMenuBorder","contextMenuPadding","contextMenuBorderRadius","opacity","contextMenuOpacity","overflow","contextMenuHoverBackground","contextMenuHoverColor","display","boxSizing","outline","margin","mobileEditFontFamily","mobileEditFontSize","editCellBorder","editCellColor","editCellBackgroundColor","appearance","webkitAppearance","mozAppearance","editCellPaddingLeft","editCellFontFamily","boxShadow","editCellBoxShadow","contextMenuItemMargin","contextMenuItemBorderRadius","contextMenuLabelMargin","contextMenuLabelDisplay","contextMenuLabelMinWidth","maxWidth","contextMenuLabelMaxWidth","contextMenuCursor","contextMenuFilterInvalidExpresion","onblur","parentIsCanvas","getContext","textBaseline","ordA","charCodeAt","len","fromCharCode","offsetX","offsetY","targetX","targetY","sbh","isColumnSelected","colIsSelected","shift","supressEvent","addCol","st","de","ri","dragObject","childGrid","trArgs","treeGridHeight","dontSetStorageData","sorter","sel","xi","visibleSchema","selectionLength","maxRowLength","minXi","yi","lastSourceIndex","cidx","useTouchScrollZones","getBorder","entitiy","borderResizeZone","moveBorder","tsz","touchScrollZone","moveMode","borderDragBehavior","xBorderBehavior","yBorderBehavior","isVerticalScrollBar","isHorizontalScrollBar","allowColumnResize","allowColumnResizeFromCell","allowRowHeaderResize","allowRowResize","allowRowResizeFromCell","rowGrabZoneSize","maxCol","minCol","rowHeaderCellFont","autosizePadding","autosizeHeaderCellPadding","rowHeaderCellPaddingRight","rowHeaderCellPaddingLeft","formatter","columnHeaderCellFont","headerCellPaddingRight","headerCellPaddingLeft","cellFont","cellPaddingRight","cellAutoResizePadding","total","getRowHeight","headerCell","int","asc","localeCompare","date","Date","getTime","webComponent","modules","dom","publicMethods","Grid","eval","attachShadow","canvasDatagrid","tKeys","customElements","argKey","tKey","sKey","HTMLElement","observedAttributes","define","require"],"mappings":"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"}